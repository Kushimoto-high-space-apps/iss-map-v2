(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var timespace = require('@mapbox/timespace');
window.timespace = timespace
},{"@mapbox/timespace":3}],2:[function(require,module,exports){
'use strict';

var d2r = Math.PI / 180,
    r2d = 180 / Math.PI;

/**
 * Get the bbox of a tile
 *
 * @name tileToBBOX
 * @param {Array<number>} tile
 * @returns {Array<number>} bbox
 * @example
 * var bbox = tileToBBOX([5, 10, 10])
 * //=bbox
 */
function tileToBBOX(tile) {
    var e = tile2lon(tile[0] + 1, tile[2]);
    var w = tile2lon(tile[0], tile[2]);
    var s = tile2lat(tile[1] + 1, tile[2]);
    var n = tile2lat(tile[1], tile[2]);
    return [w, s, e, n];
}

/**
 * Get a geojson representation of a tile
 *
 * @name tileToGeoJSON
 * @param {Array<number>} tile
 * @returns {Feature<Polygon>}
 * @example
 * var poly = tileToGeoJSON([5, 10, 10])
 * //=poly
 */
function tileToGeoJSON(tile) {
    var bbox = tileToBBOX(tile);
    var poly = {
        type: 'Polygon',
        coordinates: [[
            [bbox[0], bbox[3]],
            [bbox[0], bbox[1]],
            [bbox[2], bbox[1]],
            [bbox[2], bbox[3]],
            [bbox[0], bbox[3]]
        ]]
    };
    return poly;
}

function tile2lon(x, z) {
    return x / Math.pow(2, z) * 360 - 180;
}

function tile2lat(y, z) {
    var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);
    return r2d * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));
}

/**
 * Get the tile for a point at a specified zoom level
 *
 * @name pointToTile
 * @param {number} lon
 * @param {number} lat
 * @param {number} z
 * @returns {Array<number>} tile
 * @example
 * var tile = pointToTile(1, 1, 20)
 * //=tile
 */
function pointToTile(lon, lat, z) {
    var tile = pointToTileFraction(lon, lat, z);
    tile[0] = Math.floor(tile[0]);
    tile[1] = Math.floor(tile[1]);
    return tile;
}

/**
 * Get the 4 tiles one zoom level higher
 *
 * @name getChildren
 * @param {Array<number>} tile
 * @returns {Array<Array<number>>} tiles
 * @example
 * var tiles = getChildren([5, 10, 10])
 * //=tiles
 */
function getChildren(tile) {
    return [
        [tile[0] * 2, tile[1] * 2, tile[2] + 1],
        [tile[0] * 2 + 1, tile[1] * 2, tile[2 ] + 1],
        [tile[0] * 2 + 1, tile[1] * 2 + 1, tile[2] + 1],
        [tile[0] * 2, tile[1] * 2 + 1, tile[2] + 1]
    ];
}

/**
 * Get the tile one zoom level lower
 *
 * @name getParent
 * @param {Array<number>} tile
 * @returns {Array<number>} tile
 * @example
 * var tile = getParent([5, 10, 10])
 * //=tile
 */
function getParent(tile) {
    return [tile[0] >> 1, tile[1] >> 1, tile[2] - 1];
}

function getSiblings(tile) {
    return getChildren(getParent(tile));
}

/**
 * Get the 3 sibling tiles for a tile
 *
 * @name getSiblings
 * @param {Array<number>} tile
 * @returns {Array<Array<number>>} tiles
 * @example
 * var tiles = getSiblings([5, 10, 10])
 * //=tiles
 */
function hasSiblings(tile, tiles) {
    var siblings = getSiblings(tile);
    for (var i = 0; i < siblings.length; i++) {
        if (!hasTile(tiles, siblings[i])) return false;
    }
    return true;
}

/**
 * Check to see if an array of tiles contains a particular tile
 *
 * @name hasTile
 * @param {Array<Array<number>>} tiles
 * @param {Array<number>} tile
 * @returns {boolean}
 * @example
 * var tiles = [
 *     [0, 0, 5],
 *     [0, 1, 5],
 *     [1, 1, 5],
 *     [1, 0, 5]
 * ]
 * hasTile(tiles, [0, 0, 5])
 * //=boolean
 */
function hasTile(tiles, tile) {
    for (var i = 0; i < tiles.length; i++) {
        if (tilesEqual(tiles[i], tile)) return true;
    }
    return false;
}

/**
 * Check to see if two tiles are the same
 *
 * @name tilesEqual
 * @param {Array<number>} tile1
 * @param {Array<number>} tile2
 * @returns {boolean}
 * @example
 * tilesEqual([0, 1, 5], [0, 0, 5])
 * //=boolean
 */
function tilesEqual(tile1, tile2) {
    return (
        tile1[0] === tile2[0] &&
        tile1[1] === tile2[1] &&
        tile1[2] === tile2[2]
    );
}

/**
 * Get the quadkey for a tile
 *
 * @name tileToQuadkey
 * @param {Array<number>} tile
 * @returns {string} quadkey
 * @example
 * var quadkey = tileToQuadkey([0, 1, 5])
 * //=quadkey
 */
function tileToQuadkey(tile) {
    var index = '';
    for (var z = tile[2]; z > 0; z--) {
        var b = 0;
        var mask = 1 << (z - 1);
        if ((tile[0] & mask) !== 0) b++;
        if ((tile[1] & mask) !== 0) b += 2;
        index += b.toString();
    }
    return index;
}

/**
 * Get the tile for a quadkey
 *
 * @name quadkeyToTile
 * @param {string} quadkey
 * @returns {Array<number>} tile
 * @example
 * var tile = quadkeyToTile('00001033')
 * //=tile
 */
function quadkeyToTile(quadkey) {
    var x = 0;
    var y = 0;
    var z = quadkey.length;

    for (var i = z; i > 0; i--) {
        var mask = 1 << (i - 1);
        var q = +quadkey[z - i];
        if (q === 1) x |= mask;
        if (q === 2) y |= mask;
        if (q === 3) {
            x |= mask;
            y |= mask;
        }
    }
    return [x, y, z];
}

/**
 * Get the smallest tile to cover a bbox
 *
 * @name bboxToTile
 * @param {Array<number>} bbox
 * @returns {Array<number>} tile
 * @example
 * var tile = bboxToTile([ -178, 84, -177, 85 ])
 * //=tile
 */
function bboxToTile(bboxCoords) {
    var min = pointToTile(bboxCoords[0], bboxCoords[1], 32);
    var max = pointToTile(bboxCoords[2], bboxCoords[3], 32);
    var bbox = [min[0], min[1], max[0], max[1]];

    var z = getBboxZoom(bbox);
    if (z === 0) return [0, 0, 0];
    var x = bbox[0] >>> (32 - z);
    var y = bbox[1] >>> (32 - z);
    return [x, y, z];
}

function getBboxZoom(bbox) {
    var MAX_ZOOM = 28;
    for (var z = 0; z < MAX_ZOOM; z++) {
        var mask = 1 << (32 - (z + 1));
        if (((bbox[0] & mask) !== (bbox[2] & mask)) ||
            ((bbox[1] & mask) !== (bbox[3] & mask))) {
            return z;
        }
    }

    return MAX_ZOOM;
}

/**
 * Get the precise fractional tile location for a point at a zoom level
 *
 * @name pointToTileFraction
 * @param {number} lon
 * @param {number} lat
 * @param {number} z
 * @returns {Array<number>} tile fraction
 * var tile = pointToTileFraction(30.5, 50.5, 15)
 * //=tile
 */
function pointToTileFraction(lon, lat, z) {
    var sin = Math.sin(lat * d2r),
        z2 = Math.pow(2, z),
        x = z2 * (lon / 360 + 0.5),
        y = z2 * (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);

    // Wrap Tile X
    x = x % z2;
    if (x < 0) x = x + z2;
    return [x, y, z];
}

module.exports = {
    tileToGeoJSON: tileToGeoJSON,
    tileToBBOX: tileToBBOX,
    getChildren: getChildren,
    getParent: getParent,
    getSiblings: getSiblings,
    hasTile: hasTile,
    hasSiblings: hasSiblings,
    tilesEqual: tilesEqual,
    tileToQuadkey: tileToQuadkey,
    quadkeyToTile: quadkeyToTile,
    pointToTile: pointToTile,
    bboxToTile: bboxToTile,
    pointToTileFraction: pointToTileFraction
};

},{}],3:[function(require,module,exports){
var tiles = require('./lib/timezones.json');
var tilebelt = require('@mapbox/tilebelt');
var moment = require('moment-timezone');
var ss = require('simple-statistics');

var z = Object.keys(tiles)[0].split('/').map(Number)[2];

module.exports = {
  getFuzzyLocalTimeFromPoint: getFuzzyLocalTimeFromPoint,
  getFuzzyTimezoneFromTile: getFuzzyTimezoneFromTile,
  getFuzzyTimezoneFromQuadkey: getFuzzyTimezoneFromQuadkey,
  _getParent: _getParent,      // expose for testing
  _getChildren: _getChildren   // expose for testing
};

/**
 * Returns the local time at the point of interest.
 * @param  {Integer} timestamp   a unix timestamp
 * @param  {Array}   point       a [lng, lat] point of interest
 * @return {Object}              a moment-timezone object
 */
function getFuzzyLocalTimeFromPoint(timestamp, point) {
  var tile = tilebelt.pointToTile(point[0], point[1], z).join('/');
  var locale = tiles[tile];

  if (locale) return moment.tz(new Date(timestamp), locale);
  else return undefined;
}

/**
 * Retrieves the timezone of the tile of interest at z8-level accuracy.
 * @param  {Array}  tile   [x, y, z] coordinate of a tile
 * @return {String}        timezone for the tile
 */
function getFuzzyTimezoneFromTile(tile) {
  if (tile[2] === z) {
    var key = tile.join('/');
    if (key in tiles) return tiles[key];
    else throw new Error('tile not found');

  } else if (tile[2] > z) {
    // higher zoom level (9, 10, 11, ...)
    key = _getParent(tile).join('/');
    if (key in tiles) return tiles[key];
    else throw new Error('tile not found');

  } else {
    // lower zoom level (..., 5, 6, 7)
    var children = _getChildren(tile);
    var votes = [];  // list of timezone abbrevations
    var abbrs = {};  // abbrevation to full name lookup table
    children.forEach(function(child) {
      key = child.join('/');
      if (key in tiles) {
        var tz = tiles[key];   // timezone name

        // Need to use timezone abbreviation becuase e.g. America/Los_Angeles
        // and America/Vancouver are the same. Use a time to determine the
        // abbreviation, in case two similar tz have slightly different
        // daylight savings schedule.
        var abbr = moment.tz(Date.now(), tz)._z.abbrs[0];
        votes.push(abbr);
        abbrs[abbr] = tz;
      }
    });

    if (votes.length > 1) return abbrs[ss.mode(votes)];
    else throw new Error('tile not found');
  }
}

/**
 * Retrieves the timezone of the quadkey of interest at z8-level accuracy.
 * @param  {Array}  quadkey   a quadkey
 * @return {String}           timezone for the quadkey
 */
function getFuzzyTimezoneFromQuadkey(quadkey) {
  var tile = tilebelt.quadkeyToTile(quadkey);
  return getFuzzyTimezoneFromTile(tile);
}

/**
 * [private function]
 */
function _getParent(tile) {
  if (tile[2] < z) throw new Error('input tile zoom < ' + z);
  if (tile[2] > z) return _getParent(tilebelt.getParent(tile));
  else return tile;
}

/**
 * [private function]
 */
function _getChildren(tile) {
  if (tile[2] > z) throw new Error('input tile zoom > ' + z);
  if (tile[2] === z) return [tile];

  var children = tilebelt.getChildren(tile);
  return _getChildren(children[0])
         .concat(_getChildren(children[1]))
         .concat(_getChildren(children[2]))
         .concat(_getChildren(children[3]));
}

},{"./lib/timezones.json":4,"@mapbox/tilebelt":2,"moment-timezone":6,"simple-statistics":9}],4:[function(require,module,exports){
module.exports={"123/121/8":"Africa/Abidjan","123/122/8":"Africa/Abidjan","124/122/8":"Africa/Abidjan","123/123/8":"Africa/Abidjan","124/123/8":"Africa/Abidjan","122/120/8":"Africa/Bamako","123/120/8":"Africa/Bamako","124/120/8":"Africa/Ouagadougou","125/120/8":"Africa/Ouagadougou","122/121/8":"Africa/Abidjan","124/121/8":"Africa/Abidjan","125/121/8":"Africa/Abidjan","126/121/8":"Africa/Accra","121/122/8":"Africa/Conakry","122/122/8":"Africa/Abidjan","125/122/8":"Africa/Abidjan","126/122/8":"Africa/Accra","121/123/8":"Africa/Monrovia","122/123/8":"Africa/Abidjan","125/123/8":"Africa/Abidjan","126/123/8":"Africa/Accra","122/124/8":"Africa/Monrovia","123/124/8":"Africa/Abidjan","124/124/8":"Africa/Abidjan","125/124/8":"Africa/Abidjan","126/124/8":"Africa/Accra","122/125/8":"Africa/Monrovia","127/121/8":"Africa/Accra","127/122/8":"Africa/Accra","127/123/8":"Africa/Accra","126/120/8":"Africa/Accra","127/120/8":"Africa/Accra","128/120/8":"Africa/Lome","128/121/8":"Africa/Lome","128/122/8":"Africa/Lome","128/123/8":"Africa/Accra","127/124/8":"Africa/Accra","128/124/8":"Africa/Accra","154/118/8":"Africa/Addis_Ababa","155/118/8":"Africa/Addis_Ababa","156/118/8":"Africa/Addis_Ababa","154/119/8":"Africa/Addis_Ababa","155/119/8":"Africa/Addis_Ababa","156/119/8":"Africa/Addis_Ababa","153/120/8":"Africa/Addis_Ababa","154/120/8":"Africa/Addis_Ababa","155/120/8":"Africa/Addis_Ababa","156/120/8":"Africa/Addis_Ababa","153/121/8":"Africa/Addis_Ababa","154/121/8":"Africa/Addis_Ababa","155/121/8":"Africa/Addis_Ababa","156/121/8":"Africa/Addis_Ababa","157/121/8":"Africa/Addis_Ababa","153/122/8":"Africa/Addis_Ababa","154/122/8":"Africa/Addis_Ababa","155/122/8":"Africa/Addis_Ababa","156/122/8":"Africa/Addis_Ababa","157/122/8":"Africa/Addis_Ababa","158/122/8":"Africa/Addis_Ababa","159/122/8":"Africa/Addis_Ababa","153/123/8":"Africa/Addis_Ababa","154/123/8":"Africa/Addis_Ababa","155/123/8":"Africa/Addis_Ababa","156/123/8":"Africa/Addis_Ababa","157/123/8":"Africa/Addis_Ababa","158/123/8":"Africa/Addis_Ababa","159/123/8":"Africa/Addis_Ababa","155/124/8":"Africa/Addis_Ababa","153/117/8":"Africa/Khartoum","154/117/8":"Africa/Asmara","155/117/8":"Africa/Asmara","156/117/8":"Africa/Asmara","157/117/8":"Africa/Asmara","153/118/8":"Africa/Khartoum","157/118/8":"Africa/Addis_Ababa","158/118/8":"Africa/Asmara","152/119/8":"Africa/Khartoum","153/119/8":"Africa/Addis_Ababa","157/119/8":"Africa/Addis_Ababa","158/119/8":"Africa/Djibouti","152/120/8":"Africa/Addis_Ababa","157/120/8":"Africa/Addis_Ababa","158/120/8":"Africa/Mogadishu","151/121/8":"Africa/Juba","152/121/8":"Africa/Addis_Ababa","158/121/8":"Africa/Addis_Ababa","159/121/8":"Africa/Mogadishu","160/121/8":"Africa/Mogadishu","151/122/8":"Africa/Juba","152/122/8":"Africa/Addis_Ababa","160/122/8":"Africa/Addis_Ababa","161/122/8":"Africa/Addis_Ababa","162/122/8":"Africa/Mogadishu","152/123/8":"Africa/Juba","160/123/8":"Africa/Addis_Ababa","161/123/8":"Africa/Mogadishu","152/124/8":"Africa/Juba","153/124/8":"Africa/Addis_Ababa","154/124/8":"Africa/Addis_Ababa","156/124/8":"Africa/Addis_Ababa","157/124/8":"Africa/Addis_Ababa","158/124/8":"Africa/Addis_Ababa","159/124/8":"Africa/Mogadishu","160/124/8":"Africa/Mogadishu","154/125/8":"Africa/Nairobi","155/125/8":"Africa/Nairobi","156/125/8":"Africa/Nairobi","157/125/8":"Africa/Mogadishu","158/125/8":"Africa/Mogadishu","129/100/8":"Africa/Algiers","130/100/8":"Africa/Algiers","131/100/8":"Africa/Algiers","132/100/8":"Africa/Algiers","127/101/8":"Africa/Algiers","128/101/8":"Africa/Algiers","129/101/8":"Africa/Algiers","130/101/8":"Africa/Algiers","131/101/8":"Africa/Algiers","132/101/8":"Africa/Algiers","127/102/8":"Africa/Algiers","128/102/8":"Africa/Algiers","129/102/8":"Africa/Algiers","130/102/8":"Africa/Algiers","131/102/8":"Africa/Algiers","132/102/8":"Africa/Algiers","128/103/8":"Africa/Algiers","129/103/8":"Africa/Algiers","130/103/8":"Africa/Algiers","131/103/8":"Africa/Algiers","132/103/8":"Africa/Algiers","126/104/8":"Africa/Algiers","127/104/8":"Africa/Algiers","128/104/8":"Africa/Algiers","129/104/8":"Africa/Algiers","130/104/8":"Africa/Algiers","131/104/8":"Africa/Algiers","132/104/8":"Africa/Algiers","133/104/8":"Africa/Algiers","126/105/8":"Africa/Algiers","127/105/8":"Africa/Algiers","128/105/8":"Africa/Algiers","129/105/8":"Africa/Algiers","130/105/8":"Africa/Algiers","131/105/8":"Africa/Algiers","132/105/8":"Africa/Algiers","133/105/8":"Africa/Algiers","125/106/8":"Africa/Algiers","126/106/8":"Africa/Algiers","127/106/8":"Africa/Algiers","128/106/8":"Africa/Algiers","129/106/8":"Africa/Algiers","130/106/8":"Africa/Algiers","131/106/8":"Africa/Algiers","132/106/8":"Africa/Algiers","133/106/8":"Africa/Algiers","123/107/8":"Africa/Algiers","124/107/8":"Africa/Algiers","125/107/8":"Africa/Algiers","126/107/8":"Africa/Algiers","127/107/8":"Africa/Algiers","128/107/8":"Africa/Algiers","129/107/8":"Africa/Algiers","130/107/8":"Africa/Algiers","131/107/8":"Africa/Algiers","132/107/8":"Africa/Algiers","133/107/8":"Africa/Algiers","124/108/8":"Africa/Algiers","125/108/8":"Africa/Algiers","126/108/8":"Africa/Algiers","127/108/8":"Africa/Algiers","128/108/8":"Africa/Algiers","129/108/8":"Africa/Algiers","130/108/8":"Africa/Algiers","131/108/8":"Africa/Algiers","132/108/8":"Africa/Algiers","133/108/8":"Africa/Algiers","126/109/8":"Africa/Algiers","127/109/8":"Africa/Algiers","128/109/8":"Africa/Algiers","129/109/8":"Africa/Algiers","130/109/8":"Africa/Algiers","131/109/8":"Africa/Algiers","132/109/8":"Africa/Algiers","133/109/8":"Africa/Algiers","127/110/8":"Africa/Algiers","128/110/8":"Africa/Algiers","129/110/8":"Africa/Algiers","130/110/8":"Africa/Algiers","131/110/8":"Africa/Algiers","132/110/8":"Africa/Algiers","133/110/8":"Africa/Algiers","134/110/8":"Africa/Algiers","128/111/8":"Africa/Algiers","129/111/8":"Africa/Algiers","130/111/8":"Africa/Algiers","131/111/8":"Africa/Algiers","132/111/8":"Africa/Algiers","133/111/8":"Africa/Algiers","130/112/8":"Africa/Algiers","131/112/8":"Africa/Algiers","132/112/8":"Africa/Algiers","128/99/8":"Africa/Algiers","129/99/8":"Africa/Algiers","130/99/8":"Africa/Algiers","131/99/8":"Africa/Algiers","132/99/8":"Africa/Algiers","133/99/8":"Africa/Algiers","134/99/8":"Africa/Tunis","126/100/8":"Europe/Madrid","127/100/8":"Africa/Algiers","128/100/8":"Africa/Algiers","133/100/8":"Africa/Algiers","126/101/8":"Africa/Casablanca","133/101/8":"Africa/Algiers","134/101/8":"Africa/Tunis","126/102/8":"Africa/Casablanca","133/102/8":"Africa/Tunis","125/103/8":"Africa/Casablanca","126/103/8":"Africa/Casablanca","127/103/8":"Africa/Algiers","133/103/8":"Africa/Algiers","134/103/8":"Africa/Tunis","125/104/8":"Africa/Casablanca","134/104/8":"Africa/Algiers","123/105/8":"Africa/Casablanca","124/105/8":"Africa/Casablanca","125/105/8":"Africa/Algiers","134/105/8":"Africa/Algiers","121/106/8":"Africa/Casablanca","122/106/8":"Africa/Algiers","123/106/8":"Africa/Algiers","124/106/8":"Africa/Algiers","134/106/8":"Africa/Algiers","135/106/8":"Africa/Tripoli","121/107/8":"Africa/Casablanca","122/107/8":"Africa/Algiers","134/107/8":"Africa/Algiers","135/107/8":"Africa/Tripoli","122/108/8":"Africa/Nouakchott","123/108/8":"Africa/Algiers","134/108/8":"Africa/Algiers","135/108/8":"Africa/Tripoli","123/109/8":"Africa/Nouakchott","124/109/8":"Africa/Algiers","125/109/8":"Africa/Algiers","134/109/8":"Africa/Algiers","135/109/8":"Africa/Tripoli","125/110/8":"Africa/Bamako","126/110/8":"Africa/Algiers","135/110/8":"Africa/Algiers","136/110/8":"Africa/Tripoli","126/111/8":"Africa/Bamako","127/111/8":"Africa/Algiers","134/111/8":"Africa/Algiers","135/111/8":"Africa/Niamey","136/111/8":"Africa/Niamey","127/112/8":"Africa/Bamako","128/112/8":"Africa/Bamako","129/112/8":"Africa/Algiers","133/112/8":"Africa/Algiers","134/112/8":"Africa/Niamey","129/113/8":"Africa/Bamako","130/113/8":"Africa/Algiers","131/113/8":"Africa/Algiers","132/113/8":"Africa/Algiers","133/113/8":"Africa/Niamey","130/114/8":"Africa/Bamako","131/114/8":"Africa/Niamey","155/116/8":"Africa/Asmara","155/114/8":"Africa/Khartoum","154/115/8":"Africa/Khartoum","155/115/8":"Africa/Asmara","156/115/8":"Africa/Asmara","153/116/8":"Africa/Khartoum","154/116/8":"Africa/Asmara","156/116/8":"Africa/Asmara","157/116/8":"Asia/Aden","158/117/8":"Asia/Aden","124/110/8":"Africa/Bamako","124/111/8":"Africa/Bamako","125/111/8":"Africa/Bamako","124/112/8":"Africa/Bamako","125/112/8":"Africa/Bamako","126/112/8":"Africa/Bamako","124/113/8":"Africa/Bamako","125/113/8":"Africa/Bamako","126/113/8":"Africa/Bamako","127/113/8":"Africa/Bamako","128/113/8":"Africa/Bamako","124/114/8":"Africa/Bamako","125/114/8":"Africa/Bamako","126/114/8":"Africa/Bamako","127/114/8":"Africa/Bamako","128/114/8":"Africa/Bamako","129/114/8":"Africa/Bamako","125/115/8":"Africa/Bamako","126/115/8":"Africa/Bamako","127/115/8":"Africa/Bamako","128/115/8":"Africa/Bamako","129/115/8":"Africa/Bamako","125/116/8":"Africa/Bamako","126/116/8":"Africa/Bamako","127/116/8":"Africa/Bamako","128/116/8":"Africa/Bamako","121/117/8":"Africa/Bamako","122/117/8":"Africa/Bamako","123/117/8":"Africa/Bamako","124/117/8":"Africa/Bamako","120/118/8":"Africa/Bamako","121/118/8":"Africa/Bamako","122/118/8":"Africa/Bamako","123/118/8":"Africa/Bamako","123/119/8":"Africa/Bamako","123/110/8":"Africa/Bamako","123/111/8":"Africa/Nouakchott","123/112/8":"Africa/Nouakchott","123/113/8":"Africa/Nouakchott","123/114/8":"Africa/Nouakchott","123/115/8":"Africa/Nouakchott","124/115/8":"Africa/Bamako","130/115/8":"Africa/Bamako","131/115/8":"Africa/Niamey","119/116/8":"Africa/Nouakchott","120/116/8":"Africa/Nouakchott","121/116/8":"Africa/Nouakchott","122/116/8":"Africa/Nouakchott","123/116/8":"Africa/Nouakchott","124/116/8":"Africa/Bamako","129/116/8":"Africa/Bamako","130/116/8":"Africa/Bamako","119/117/8":"Africa/Bamako","120/117/8":"Africa/Bamako","125/117/8":"Africa/Bamako","126/117/8":"Africa/Bamako","127/117/8":"Africa/Ouagadougou","128/117/8":"Africa/Niamey","129/117/8":"Africa/Niamey","119/118/8":"Africa/Dakar","124/118/8":"Africa/Bamako","125/118/8":"Africa/Ouagadougou","119/119/8":"Africa/Conakry","120/119/8":"Africa/Conakry","121/119/8":"Africa/Conakry","122/119/8":"Africa/Bamako","124/119/8":"Africa/Ouagadougou","121/120/8":"Africa/Conakry","142/122/8":"Africa/Bangui","143/122/8":"Africa/Bangui","144/122/8":"Africa/Bangui","139/123/8":"Africa/Bangui","140/123/8":"Africa/Bangui","141/123/8":"Africa/Bangui","142/123/8":"Africa/Bangui","143/123/8":"Africa/Bangui","144/123/8":"Africa/Bangui","145/123/8":"Africa/Bangui","139/124/8":"Africa/Bangui","140/124/8":"Africa/Bangui","143/120/8":"Africa/Ndjamena","144/120/8":"Africa/Bangui","141/121/8":"Africa/Ndjamena","142/121/8":"Africa/Bangui","143/121/8":"Africa/Bangui","144/121/8":"Africa/Bangui","145/121/8":"Africa/Juba","138/122/8":"Africa/Douala","139/122/8":"Africa/Ndjamena","140/122/8":"Africa/Bangui","141/122/8":"Africa/Bangui","145/122/8":"Africa/Bangui","146/122/8":"Africa/Juba","138/123/8":"Africa/Bangui","146/123/8":"Africa/Bangui","147/123/8":"Africa/Juba","138/124/8":"Africa/Bangui","141/124/8":"Africa/Bangui","142/124/8":"Africa/Bangui","143/124/8":"Africa/Bangui","144/124/8":"Africa/Bangui","145/124/8":"Africa/Lubumbashi","146/124/8":"Africa/Lubumbashi","147/124/8":"Africa/Lubumbashi","138/125/8":"Africa/Douala","139/125/8":"Africa/Bangui","140/125/8":"Africa/Brazzaville","141/125/8":"Africa/Kinshasa","143/125/8":"Africa/Kinshasa","144/125/8":"Africa/Lubumbashi","139/126/8":"Africa/Brazzaville","115/118/8":"Africa/Dakar","116/118/8":"Africa/Dakar","117/118/8":"Africa/Dakar","118/118/8":"Africa/Dakar","115/119/8":"Africa/Dakar","116/119/8":"Africa/Bissau","117/119/8":"Africa/Bissau","118/119/8":"Africa/Conakry","116/120/8":"Africa/Bissau","117/120/8":"Africa/Conakry","151/134/8":"Africa/Dar_es_Salaam","152/134/8":"Africa/Dar_es_Salaam","151/135/8":"Africa/Lusaka","152/135/8":"Africa/Blantyre","151/136/8":"Africa/Lusaka","152/136/8":"Africa/Blantyre","151/137/8":"Africa/Blantyre","152/137/8":"Africa/Blantyre","153/137/8":"Africa/Maputo","151/138/8":"Africa/Maputo","152/138/8":"Africa/Blantyre","153/138/8":"Africa/Maputo","152/139/8":"Africa/Maputo","153/139/8":"Africa/Maputo","152/140/8":"Africa/Maputo","153/140/8":"Africa/Maputo","139/127/8":"Africa/Brazzaville","137/130/8":"Africa/Brazzaville","138/130/8":"Africa/Brazzaville","137/126/8":"Africa/Douala","138/126/8":"Africa/Douala","140/126/8":"Africa/Brazzaville","141/126/8":"Africa/Kinshasa","137/127/8":"Africa/Libreville","138/127/8":"Africa/Brazzaville","140/127/8":"Africa/Brazzaville","137/128/8":"Africa/Libreville","138/128/8":"Africa/Brazzaville","139/128/8":"Africa/Brazzaville","140/128/8":"Africa/Kinshasa","136/129/8":"Africa/Libreville","137/129/8":"Africa/Libreville","138/129/8":"Africa/Brazzaville","139/129/8":"Africa/Brazzaville","135/130/8":"Africa/Libreville","136/130/8":"Africa/Brazzaville","139/130/8":"Africa/Kinshasa","135/131/8":"Africa/Brazzaville","136/131/8":"Africa/Brazzaville","137/131/8":"Africa/Kinshasa","138/131/8":"Africa/Kinshasa","139/131/8":"Africa/Kinshasa","148/129/8":"Africa/Lubumbashi","149/129/8":"Africa/Kigali","148/130/8":"Africa/Lubumbashi","149/130/8":"Africa/Bujumbura","148/131/8":"Africa/Lubumbashi","149/131/8":"Africa/Dar_es_Salaam","146/105/8":"Africa/Cairo","147/105/8":"Africa/Cairo","148/105/8":"Africa/Cairo","149/105/8":"Africa/Cairo","150/105/8":"Africa/Cairo","151/105/8":"Africa/Cairo","146/106/8":"Africa/Cairo","147/106/8":"Africa/Cairo","148/106/8":"Africa/Cairo","149/106/8":"Africa/Cairo","150/106/8":"Africa/Cairo","151/106/8":"Africa/Cairo","146/107/8":"Africa/Cairo","147/107/8":"Africa/Cairo","148/107/8":"Africa/Cairo","149/107/8":"Africa/Cairo","150/107/8":"Africa/Cairo","151/107/8":"Africa/Cairo","146/108/8":"Africa/Cairo","147/108/8":"Africa/Cairo","148/108/8":"Africa/Cairo","149/108/8":"Africa/Cairo","150/108/8":"Africa/Cairo","151/108/8":"Africa/Cairo","146/109/8":"Africa/Cairo","147/109/8":"Africa/Cairo","148/109/8":"Africa/Cairo","149/109/8":"Africa/Cairo","150/109/8":"Africa/Cairo","151/109/8":"Africa/Cairo","146/110/8":"Africa/Cairo","147/110/8":"Africa/Cairo","148/110/8":"Africa/Cairo","149/110/8":"Africa/Cairo","150/110/8":"Africa/Cairo","151/110/8":"Africa/Cairo","152/110/8":"Africa/Cairo","145/104/8":"Africa/Tripoli","146/104/8":"Africa/Cairo","147/104/8":"Africa/Cairo","148/104/8":"Africa/Cairo","149/104/8":"Africa/Cairo","150/104/8":"Africa/Cairo","151/104/8":"Africa/Cairo","152/104/8":"Asia/Jerusalem","145/105/8":"Africa/Tripoli","152/105/8":"Africa/Cairo","145/106/8":"Africa/Tripoli","152/106/8":"Africa/Cairo","145/107/8":"Africa/Tripoli","152/107/8":"Africa/Cairo","145/108/8":"Africa/Tripoli","152/108/8":"Africa/Cairo","145/109/8":"Africa/Tripoli","152/109/8":"Africa/Cairo","153/109/8":"Africa/Cairo","145/110/8":"Africa/Tripoli","153/110/8":"Africa/Cairo","154/110/8":"Asia/Riyadh","145/111/8":"Africa/Tripoli","146/111/8":"Africa/Cairo","147/111/8":"Africa/Cairo","148/111/8":"Africa/Cairo","149/111/8":"Africa/Cairo","150/111/8":"Africa/Cairo","151/111/8":"Africa/Cairo","152/111/8":"Africa/Cairo","153/111/8":"Africa/Cairo","154/111/8":"Africa/Cairo","124/102/8":"Africa/Casablanca","125/102/8":"Africa/Casablanca","122/103/8":"Africa/Casablanca","123/103/8":"Africa/Casablanca","124/103/8":"Africa/Casablanca","122/104/8":"Africa/Casablanca","123/104/8":"Africa/Casablanca","124/104/8":"Africa/Casablanca","122/105/8":"Africa/Casablanca","123/100/8":"Europe/Madrid","124/100/8":"Europe/Madrid","125/100/8":"Europe/Madrid","123/101/8":"Africa/Casablanca","124/101/8":"Africa/Casablanca","125/101/8":"Africa/Casablanca","121/102/8":"Africa/Casablanca","122/102/8":"Africa/Casablanca","123/102/8":"Africa/Casablanca","121/103/8":"Africa/Casablanca","120/104/8":"Africa/Casablanca","121/104/8":"Africa/Casablanca","120/105/8":"Africa/Casablanca","121/105/8":"Africa/Casablanca","119/106/8":"Africa/Casablanca","120/106/8":"Africa/Casablanca","118/107/8":"Africa/El_Aaiun","119/107/8":"Africa/Casablanca","120/107/8":"Africa/Casablanca","118/120/8":"Africa/Conakry","119/120/8":"Africa/Conakry","120/120/8":"Africa/Conakry","117/121/8":"Africa/Conakry","118/121/8":"Africa/Conakry","119/121/8":"Africa/Freetown","120/121/8":"Africa/Conakry","121/121/8":"Africa/Conakry","120/122/8":"Africa/Monrovia","116/117/8":"Africa/Dakar","117/117/8":"Africa/Dakar","117/115/8":"Africa/Nouakchott","115/116/8":"Africa/Dakar","116/116/8":"Africa/Dakar","117/116/8":"Africa/Dakar","118/116/8":"Africa/Nouakchott","115/117/8":"Africa/Dakar","118/117/8":"Africa/Dakar","150/129/8":"Africa/Dar_es_Salaam","151/129/8":"Africa/Dar_es_Salaam","150/130/8":"Africa/Dar_es_Salaam","151/130/8":"Africa/Dar_es_Salaam","152/130/8":"Africa/Dar_es_Salaam","153/130/8":"Africa/Dar_es_Salaam","150/131/8":"Africa/Dar_es_Salaam","151/131/8":"Africa/Dar_es_Salaam","152/131/8":"Africa/Dar_es_Salaam","153/131/8":"Africa/Dar_es_Salaam","154/131/8":"Africa/Dar_es_Salaam","150/132/8":"Africa/Dar_es_Salaam","151/132/8":"Africa/Dar_es_Salaam","152/132/8":"Africa/Dar_es_Salaam","153/132/8":"Africa/Dar_es_Salaam","154/132/8":"Africa/Dar_es_Salaam","155/132/8":"Africa/Dar_es_Salaam","150/133/8":"Africa/Dar_es_Salaam","151/133/8":"Africa/Dar_es_Salaam","152/133/8":"Africa/Dar_es_Salaam","153/133/8":"Africa/Dar_es_Salaam","154/133/8":"Africa/Dar_es_Salaam","155/133/8":"Africa/Dar_es_Salaam","153/134/8":"Africa/Dar_es_Salaam","154/134/8":"Africa/Dar_es_Salaam","155/134/8":"Africa/Dar_es_Salaam","153/135/8":"Africa/Dar_es_Salaam","154/135/8":"Africa/Dar_es_Salaam","149/128/8":"Africa/Kampala","150/128/8":"Africa/Kampala","151/128/8":"Africa/Kampala","152/128/8":"Africa/Nairobi","152/129/8":"Africa/Dar_es_Salaam","153/129/8":"Africa/Dar_es_Salaam","154/129/8":"Africa/Nairobi","154/130/8":"Africa/Dar_es_Salaam","155/130/8":"Africa/Nairobi","155/131/8":"Africa/Dar_es_Salaam","156/131/8":"Africa/Dar_es_Salaam","148/132/8":"Africa/Lubumbashi","149/132/8":"Africa/Dar_es_Salaam","156/132/8":"Africa/Dar_es_Salaam","149/133/8":"Africa/Lubumbashi","156/133/8":"Africa/Dar_es_Salaam","149/134/8":"Africa/Lusaka","150/134/8":"Africa/Lusaka","156/134/8":"Africa/Dar_es_Salaam","155/135/8":"Africa/Dar_es_Salaam","156/135/8":"Africa/Dar_es_Salaam","153/136/8":"Africa/Maputo","154/136/8":"Africa/Maputo","155/136/8":"Africa/Maputo","159/119/8":"Asia/Aden","137/122/8":"Africa/Douala","137/123/8":"Africa/Douala","135/124/8":"Africa/Douala","136/124/8":"Africa/Douala","137/124/8":"Africa/Douala","135/125/8":"Africa/Douala","136/125/8":"Africa/Douala","137/125/8":"Africa/Douala","138/118/8":"Africa/Ndjamena","137/119/8":"Africa/Lagos","138/119/8":"Africa/Douala","137/120/8":"Africa/Lagos","138/120/8":"Africa/Douala","139/120/8":"Africa/Ndjamena","136/121/8":"Africa/Lagos","137/121/8":"Africa/Douala","138/121/8":"Africa/Ndjamena","135/122/8":"Africa/Lagos","136/122/8":"Africa/Lagos","134/123/8":"Africa/Lagos","135/123/8":"Africa/Douala","136/123/8":"Africa/Douala","133/124/8":"Africa/Lagos","134/124/8":"Africa/Douala","134/125/8":"Africa/Douala","134/126/8":"Africa/Malabo","135/126/8":"Africa/Malabo","136/126/8":"Africa/Libreville","118/109/8":"Africa/El_Aaiun","118/110/8":"Africa/El_Aaiun","117/111/8":"Africa/El_Aaiun","117/108/8":"Africa/El_Aaiun","118/108/8":"Africa/El_Aaiun","119/108/8":"Africa/El_Aaiun","120/108/8":"Africa/El_Aaiun","121/108/8":"Africa/El_Aaiun","117/109/8":"Africa/El_Aaiun","119/109/8":"Africa/Nouakchott","116/110/8":"Africa/El_Aaiun","117/110/8":"Africa/El_Aaiun","119/110/8":"Africa/Nouakchott","115/111/8":"Africa/El_Aaiun","116/111/8":"Africa/El_Aaiun","118/111/8":"Africa/El_Aaiun","119/111/8":"Africa/Nouakchott","115/112/8":"Africa/El_Aaiun","116/112/8":"Africa/Nouakchott","117/112/8":"Africa/Nouakchott","118/112/8":"Africa/Nouakchott","115/113/8":"Africa/El_Aaiun","118/122/8":"Africa/Freetown","119/122/8":"Africa/Freetown","119/123/8":"Africa/Monrovia","143/142/8":"Africa/Gaborone","144/142/8":"Africa/Gaborone","145/142/8":"Africa/Gaborone","143/143/8":"Africa/Gaborone","144/143/8":"Africa/Gaborone","145/143/8":"Africa/Gaborone","146/143/8":"Africa/Gaborone","143/144/8":"Africa/Gaborone","144/144/8":"Africa/Gaborone","145/144/8":"Africa/Gaborone","146/144/8":"Africa/Gaborone","143/145/8":"Africa/Gaborone","144/145/8":"Africa/Gaborone","145/145/8":"Africa/Gaborone","143/146/8":"Africa/Gaborone","145/140/8":"Africa/Lusaka","142/141/8":"Africa/Windhoek","143/141/8":"Africa/Gaborone","144/141/8":"Africa/Gaborone","145/141/8":"Africa/Gaborone","146/141/8":"Africa/Harare","142/142/8":"Africa/Windhoek","146/142/8":"Africa/Gaborone","147/142/8":"Africa/Harare","142/143/8":"Africa/Windhoek","147/143/8":"Africa/Gaborone","148/143/8":"Africa/Harare","142/144/8":"Africa/Gaborone","147/144/8":"Africa/Gaborone","148/144/8":"Africa/Johannesburg","142/145/8":"Africa/Gaborone","146/145/8":"Africa/Gaborone","147/145/8":"Africa/Johannesburg","142/146/8":"Africa/Gaborone","144/146/8":"Africa/Gaborone","145/146/8":"Africa/Gaborone","146/146/8":"Africa/Johannesburg","142/147/8":"Africa/Johannesburg","143/147/8":"Africa/Gaborone","144/147/8":"Africa/Johannesburg","145/147/8":"Africa/Johannesburg","149/140/8":"Africa/Harare","150/140/8":"Africa/Harare","148/141/8":"Africa/Harare","149/141/8":"Africa/Harare","150/141/8":"Africa/Harare","148/142/8":"Africa/Harare","149/142/8":"Africa/Harare","150/142/8":"Africa/Harare","149/143/8":"Africa/Harare","148/139/8":"Africa/Lusaka","149/139/8":"Africa/Harare","150/139/8":"Africa/Maputo","151/139/8":"Africa/Maputo","146/140/8":"Africa/Lusaka","147/140/8":"Africa/Lusaka","148/140/8":"Africa/Harare","151/140/8":"Africa/Maputo","147/141/8":"Africa/Harare","151/141/8":"Africa/Maputo","151/142/8":"Africa/Maputo","150/143/8":"Africa/Harare","151/143/8":"Africa/Maputo","149/144/8":"Africa/Johannesburg","150/144/8":"Africa/Maputo","148/145/8":"Africa/Johannesburg","149/145/8":"Africa/Johannesburg","147/146/8":"Africa/Johannesburg","148/146/8":"Africa/Johannesburg","149/146/8":"Africa/Johannesburg","146/147/8":"Africa/Johannesburg","147/147/8":"Africa/Johannesburg","148/147/8":"Africa/Johannesburg","143/148/8":"Africa/Johannesburg","144/148/8":"Africa/Johannesburg","145/148/8":"Africa/Johannesburg","146/148/8":"Africa/Johannesburg","147/148/8":"Africa/Johannesburg","148/148/8":"Africa/Johannesburg","149/148/8":"Africa/Johannesburg","143/149/8":"Africa/Johannesburg","144/149/8":"Africa/Johannesburg","145/149/8":"Africa/Johannesburg","146/149/8":"Africa/Johannesburg","149/149/8":"Africa/Johannesburg","141/150/8":"Africa/Johannesburg","142/150/8":"Africa/Johannesburg","143/150/8":"Africa/Johannesburg","144/150/8":"Africa/Johannesburg","145/150/8":"Africa/Johannesburg","146/150/8":"Africa/Johannesburg","141/151/8":"Africa/Johannesburg","142/151/8":"Africa/Johannesburg","143/151/8":"Africa/Johannesburg","144/151/8":"Africa/Johannesburg","145/151/8":"Africa/Johannesburg","146/151/8":"Africa/Johannesburg","147/151/8":"Africa/Johannesburg","141/152/8":"Africa/Johannesburg","142/152/8":"Africa/Johannesburg","143/152/8":"Africa/Johannesburg","144/152/8":"Africa/Johannesburg","145/152/8":"Africa/Johannesburg","146/152/8":"Africa/Johannesburg","141/153/8":"Africa/Johannesburg","142/153/8":"Africa/Johannesburg","143/153/8":"Africa/Johannesburg","145/153/8":"Africa/Johannesburg","150/145/8":"Africa/Johannesburg","150/146/8":"Africa/Johannesburg","149/147/8":"Africa/Johannesburg","150/147/8":"Africa/Mbabane","151/147/8":"Africa/Maputo","139/148/8":"Africa/Windhoek","140/148/8":"Africa/Windhoek","142/148/8":"Africa/Johannesburg","150/148/8":"Africa/Johannesburg","151/148/8":"Africa/Johannesburg","139/149/8":"Africa/Johannesburg","140/149/8":"Africa/Johannesburg","141/149/8":"Africa/Johannesburg","142/149/8":"Africa/Johannesburg","147/149/8":"Africa/Johannesburg","148/149/8":"Africa/Maseru","150/149/8":"Africa/Johannesburg","151/149/8":"Africa/Johannesburg","139/150/8":"Africa/Johannesburg","140/150/8":"Africa/Johannesburg","147/150/8":"Africa/Maseru","148/150/8":"Africa/Johannesburg","149/150/8":"Africa/Johannesburg","150/150/8":"Africa/Johannesburg","140/151/8":"Africa/Johannesburg","148/151/8":"Africa/Johannesburg","149/151/8":"Africa/Johannesburg","140/152/8":"Africa/Johannesburg","147/152/8":"Africa/Johannesburg","148/152/8":"Africa/Johannesburg","140/153/8":"Africa/Johannesburg","144/153/8":"Africa/Johannesburg","146/153/8":"Africa/Johannesburg","147/153/8":"Africa/Johannesburg","140/154/8":"Africa/Johannesburg","141/154/8":"Africa/Johannesburg","142/154/8":"Africa/Johannesburg","143/154/8":"Africa/Johannesburg","144/154/8":"Africa/Johannesburg","145/154/8":"Africa/Johannesburg","146/154/8":"Africa/Johannesburg","154/165/8":"Africa/Johannesburg","155/165/8":"Africa/Johannesburg","154/166/8":"Africa/Johannesburg","155/166/8":"Africa/Johannesburg","147/122/8":"Africa/Juba","148/122/8":"Africa/Juba","149/122/8":"Africa/Juba","150/122/8":"Africa/Juba","148/123/8":"Africa/Juba","149/123/8":"Africa/Juba","150/123/8":"Africa/Juba","151/123/8":"Africa/Juba","150/124/8":"Africa/Juba","151/124/8":"Africa/Juba","150/119/8":"Africa/Khartoum","151/119/8":"Africa/Khartoum","145/120/8":"Africa/Khartoum","146/120/8":"Africa/Khartoum","149/120/8":"Africa/Khartoum","150/120/8":"Africa/Khartoum","151/120/8":"Africa/Juba","146/121/8":"Africa/Juba","147/121/8":"Africa/Juba","148/121/8":"Africa/Juba","149/121/8":"Africa/Juba","150/121/8":"Africa/Juba","148/124/8":"Africa/Juba","149/124/8":"Africa/Juba","149/125/8":"Africa/Lubumbashi","150/125/8":"Africa/Kampala","151/125/8":"Africa/Kampala","152/125/8":"Africa/Nairobi","151/126/8":"Africa/Kampala","150/127/8":"Africa/Kampala","151/127/8":"Africa/Kampala","149/126/8":"Africa/Lubumbashi","150/126/8":"Africa/Kampala","152/126/8":"Africa/Kampala","149/127/8":"Africa/Kampala","152/127/8":"Africa/Nairobi","146/112/8":"Africa/Khartoum","147/112/8":"Africa/Khartoum","148/112/8":"Africa/Khartoum","149/112/8":"Africa/Khartoum","150/112/8":"Africa/Khartoum","151/112/8":"Africa/Khartoum","152/112/8":"Africa/Khartoum","153/112/8":"Africa/Khartoum","146/113/8":"Africa/Khartoum","147/113/8":"Africa/Khartoum","148/113/8":"Africa/Khartoum","149/113/8":"Africa/Khartoum","150/113/8":"Africa/Khartoum","151/113/8":"Africa/Khartoum","152/113/8":"Africa/Khartoum","153/113/8":"Africa/Khartoum","146/114/8":"Africa/Khartoum","147/114/8":"Africa/Khartoum","148/114/8":"Africa/Khartoum","149/114/8":"Africa/Khartoum","150/114/8":"Africa/Khartoum","151/114/8":"Africa/Khartoum","152/114/8":"Africa/Khartoum","153/114/8":"Africa/Khartoum","146/115/8":"Africa/Khartoum","147/115/8":"Africa/Khartoum","148/115/8":"Africa/Khartoum","149/115/8":"Africa/Khartoum","150/115/8":"Africa/Khartoum","151/115/8":"Africa/Khartoum","152/115/8":"Africa/Khartoum","153/115/8":"Africa/Khartoum","146/116/8":"Africa/Khartoum","147/116/8":"Africa/Khartoum","148/116/8":"Africa/Khartoum","149/116/8":"Africa/Khartoum","150/116/8":"Africa/Khartoum","151/116/8":"Africa/Khartoum","152/116/8":"Africa/Khartoum","145/117/8":"Africa/Khartoum","146/117/8":"Africa/Khartoum","147/117/8":"Africa/Khartoum","148/117/8":"Africa/Khartoum","149/117/8":"Africa/Khartoum","150/117/8":"Africa/Khartoum","151/117/8":"Africa/Khartoum","152/117/8":"Africa/Khartoum","144/118/8":"Africa/Khartoum","145/118/8":"Africa/Khartoum","146/118/8":"Africa/Khartoum","147/118/8":"Africa/Khartoum","148/118/8":"Africa/Khartoum","149/118/8":"Africa/Khartoum","150/118/8":"Africa/Khartoum","151/118/8":"Africa/Khartoum","152/118/8":"Africa/Khartoum","145/119/8":"Africa/Khartoum","146/119/8":"Africa/Khartoum","147/119/8":"Africa/Khartoum","148/119/8":"Africa/Khartoum","149/119/8":"Africa/Khartoum","147/120/8":"Africa/Khartoum","148/120/8":"Africa/Khartoum","145/112/8":"Africa/Tripoli","154/112/8":"Africa/Khartoum","145/113/8":"Africa/Khartoum","154/113/8":"Africa/Khartoum","155/113/8":"Asia/Riyadh","145/114/8":"Africa/Khartoum","154/114/8":"Africa/Khartoum","145/115/8":"Africa/Khartoum","144/116/8":"Africa/Ndjamena","145/116/8":"Africa/Khartoum","143/117/8":"Africa/Ndjamena","144/117/8":"Africa/Khartoum","143/118/8":"Africa/Ndjamena","143/119/8":"Africa/Ndjamena","144/119/8":"Africa/Khartoum","142/125/8":"Africa/Kinshasa","142/126/8":"Africa/Kinshasa","141/127/8":"Africa/Kinshasa","142/127/8":"Africa/Kinshasa","143/127/8":"Africa/Kinshasa","141/128/8":"Africa/Kinshasa","142/128/8":"Africa/Kinshasa","143/128/8":"Africa/Kinshasa","140/129/8":"Africa/Kinshasa","141/129/8":"Africa/Kinshasa","140/130/8":"Africa/Kinshasa","141/130/8":"Africa/Kinshasa","140/131/8":"Africa/Kinshasa","141/131/8":"Africa/Kinshasa","143/126/8":"Africa/Kinshasa","144/126/8":"Africa/Lubumbashi","144/127/8":"Africa/Lubumbashi","144/128/8":"Africa/Kinshasa","145/128/8":"Africa/Lubumbashi","142/129/8":"Africa/Kinshasa","143/129/8":"Africa/Kinshasa","144/129/8":"Africa/Lubumbashi","145/129/8":"Africa/Lubumbashi","142/130/8":"Africa/Kinshasa","142/131/8":"Africa/Lubumbashi","136/132/8":"Africa/Luanda","137/132/8":"Africa/Luanda","138/132/8":"Africa/Luanda","139/132/8":"Africa/Luanda","140/132/8":"Africa/Kinshasa","141/132/8":"Africa/Kinshasa","142/132/8":"Africa/Lubumbashi","140/133/8":"Africa/Kinshasa","141/133/8":"Africa/Kinshasa","131/119/8":"Africa/Lagos","132/119/8":"Africa/Lagos","133/119/8":"Africa/Lagos","134/119/8":"Africa/Lagos","135/119/8":"Africa/Lagos","136/119/8":"Africa/Lagos","131/120/8":"Africa/Lagos","132/120/8":"Africa/Lagos","133/120/8":"Africa/Lagos","134/120/8":"Africa/Lagos","135/120/8":"Africa/Lagos","136/120/8":"Africa/Lagos","131/121/8":"Africa/Lagos","132/121/8":"Africa/Lagos","133/121/8":"Africa/Lagos","134/121/8":"Africa/Lagos","135/121/8":"Africa/Lagos","130/122/8":"Africa/Lagos","131/122/8":"Africa/Lagos","132/122/8":"Africa/Lagos","133/122/8":"Africa/Lagos","134/122/8":"Africa/Lagos","132/123/8":"Africa/Lagos","133/123/8":"Africa/Lagos","130/118/8":"Africa/Niamey","131/118/8":"Africa/Lagos","132/118/8":"Africa/Lagos","133/118/8":"Africa/Niamey","134/118/8":"Africa/Niamey","135/118/8":"Africa/Lagos","136/118/8":"Africa/Niamey","137/118/8":"Africa/Lagos","130/119/8":"Africa/Lagos","130/120/8":"Africa/Porto-Novo","129/121/8":"Africa/Porto-Novo","130/121/8":"Africa/Lagos","129/122/8":"Africa/Porto-Novo","129/123/8":"Africa/Porto-Novo","130/123/8":"Africa/Lagos","131/123/8":"Africa/Lagos","131/124/8":"Africa/Lagos","132/124/8":"Africa/Lagos","132/125/8":"Africa/Lagos","133/125/8":"Africa/Malabo","135/128/8":"Africa/Libreville","136/128/8":"Africa/Libreville","135/129/8":"Africa/Libreville","134/127/8":"Africa/Libreville","135/127/8":"Africa/Libreville","136/127/8":"Africa/Libreville","134/128/8":"Africa/Libreville","134/129/8":"Africa/Libreville","134/130/8":"Africa/Libreville","138/133/8":"Africa/Luanda","139/133/8":"Africa/Luanda","138/134/8":"Africa/Luanda","139/134/8":"Africa/Luanda","140/134/8":"Africa/Luanda","141/134/8":"Africa/Luanda","142/134/8":"Africa/Luanda","138/135/8":"Africa/Luanda","139/135/8":"Africa/Luanda","140/135/8":"Africa/Luanda","141/135/8":"Africa/Luanda","142/135/8":"Africa/Luanda","138/136/8":"Africa/Luanda","139/136/8":"Africa/Luanda","140/136/8":"Africa/Luanda","141/136/8":"Africa/Luanda","142/136/8":"Africa/Luanda","144/136/8":"Africa/Luanda","138/137/8":"Africa/Luanda","139/137/8":"Africa/Luanda","140/137/8":"Africa/Luanda","141/137/8":"Africa/Luanda","142/137/8":"Africa/Luanda","137/138/8":"Africa/Luanda","138/138/8":"Africa/Luanda","139/138/8":"Africa/Luanda","140/138/8":"Africa/Luanda","141/138/8":"Africa/Luanda","142/138/8":"Africa/Luanda","137/139/8":"Africa/Luanda","138/139/8":"Africa/Luanda","139/139/8":"Africa/Luanda","140/139/8":"Africa/Luanda","141/139/8":"Africa/Luanda","142/139/8":"Africa/Luanda","136/133/8":"Africa/Luanda","137/133/8":"Africa/Luanda","142/133/8":"Africa/Luanda","143/133/8":"Africa/Lubumbashi","137/134/8":"Africa/Luanda","143/134/8":"Africa/Luanda","137/135/8":"Africa/Luanda","143/135/8":"Africa/Luanda","144/135/8":"Africa/Lubumbashi","145/135/8":"Africa/Lubumbashi","137/136/8":"Africa/Luanda","143/136/8":"Africa/Luanda","145/136/8":"Africa/Lusaka","136/137/8":"Africa/Luanda","137/137/8":"Africa/Luanda","143/137/8":"Africa/Luanda","144/137/8":"Africa/Lusaka","145/137/8":"Africa/Lusaka","136/138/8":"Africa/Luanda","143/138/8":"Africa/Luanda","136/139/8":"Africa/Luanda","143/139/8":"Africa/Luanda","136/140/8":"Africa/Windhoek","137/140/8":"Africa/Windhoek","138/140/8":"Africa/Luanda","139/140/8":"Africa/Luanda","140/140/8":"Africa/Luanda","141/140/8":"Africa/Luanda","142/140/8":"Africa/Luanda","143/140/8":"Africa/Luanda","144/140/8":"Africa/Lusaka","145/125/8":"Africa/Lubumbashi","146/125/8":"Africa/Lubumbashi","147/125/8":"Africa/Lubumbashi","148/125/8":"Africa/Lubumbashi","145/126/8":"Africa/Lubumbashi","146/126/8":"Africa/Lubumbashi","147/126/8":"Africa/Lubumbashi","148/126/8":"Africa/Lubumbashi","145/127/8":"Africa/Lubumbashi","146/127/8":"Africa/Lubumbashi","147/127/8":"Africa/Lubumbashi","148/127/8":"Africa/Lubumbashi","146/128/8":"Africa/Lubumbashi","147/128/8":"Africa/Lubumbashi","148/128/8":"Africa/Lubumbashi","146/129/8":"Africa/Lubumbashi","147/129/8":"Africa/Lubumbashi","143/130/8":"Africa/Lubumbashi","144/130/8":"Africa/Lubumbashi","145/130/8":"Africa/Lubumbashi","146/130/8":"Africa/Lubumbashi","147/130/8":"Africa/Lubumbashi","143/131/8":"Africa/Lubumbashi","144/131/8":"Africa/Lubumbashi","145/131/8":"Africa/Lubumbashi","146/131/8":"Africa/Lubumbashi","147/131/8":"Africa/Lubumbashi","143/132/8":"Africa/Lubumbashi","144/132/8":"Africa/Lubumbashi","145/132/8":"Africa/Lubumbashi","146/132/8":"Africa/Lubumbashi","147/132/8":"Africa/Lubumbashi","144/133/8":"Africa/Lubumbashi","145/133/8":"Africa/Lubumbashi","146/133/8":"Africa/Lubumbashi","147/133/8":"Africa/Lubumbashi","148/133/8":"Africa/Lubumbashi","144/134/8":"Africa/Lubumbashi","145/134/8":"Africa/Lubumbashi","146/134/8":"Africa/Lubumbashi","147/134/8":"Africa/Lubumbashi","146/135/8":"Africa/Lubumbashi","147/135/8":"Africa/Lubumbashi","148/134/8":"Africa/Lusaka","148/135/8":"Africa/Lusaka","146/136/8":"Africa/Lusaka","147/136/8":"Africa/Lubumbashi","148/136/8":"Africa/Lusaka","149/136/8":"Africa/Lusaka","148/137/8":"Africa/Lusaka","149/137/8":"Africa/Lusaka","149/135/8":"Africa/Lusaka","150/135/8":"Africa/Lusaka","150/136/8":"Africa/Lusaka","146/137/8":"Africa/Lusaka","147/137/8":"Africa/Lusaka","150/137/8":"Africa/Lusaka","144/138/8":"Africa/Lusaka","145/138/8":"Africa/Lusaka","146/138/8":"Africa/Lusaka","147/138/8":"Africa/Lusaka","148/138/8":"Africa/Lusaka","144/139/8":"Africa/Lusaka","145/139/8":"Africa/Lusaka","146/139/8":"Africa/Lusaka","147/139/8":"Africa/Lusaka","149/138/8":"Africa/Lusaka","150/138/8":"Africa/Maputo","131/128/8":"Africa/Malabo","132/128/8":"Africa/Sao_Tome","131/129/8":"Africa/Malabo","132/129/8":"Africa/Malabo","156/136/8":"Africa/Maputo","154/137/8":"Africa/Maputo","155/137/8":"Africa/Maputo","154/138/8":"Africa/Maputo","155/138/8":"Africa/Maputo","156/138/8":"Africa/Maputo","154/139/8":"Africa/Maputo","155/139/8":"Africa/Maputo","152/141/8":"Africa/Maputo","152/143/8":"Africa/Maputo","151/144/8":"Africa/Maputo","152/144/8":"Africa/Maputo","151/145/8":"Africa/Maputo","152/145/8":"Africa/Maputo","157/135/8":"Africa/Maputo","157/136/8":"Africa/Maputo","156/137/8":"Africa/Maputo","157/137/8":"Africa/Maputo","157/138/8":"Africa/Maputo","156/139/8":"Africa/Maputo","157/139/8":"Africa/Maputo","154/140/8":"Africa/Maputo","155/140/8":"Africa/Maputo","156/140/8":"Africa/Maputo","153/141/8":"Africa/Maputo","154/141/8":"Africa/Maputo","152/142/8":"Africa/Maputo","153/142/8":"Africa/Maputo","153/143/8":"Africa/Maputo","153/144/8":"Africa/Maputo","153/145/8":"Africa/Maputo","151/146/8":"Africa/Maputo","152/146/8":"Africa/Maputo","153/146/8":"Africa/Maputo","162/120/8":"Africa/Mogadishu","163/120/8":"Africa/Mogadishu","161/121/8":"Africa/Mogadishu","162/121/8":"Africa/Mogadishu","161/124/8":"Africa/Mogadishu","159/125/8":"Africa/Mogadishu","160/125/8":"Africa/Mogadishu","158/126/8":"Africa/Mogadishu","161/119/8":"Africa/Mogadishu","162/119/8":"Africa/Mogadishu","163/119/8":"Africa/Mogadishu","164/119/8":"Africa/Mogadishu","159/120/8":"Africa/Mogadishu","160/120/8":"Africa/Mogadishu","161/120/8":"Africa/Mogadishu","164/120/8":"Africa/Mogadishu","163/121/8":"Africa/Mogadishu","164/121/8":"Africa/Mogadishu","163/122/8":"Africa/Mogadishu","162/123/8":"Africa/Mogadishu","163/123/8":"Africa/Mogadishu","162/124/8":"Africa/Mogadishu","161/125/8":"Africa/Mogadishu","162/125/8":"Africa/Mogadishu","157/126/8":"Africa/Mogadishu","159/126/8":"Africa/Mogadishu","160/126/8":"Africa/Mogadishu","161/126/8":"Africa/Mogadishu","157/127/8":"Africa/Mogadishu","158/127/8":"Africa/Mogadishu","159/127/8":"Africa/Mogadishu","157/128/8":"Africa/Mogadishu","158/128/8":"Africa/Mogadishu","157/129/8":"Africa/Nairobi","120/123/8":"Africa/Monrovia","120/124/8":"Africa/Monrovia","121/124/8":"Africa/Monrovia","153/125/8":"Africa/Nairobi","153/126/8":"Africa/Nairobi","154/126/8":"Africa/Nairobi","155/126/8":"Africa/Nairobi","156/126/8":"Africa/Nairobi","153/127/8":"Africa/Nairobi","154/127/8":"Africa/Nairobi","155/127/8":"Africa/Nairobi","156/127/8":"Africa/Nairobi","153/128/8":"Africa/Nairobi","154/128/8":"Africa/Nairobi","155/128/8":"Africa/Nairobi","156/128/8":"Africa/Nairobi","155/129/8":"Africa/Nairobi","156/129/8":"Africa/Nairobi","156/130/8":"Africa/Nairobi","140/112/8":"Africa/Ndjamena","140/113/8":"Africa/Ndjamena","141/113/8":"Africa/Ndjamena","142/113/8":"Africa/Ndjamena","140/114/8":"Africa/Ndjamena","141/114/8":"Africa/Ndjamena","142/114/8":"Africa/Ndjamena","143/114/8":"Africa/Ndjamena","144/114/8":"Africa/Ndjamena","140/115/8":"Africa/Ndjamena","141/115/8":"Africa/Ndjamena","142/115/8":"Africa/Ndjamena","143/115/8":"Africa/Ndjamena","144/115/8":"Africa/Ndjamena","139/116/8":"Africa/Ndjamena","140/116/8":"Africa/Ndjamena","141/116/8":"Africa/Ndjamena","142/116/8":"Africa/Ndjamena","143/116/8":"Africa/Ndjamena","138/117/8":"Africa/Ndjamena","139/117/8":"Africa/Ndjamena","140/117/8":"Africa/Ndjamena","141/117/8":"Africa/Ndjamena","142/117/8":"Africa/Ndjamena","139/118/8":"Africa/Ndjamena","140/118/8":"Africa/Ndjamena","141/118/8":"Africa/Ndjamena","142/118/8":"Africa/Ndjamena","139/119/8":"Africa/Ndjamena","140/119/8":"Africa/Ndjamena","141/119/8":"Africa/Ndjamena","142/119/8":"Africa/Ndjamena","140/120/8":"Africa/Ndjamena","141/120/8":"Africa/Ndjamena","142/120/8":"Africa/Ndjamena","139/121/8":"Africa/Ndjamena","140/121/8":"Africa/Ndjamena","139/110/8":"Africa/Tripoli","138/111/8":"Africa/Niamey","139/111/8":"Africa/Ndjamena","140/111/8":"Africa/Ndjamena","141/111/8":"Africa/Tripoli","138/112/8":"Africa/Niamey","139/112/8":"Africa/Ndjamena","141/112/8":"Africa/Ndjamena","142/112/8":"Africa/Ndjamena","143/112/8":"Africa/Tripoli","139/113/8":"Africa/Ndjamena","143/113/8":"Africa/Ndjamena","144/113/8":"Africa/Tripoli","139/114/8":"Africa/Ndjamena","138/115/8":"Africa/Niamey","139/115/8":"Africa/Ndjamena","137/116/8":"Africa/Niamey","138/116/8":"Africa/Ndjamena","137/117/8":"Africa/Niamey","135/112/8":"Africa/Niamey","136/112/8":"Africa/Niamey","137/112/8":"Africa/Niamey","134/113/8":"Africa/Niamey","135/113/8":"Africa/Niamey","136/113/8":"Africa/Niamey","137/113/8":"Africa/Niamey","138/113/8":"Africa/Niamey","132/114/8":"Africa/Niamey","133/114/8":"Africa/Niamey","134/114/8":"Africa/Niamey","135/114/8":"Africa/Niamey","136/114/8":"Africa/Niamey","137/114/8":"Africa/Niamey","138/114/8":"Africa/Niamey","132/115/8":"Africa/Niamey","133/115/8":"Africa/Niamey","134/115/8":"Africa/Niamey","135/115/8":"Africa/Niamey","136/115/8":"Africa/Niamey","137/115/8":"Africa/Niamey","131/116/8":"Africa/Niamey","132/116/8":"Africa/Niamey","133/116/8":"Africa/Niamey","134/116/8":"Africa/Niamey","135/116/8":"Africa/Niamey","136/116/8":"Africa/Niamey","130/117/8":"Africa/Niamey","131/117/8":"Africa/Niamey","132/117/8":"Africa/Niamey","133/117/8":"Africa/Niamey","134/117/8":"Africa/Niamey","135/117/8":"Africa/Niamey","136/117/8":"Africa/Niamey","137/110/8":"Africa/Tripoli","137/111/8":"Africa/Niamey","128/118/8":"Africa/Ouagadougou","129/118/8":"Africa/Niamey","129/119/8":"Africa/Ouagadougou","120/109/8":"Africa/Nouakchott","121/109/8":"Africa/Nouakchott","122/109/8":"Africa/Nouakchott","120/110/8":"Africa/Nouakchott","121/110/8":"Africa/Nouakchott","122/110/8":"Africa/Nouakchott","120/111/8":"Africa/Nouakchott","121/111/8":"Africa/Nouakchott","122/111/8":"Africa/Nouakchott","119/112/8":"Africa/Nouakchott","120/112/8":"Africa/Nouakchott","121/112/8":"Africa/Nouakchott","122/112/8":"Africa/Nouakchott","117/113/8":"Africa/Nouakchott","118/113/8":"Africa/Nouakchott","119/113/8":"Africa/Nouakchott","120/113/8":"Africa/Nouakchott","121/113/8":"Africa/Nouakchott","122/113/8":"Africa/Nouakchott","117/114/8":"Africa/Nouakchott","118/114/8":"Africa/Nouakchott","119/114/8":"Africa/Nouakchott","120/114/8":"Africa/Nouakchott","121/114/8":"Africa/Nouakchott","122/114/8":"Africa/Nouakchott","118/115/8":"Africa/Nouakchott","119/115/8":"Africa/Nouakchott","120/115/8":"Africa/Nouakchott","121/115/8":"Africa/Nouakchott","122/115/8":"Africa/Nouakchott","116/113/8":"Africa/Nouakchott","116/114/8":"Africa/Nouakchott","116/115/8":"Africa/Nouakchott","126/118/8":"Africa/Ouagadougou","127/118/8":"Africa/Ouagadougou","125/119/8":"Africa/Ouagadougou","126/119/8":"Africa/Ouagadougou","127/119/8":"Africa/Ouagadougou","128/119/8":"Africa/Ouagadougou","129/120/8":"Africa/Porto-Novo","132/126/8":"Africa/Sao_Tome","133/126/8":"Africa/Sao_Tome","132/127/8":"Africa/Sao_Tome","133/127/8":"Africa/Sao_Tome","136/104/8":"Africa/Tripoli","137/104/8":"Africa/Tripoli","138/104/8":"Africa/Tripoli","139/104/8":"Africa/Tripoli","140/104/8":"Africa/Tripoli","141/104/8":"Africa/Tripoli","142/104/8":"Africa/Tripoli","143/104/8":"Africa/Tripoli","144/104/8":"Africa/Tripoli","136/105/8":"Africa/Tripoli","137/105/8":"Africa/Tripoli","138/105/8":"Africa/Tripoli","139/105/8":"Africa/Tripoli","140/105/8":"Africa/Tripoli","141/105/8":"Africa/Tripoli","142/105/8":"Africa/Tripoli","143/105/8":"Africa/Tripoli","144/105/8":"Africa/Tripoli","136/106/8":"Africa/Tripoli","137/106/8":"Africa/Tripoli","138/106/8":"Africa/Tripoli","139/106/8":"Africa/Tripoli","140/106/8":"Africa/Tripoli","141/106/8":"Africa/Tripoli","142/106/8":"Africa/Tripoli","143/106/8":"Africa/Tripoli","144/106/8":"Africa/Tripoli","136/107/8":"Africa/Tripoli","137/107/8":"Africa/Tripoli","138/107/8":"Africa/Tripoli","139/107/8":"Africa/Tripoli","140/107/8":"Africa/Tripoli","141/107/8":"Africa/Tripoli","142/107/8":"Africa/Tripoli","143/107/8":"Africa/Tripoli","144/107/8":"Africa/Tripoli","136/108/8":"Africa/Tripoli","137/108/8":"Africa/Tripoli","138/108/8":"Africa/Tripoli","139/108/8":"Africa/Tripoli","140/108/8":"Africa/Tripoli","141/108/8":"Africa/Tripoli","142/108/8":"Africa/Tripoli","143/108/8":"Africa/Tripoli","144/108/8":"Africa/Tripoli","136/109/8":"Africa/Tripoli","137/109/8":"Africa/Tripoli","138/109/8":"Africa/Tripoli","139/109/8":"Africa/Tripoli","140/109/8":"Africa/Tripoli","141/109/8":"Africa/Tripoli","142/109/8":"Africa/Tripoli","143/109/8":"Africa/Tripoli","144/109/8":"Africa/Tripoli","138/110/8":"Africa/Tripoli","140/110/8":"Africa/Tripoli","141/110/8":"Africa/Tripoli","142/110/8":"Africa/Tripoli","143/110/8":"Africa/Tripoli","144/110/8":"Africa/Tripoli","142/111/8":"Africa/Tripoli","143/111/8":"Africa/Tripoli","144/111/8":"Africa/Tripoli","144/112/8":"Africa/Tripoli","136/102/8":"Africa/Tunis","143/102/8":"Africa/Tripoli","135/103/8":"Africa/Tunis","136/103/8":"Africa/Tripoli","137/103/8":"Africa/Tripoli","138/103/8":"Africa/Tripoli","139/103/8":"Africa/Tripoli","140/103/8":"Africa/Tripoli","141/103/8":"Africa/Tripoli","142/103/8":"Africa/Tripoli","143/103/8":"Africa/Tripoli","144/103/8":"Africa/Tripoli","145/103/8":"Africa/Tripoli","135/104/8":"Africa/Tripoli","135/105/8":"Africa/Tripoli","134/100/8":"Africa/Tunis","134/102/8":"Africa/Tunis","134/98/8":"Europe/Rome","135/99/8":"Africa/Tunis","136/99/8":"Europe/Rome","135/100/8":"Africa/Tunis","136/100/8":"Europe/Rome","135/101/8":"Africa/Tunis","136/101/8":"Africa/Tunis","135/102/8":"Africa/Tunis","137/141/8":"Africa/Windhoek","138/141/8":"Africa/Windhoek","139/141/8":"Africa/Windhoek","140/141/8":"Africa/Windhoek","141/141/8":"Africa/Windhoek","138/142/8":"Africa/Windhoek","139/142/8":"Africa/Windhoek","140/142/8":"Africa/Windhoek","141/142/8":"Africa/Windhoek","138/143/8":"Africa/Windhoek","139/143/8":"Africa/Windhoek","140/143/8":"Africa/Windhoek","141/143/8":"Africa/Windhoek","139/144/8":"Africa/Windhoek","140/144/8":"Africa/Windhoek","141/144/8":"Africa/Windhoek","139/145/8":"Africa/Windhoek","140/145/8":"Africa/Windhoek","141/145/8":"Africa/Windhoek","139/146/8":"Africa/Windhoek","140/146/8":"Africa/Windhoek","141/146/8":"Africa/Windhoek","139/147/8":"Africa/Windhoek","140/147/8":"Africa/Windhoek","141/147/8":"Africa/Windhoek","141/148/8":"Africa/Windhoek","136/141/8":"Africa/Windhoek","136/142/8":"Africa/Windhoek","137/142/8":"Africa/Windhoek","137/143/8":"Africa/Windhoek","137/144/8":"Africa/Windhoek","138/144/8":"Africa/Windhoek","138/145/8":"Africa/Windhoek","138/146/8":"Africa/Windhoek","138/147/8":"Africa/Windhoek","138/148/8":"Africa/Windhoek","3/83/8":"America/Adak","4/83/8":"America/Adak","5/83/8":"America/Adak","6/83/8":"America/Adak","7/83/8":"America/Adak","250/83/8":"America/Adak","251/83/8":"America/Adak","252/83/8":"America/Adak","253/83/8":"America/Adak","0/84/8":"America/Adak","1/84/8":"America/Adak","2/84/8":"America/Adak","3/84/8":"America/Adak","4/84/8":"America/Adak","5/84/8":"America/Adak","6/84/8":"America/Adak","251/84/8":"America/Adak","252/84/8":"America/Adak","253/84/8":"America/Adak","254/84/8":"America/Adak","255/84/8":"America/Adak","0/85/8":"America/Adak","1/85/8":"America/Adak","2/85/8":"America/Adak","254/85/8":"America/Adak","255/85/8":"America/Adak","16/55/8":"America/Anchorage","17/55/8":"America/Anchorage","18/55/8":"America/Anchorage","14/56/8":"America/Anchorage","15/56/8":"America/Anchorage","16/56/8":"America/Anchorage","17/56/8":"America/Anchorage","18/56/8":"America/Anchorage","19/56/8":"America/Anchorage","20/56/8":"America/Anchorage","21/56/8":"America/Anchorage","22/56/8":"America/Anchorage","13/57/8":"America/Anchorage","14/57/8":"America/Anchorage","15/57/8":"America/Anchorage","16/57/8":"America/Anchorage","17/57/8":"America/Anchorage","18/57/8":"America/Anchorage","19/57/8":"America/Anchorage","20/57/8":"America/Anchorage","21/57/8":"America/Anchorage","22/57/8":"America/Anchorage","23/57/8":"America/Anchorage","24/57/8":"America/Anchorage","25/57/8":"America/Anchorage","13/58/8":"America/Anchorage","14/58/8":"America/Anchorage","15/58/8":"America/Anchorage","16/58/8":"America/Anchorage","17/58/8":"America/Anchorage","18/58/8":"America/Anchorage","19/58/8":"America/Anchorage","20/58/8":"America/Anchorage","21/58/8":"America/Anchorage","22/58/8":"America/Anchorage","23/58/8":"America/Anchorage","24/58/8":"America/Anchorage","25/58/8":"America/Anchorage","26/58/8":"America/Anchorage","13/59/8":"America/Anchorage","14/59/8":"America/Anchorage","15/59/8":"America/Anchorage","16/59/8":"America/Anchorage","17/59/8":"America/Anchorage","18/59/8":"America/Anchorage","19/59/8":"America/Anchorage","20/59/8":"America/Anchorage","21/59/8":"America/Anchorage","22/59/8":"America/Anchorage","23/59/8":"America/Anchorage","24/59/8":"America/Anchorage","25/59/8":"America/Anchorage","26/59/8":"America/Anchorage","13/60/8":"America/Anchorage","14/60/8":"America/Anchorage","15/60/8":"America/Anchorage","16/60/8":"America/Anchorage","17/60/8":"America/Anchorage","18/60/8":"America/Anchorage","19/60/8":"America/Anchorage","20/60/8":"America/Anchorage","21/60/8":"America/Anchorage","22/60/8":"America/Anchorage","23/60/8":"America/Anchorage","24/60/8":"America/Anchorage","25/60/8":"America/Anchorage","26/60/8":"America/Anchorage","13/61/8":"America/Anchorage","14/61/8":"America/Anchorage","15/61/8":"America/Anchorage","16/61/8":"America/Anchorage","17/61/8":"America/Anchorage","18/61/8":"America/Anchorage","19/61/8":"America/Anchorage","20/61/8":"America/Anchorage","21/61/8":"America/Anchorage","22/61/8":"America/Anchorage","23/61/8":"America/Anchorage","24/61/8":"America/Anchorage","25/61/8":"America/Anchorage","26/61/8":"America/Anchorage","13/62/8":"America/Anchorage","14/62/8":"America/Anchorage","15/62/8":"America/Anchorage","16/62/8":"America/Anchorage","17/62/8":"America/Anchorage","18/62/8":"America/Anchorage","19/62/8":"America/Anchorage","20/62/8":"America/Anchorage","21/62/8":"America/Anchorage","22/62/8":"America/Anchorage","23/62/8":"America/Anchorage","24/62/8":"America/Anchorage","25/62/8":"America/Anchorage","26/62/8":"America/Anchorage","13/63/8":"America/Anchorage","14/63/8":"America/Anchorage","15/63/8":"America/Anchorage","16/63/8":"America/Anchorage","17/63/8":"America/Anchorage","18/63/8":"America/Anchorage","19/63/8":"America/Anchorage","20/63/8":"America/Anchorage","21/63/8":"America/Anchorage","22/63/8":"America/Anchorage","23/63/8":"America/Anchorage","24/63/8":"America/Anchorage","25/63/8":"America/Anchorage","26/63/8":"America/Anchorage","13/64/8":"America/Anchorage","14/64/8":"America/Anchorage","15/64/8":"America/Anchorage","16/64/8":"America/Anchorage","17/64/8":"America/Anchorage","18/64/8":"America/Anchorage","19/64/8":"America/Anchorage","20/64/8":"America/Anchorage","21/64/8":"America/Anchorage","22/64/8":"America/Anchorage","23/64/8":"America/Anchorage","24/64/8":"America/Anchorage","25/64/8":"America/Anchorage","26/64/8":"America/Anchorage","13/65/8":"America/Anchorage","14/65/8":"America/Anchorage","15/65/8":"America/Anchorage","16/65/8":"America/Anchorage","17/65/8":"America/Anchorage","18/65/8":"America/Anchorage","19/65/8":"America/Anchorage","20/65/8":"America/Anchorage","21/65/8":"America/Anchorage","22/65/8":"America/Anchorage","23/65/8":"America/Anchorage","24/65/8":"America/Anchorage","25/65/8":"America/Anchorage","26/65/8":"America/Anchorage","13/66/8":"America/Anchorage","14/66/8":"America/Anchorage","15/66/8":"America/Anchorage","16/66/8":"America/Anchorage","17/66/8":"America/Anchorage","18/66/8":"America/Anchorage","19/66/8":"America/Anchorage","20/66/8":"America/Anchorage","21/66/8":"America/Anchorage","22/66/8":"America/Anchorage","23/66/8":"America/Anchorage","24/66/8":"America/Anchorage","25/66/8":"America/Anchorage","26/66/8":"America/Anchorage","13/67/8":"America/Anchorage","14/67/8":"America/Anchorage","15/67/8":"America/Anchorage","16/67/8":"America/Anchorage","17/67/8":"America/Anchorage","18/67/8":"America/Anchorage","19/67/8":"America/Anchorage","20/67/8":"America/Anchorage","21/67/8":"America/Anchorage","22/67/8":"America/Anchorage","23/67/8":"America/Anchorage","24/67/8":"America/Anchorage","25/67/8":"America/Anchorage","26/67/8":"America/Anchorage","14/68/8":"America/Anchorage","15/68/8":"America/Anchorage","16/68/8":"America/Anchorage","17/68/8":"America/Anchorage","18/68/8":"America/Anchorage","19/68/8":"America/Anchorage","20/68/8":"America/Anchorage","21/68/8":"America/Anchorage","22/68/8":"America/Anchorage","23/68/8":"America/Anchorage","24/68/8":"America/Anchorage","25/68/8":"America/Anchorage","26/68/8":"America/Anchorage","13/69/8":"America/Anchorage","14/69/8":"America/Anchorage","15/69/8":"America/Anchorage","16/69/8":"America/Anchorage","17/69/8":"America/Anchorage","18/69/8":"America/Anchorage","19/69/8":"America/Anchorage","20/69/8":"America/Anchorage","21/69/8":"America/Anchorage","22/69/8":"America/Anchorage","23/69/8":"America/Anchorage","24/69/8":"America/Anchorage","25/69/8":"America/Anchorage","26/69/8":"America/Anchorage","13/70/8":"America/Anchorage","14/70/8":"America/Anchorage","15/70/8":"America/Anchorage","16/70/8":"America/Anchorage","17/70/8":"America/Anchorage","18/70/8":"America/Anchorage","19/70/8":"America/Anchorage","20/70/8":"America/Anchorage","21/70/8":"America/Anchorage","22/70/8":"America/Anchorage","23/70/8":"America/Anchorage","24/70/8":"America/Anchorage","25/70/8":"America/Anchorage","26/70/8":"America/Anchorage","13/71/8":"America/Anchorage","14/71/8":"America/Anchorage","15/71/8":"America/Anchorage","16/71/8":"America/Anchorage","17/71/8":"America/Anchorage","18/71/8":"America/Anchorage","19/71/8":"America/Anchorage","20/71/8":"America/Anchorage","21/71/8":"America/Anchorage","22/71/8":"America/Anchorage","23/71/8":"America/Anchorage","24/71/8":"America/Anchorage","25/71/8":"America/Anchorage","26/71/8":"America/Anchorage","13/72/8":"America/Anchorage","14/72/8":"America/Anchorage","15/72/8":"America/Anchorage","16/72/8":"America/Anchorage","17/72/8":"America/Anchorage","18/72/8":"America/Anchorage","19/72/8":"America/Anchorage","20/72/8":"America/Anchorage","21/72/8":"America/Anchorage","22/72/8":"America/Anchorage","23/72/8":"America/Anchorage","24/72/8":"America/Anchorage","25/72/8":"America/Anchorage","26/72/8":"America/Anchorage","13/73/8":"America/Anchorage","14/73/8":"America/Anchorage","15/73/8":"America/Anchorage","16/73/8":"America/Anchorage","17/73/8":"America/Anchorage","18/73/8":"America/Anchorage","19/73/8":"America/Anchorage","20/73/8":"America/Anchorage","21/73/8":"America/Anchorage","22/73/8":"America/Anchorage","23/73/8":"America/Anchorage","24/73/8":"America/Anchorage","25/73/8":"America/Anchorage","26/73/8":"America/Anchorage","13/74/8":"America/Anchorage","14/74/8":"America/Anchorage","15/74/8":"America/Anchorage","16/74/8":"America/Anchorage","17/74/8":"America/Anchorage","18/74/8":"America/Anchorage","19/74/8":"America/Anchorage","20/74/8":"America/Anchorage","13/75/8":"America/Anchorage","14/75/8":"America/Anchorage","15/75/8":"America/Anchorage","16/75/8":"America/Anchorage","17/75/8":"America/Anchorage","18/75/8":"America/Anchorage","19/75/8":"America/Anchorage","16/76/8":"America/Anchorage","17/76/8":"America/Anchorage","18/76/8":"America/Anchorage","16/77/8":"America/Anchorage","18/77/8":"America/Anchorage","14/79/8":"America/Anchorage","13/80/8":"America/Anchorage","16/53/8":"America/Anchorage","17/53/8":"America/Anchorage","14/54/8":"America/Anchorage","15/54/8":"America/Anchorage","16/54/8":"America/Anchorage","17/54/8":"America/Anchorage","18/54/8":"America/Anchorage","19/54/8":"America/Anchorage","13/55/8":"America/Anchorage","14/55/8":"America/Anchorage","15/55/8":"America/Anchorage","19/55/8":"America/Anchorage","20/55/8":"America/Anchorage","21/55/8":"America/Anchorage","22/55/8":"America/Anchorage","23/55/8":"America/Anchorage","12/56/8":"America/Nome","13/56/8":"America/Anchorage","23/56/8":"America/Anchorage","24/56/8":"America/Anchorage","25/56/8":"America/Anchorage","26/56/8":"America/Anchorage","12/57/8":"America/Nome","26/57/8":"America/Anchorage","27/57/8":"America/Anchorage","12/58/8":"America/Nome","27/58/8":"America/Anchorage","12/59/8":"America/Nome","27/59/8":"America/Anchorage","12/60/8":"America/Nome","27/60/8":"America/Anchorage","12/61/8":"America/Nome","27/61/8":"America/Anchorage","12/62/8":"America/Nome","27/62/8":"America/Anchorage","12/63/8":"America/Nome","27/63/8":"America/Anchorage","12/64/8":"America/Nome","27/64/8":"America/Anchorage","12/65/8":"America/Nome","27/65/8":"America/Anchorage","12/66/8":"America/Nome","27/66/8":"America/Anchorage","12/67/8":"America/Nome","27/67/8":"America/Anchorage","12/68/8":"America/Nome","13/68/8":"America/Anchorage","27/68/8":"America/Anchorage","12/69/8":"America/Nome","27/69/8":"America/Anchorage","12/70/8":"America/Nome","27/70/8":"America/Anchorage","12/71/8":"America/Nome","27/71/8":"America/Anchorage","12/72/8":"America/Nome","27/72/8":"America/Anchorage","12/73/8":"America/Nome","27/73/8":"America/Anchorage","12/74/8":"America/Nome","21/74/8":"America/Anchorage","22/74/8":"America/Anchorage","23/74/8":"America/Anchorage","24/74/8":"America/Anchorage","25/74/8":"America/Anchorage","26/74/8":"America/Anchorage","27/74/8":"America/Anchorage","12/75/8":"America/Nome","20/75/8":"America/Anchorage","21/75/8":"America/Anchorage","23/75/8":"America/Anchorage","24/75/8":"America/Anchorage","12/76/8":"America/Nome","13/76/8":"America/Anchorage","14/76/8":"America/Anchorage","15/76/8":"America/Anchorage","19/76/8":"America/Anchorage","20/76/8":"America/Anchorage","15/77/8":"America/Anchorage","17/77/8":"America/Anchorage","19/77/8":"America/Anchorage","20/77/8":"America/Anchorage","13/78/8":"America/Anchorage","14/78/8":"America/Anchorage","15/78/8":"America/Anchorage","16/78/8":"America/Anchorage","17/78/8":"America/Anchorage","18/78/8":"America/Anchorage","19/78/8":"America/Anchorage","12/79/8":"America/Nome","13/79/8":"America/Anchorage","15/79/8":"America/Anchorage","16/79/8":"America/Anchorage","17/79/8":"America/Anchorage","18/79/8":"America/Anchorage","12/80/8":"America/Nome","14/80/8":"America/Anchorage","15/80/8":"America/Anchorage","16/80/8":"America/Anchorage","17/80/8":"America/Anchorage","12/81/8":"America/Nome","13/81/8":"America/Anchorage","14/81/8":"America/Anchorage","15/81/8":"America/Anchorage","82/114/8":"America/Tortola","83/114/8":"America/Anguilla","83/115/8":"America/St_Kitts","84/115/8":"America/Antigua","78/118/8":"America/Aruba","78/119/8":"America/Caracas","93/134/8":"America/Araguaina","93/135/8":"America/Araguaina","93/136/8":"America/Araguaina","93/131/8":"America/Belem","94/131/8":"America/Fortaleza","93/132/8":"America/Araguaina","94/132/8":"America/Fortaleza","92/133/8":"America/Belem","93/133/8":"America/Araguaina","94/133/8":"America/Fortaleza","92/134/8":"America/Belem","94/134/8":"America/Araguaina","91/135/8":"America/Cuiaba","92/135/8":"America/Araguaina","94/135/8":"America/Araguaina","95/135/8":"America/Fortaleza","91/136/8":"America/Cuiaba","92/136/8":"America/Araguaina","94/136/8":"America/Araguaina","95/136/8":"America/Bahia","91/137/8":"America/Cuiaba","92/137/8":"America/Sao_Paulo","93/137/8":"America/Sao_Paulo","94/137/8":"America/Sao_Paulo","95/137/8":"America/Bahia","85/154/8":"America/Argentina/Buenos_Aires","83/155/8":"America/Argentina/Buenos_Aires","84/155/8":"America/Argentina/Buenos_Aires","85/155/8":"America/Argentina/Buenos_Aires","86/155/8":"America/Argentina/Buenos_Aires","83/156/8":"America/Argentina/Buenos_Aires","84/156/8":"America/Argentina/Buenos_Aires","85/156/8":"America/Argentina/Buenos_Aires","86/156/8":"America/Argentina/Buenos_Aires","83/157/8":"America/Argentina/Buenos_Aires","84/157/8":"America/Argentina/Buenos_Aires","85/157/8":"America/Argentina/Buenos_Aires","83/158/8":"America/Argentina/Buenos_Aires","84/153/8":"America/Argentina/Cordoba","85/153/8":"America/Argentina/Buenos_Aires","86/153/8":"America/Montevideo","82/154/8":"America/Argentina/Cordoba","83/154/8":"America/Argentina/Buenos_Aires","84/154/8":"America/Argentina/Buenos_Aires","86/154/8":"America/Argentina/Buenos_Aires","87/154/8":"America/Montevideo","88/154/8":"America/Montevideo","82/155/8":"America/Argentina/Salta","87/155/8":"America/Argentina/Buenos_Aires","88/155/8":"America/Argentina/Buenos_Aires","82/156/8":"America/Argentina/Salta","87/156/8":"America/Argentina/Buenos_Aires","82/157/8":"America/Argentina/Salta","86/157/8":"America/Argentina/Buenos_Aires","87/157/8":"America/Argentina/Buenos_Aires","82/158/8":"America/Argentina/Salta","84/158/8":"America/Argentina/Buenos_Aires","85/158/8":"America/Argentina/Buenos_Aires","86/158/8":"America/Argentina/Buenos_Aires","82/159/8":"America/Argentina/Salta","83/159/8":"America/Argentina/Buenos_Aires","84/159/8":"America/Argentina/Buenos_Aires","83/160/8":"America/Argentina/Salta","77/161/8":"America/Argentina/Catamarca","78/161/8":"America/Argentina/Catamarca","79/161/8":"America/Argentina/Catamarca","80/161/8":"America/Argentina/Catamarca","81/161/8":"America/Argentina/Catamarca","78/162/8":"America/Argentina/Catamarca","79/162/8":"America/Argentina/Catamarca","80/162/8":"America/Argentina/Catamarca","78/163/8":"America/Argentina/Catamarca","79/163/8":"America/Argentina/Catamarca","80/163/8":"America/Argentina/Catamarca","79/146/8":"America/Argentina/Salta","80/146/8":"America/Argentina/Salta","79/147/8":"America/Argentina/Catamarca","80/147/8":"America/Argentina/Catamarca","81/147/8":"America/Argentina/Tucuman","78/148/8":"America/Santiago","79/148/8":"America/Argentina/Catamarca","80/148/8":"America/Argentina/Catamarca","81/148/8":"America/Argentina/Tucuman","79/149/8":"America/Argentina/La_Rioja","80/149/8":"America/Argentina/La_Rioja","81/149/8":"America/Argentina/Catamarca","81/150/8":"America/Argentina/La_Rioja","76/160/8":"America/Santiago","77/160/8":"America/Argentina/Salta","78/160/8":"America/Argentina/Salta","79/160/8":"America/Argentina/Salta","80/160/8":"America/Argentina/Salta","81/160/8":"America/Argentina/Salta","82/160/8":"America/Argentina/Salta","76/161/8":"America/Santiago","82/161/8":"America/Argentina/Catamarca","76/162/8":"America/Santiago","77/162/8":"America/Argentina/Catamarca","81/162/8":"America/Argentina/Catamarca","82/162/8":"America/Argentina/Catamarca","76/163/8":"America/Santiago","77/163/8":"America/Argentina/Catamarca","81/163/8":"America/Argentina/Catamarca","76/164/8":"America/Santiago","77/164/8":"America/Argentina/Catamarca","78/164/8":"America/Argentina/Catamarca","79/164/8":"America/Argentina/Catamarca","80/164/8":"America/Argentina/Catamarca","81/164/8":"America/Argentina/Catamarca","84/146/8":"America/Argentina/Cordoba","83/147/8":"America/Argentina/Cordoba","84/147/8":"America/Argentina/Cordoba","85/147/8":"America/Argentina/Cordoba","82/148/8":"America/Argentina/Cordoba","83/148/8":"America/Argentina/Cordoba","84/148/8":"America/Argentina/Cordoba","85/148/8":"America/Argentina/Cordoba","82/149/8":"America/Argentina/Cordoba","83/149/8":"America/Argentina/Cordoba","84/149/8":"America/Argentina/Cordoba","85/149/8":"America/Argentina/Cordoba","86/149/8":"America/Argentina/Cordoba","82/150/8":"America/Argentina/Cordoba","83/150/8":"America/Argentina/Cordoba","84/150/8":"America/Argentina/Cordoba","85/150/8":"America/Argentina/Cordoba","82/151/8":"America/Argentina/Cordoba","83/151/8":"America/Argentina/Cordoba","84/151/8":"America/Argentina/Cordoba","85/151/8":"America/Argentina/Cordoba","82/152/8":"America/Argentina/Cordoba","83/152/8":"America/Argentina/Cordoba","84/152/8":"America/Argentina/Cordoba","85/152/8":"America/Argentina/Cordoba","82/153/8":"America/Argentina/Cordoba","83/153/8":"America/Argentina/Cordoba","83/144/8":"America/Argentina/Salta","84/144/8":"America/Asuncion","83/145/8":"America/Argentina/Salta","84/145/8":"America/Argentina/Cordoba","85/145/8":"America/Asuncion","82/146/8":"America/Argentina/Salta","83/146/8":"America/Argentina/Cordoba","85/146/8":"America/Argentina/Cordoba","86/146/8":"America/Argentina/Cordoba","87/146/8":"America/Asuncion","89/146/8":"America/Sao_Paulo","82/147/8":"America/Argentina/Cordoba","86/147/8":"America/Argentina/Cordoba","88/147/8":"America/Asuncion","89/147/8":"America/Argentina/Cordoba","86/148/8":"America/Argentina/Cordoba","87/148/8":"America/Argentina/Cordoba","88/148/8":"America/Argentina/Cordoba","89/148/8":"America/Sao_Paulo","87/149/8":"America/Argentina/Cordoba","88/149/8":"America/Sao_Paulo","86/150/8":"America/Argentina/Cordoba","87/150/8":"America/Sao_Paulo","81/151/8":"America/Argentina/Cordoba","86/151/8":"America/Argentina/Cordoba","81/152/8":"America/Argentina/San_Luis","86/152/8":"America/Argentina/Cordoba","81/153/8":"America/Argentina/San_Luis","81/154/8":"America/Argentina/San_Luis","80/143/8":"America/La_Paz","81/143/8":"America/La_Paz","80/144/8":"America/Argentina/Jujuy","81/144/8":"America/Argentina/Jujuy","80/145/8":"America/Argentina/Salta","81/145/8":"America/Argentina/Jujuy","82/145/8":"America/Argentina/Salta","81/146/8":"America/Argentina/Salta","78/149/8":"America/Argentina/San_Juan","78/150/8":"America/Argentina/San_Juan","79/150/8":"America/Argentina/San_Juan","80/150/8":"America/Argentina/La_Rioja","80/151/8":"America/Argentina/La_Rioja","80/152/8":"America/Argentina/San_Luis","79/153/8":"America/Argentina/Mendoza","79/154/8":"America/Argentina/Mendoza","78/152/8":"America/Argentina/Mendoza","79/152/8":"America/Argentina/Mendoza","78/153/8":"America/Argentina/Mendoza","80/153/8":"America/Argentina/San_Luis","77/154/8":"America/Santiago","78/154/8":"America/Argentina/Mendoza","80/154/8":"America/Argentina/Mendoza","77/155/8":"America/Santiago","78/155/8":"America/Argentina/Mendoza","79/155/8":"America/Argentina/Mendoza","80/155/8":"America/Argentina/Salta","78/156/8":"America/Argentina/Salta","79/156/8":"America/Argentina/Salta","78/165/8":"America/Argentina/Rio_Gallegos","79/165/8":"America/Argentina/Rio_Gallegos","80/165/8":"America/Argentina/Rio_Gallegos","77/166/8":"America/Argentina/Rio_Gallegos","78/166/8":"America/Argentina/Rio_Gallegos","79/166/8":"America/Argentina/Rio_Gallegos","80/166/8":"America/Argentina/Rio_Gallegos","77/167/8":"America/Argentina/Rio_Gallegos","78/167/8":"America/Argentina/Rio_Gallegos","79/167/8":"America/Argentina/Rio_Gallegos","77/168/8":"America/Argentina/Rio_Gallegos","78/168/8":"America/Argentina/Rio_Gallegos","79/168/8":"America/Argentina/Rio_Gallegos","77/169/8":"America/Argentina/Rio_Gallegos","78/169/8":"America/Argentina/Rio_Gallegos","77/170/8":"America/Argentina/Rio_Gallegos","78/170/8":"America/Argentina/Rio_Gallegos","76/165/8":"America/Santiago","77/165/8":"America/Argentina/Rio_Gallegos","81/165/8":"America/Argentina/Rio_Gallegos","76/166/8":"America/Santiago","81/166/8":"America/Argentina/Rio_Gallegos","76/167/8":"America/Argentina/Rio_Gallegos","80/167/8":"America/Argentina/Rio_Gallegos","81/167/8":"America/Argentina/Rio_Gallegos","75/168/8":"America/Argentina/Rio_Gallegos","76/168/8":"America/Argentina/Rio_Gallegos","80/168/8":"America/Argentina/Rio_Gallegos","75/169/8":"America/Argentina/Rio_Gallegos","76/169/8":"America/Argentina/Rio_Gallegos","79/169/8":"America/Argentina/Rio_Gallegos","80/169/8":"America/Argentina/Rio_Gallegos","75/170/8":"America/Argentina/Rio_Gallegos","76/170/8":"America/Argentina/Rio_Gallegos","79/170/8":"America/Argentina/Rio_Gallegos","76/171/8":"America/Argentina/Rio_Gallegos","77/171/8":"America/Argentina/Rio_Gallegos","78/171/8":"America/Argentina/Rio_Gallegos","79/171/8":"America/Argentina/Rio_Gallegos","79/172/8":"America/Argentina/Ushuaia","80/156/8":"America/Argentina/Salta","81/156/8":"America/Argentina/Salta","78/157/8":"America/Argentina/Salta","79/157/8":"America/Argentina/Salta","80/157/8":"America/Argentina/Salta","81/157/8":"America/Argentina/Salta","78/158/8":"America/Argentina/Salta","79/158/8":"America/Argentina/Salta","80/158/8":"America/Argentina/Salta","81/158/8":"America/Argentina/Salta","78/159/8":"America/Argentina/Salta","79/159/8":"America/Argentina/Salta","80/159/8":"America/Argentina/Salta","81/159/8":"America/Argentina/Salta","82/144/8":"America/Argentina/Salta","79/145/8":"America/Santiago","81/155/8":"America/Argentina/Salta","77/156/8":"America/Argentina/Salta","77/157/8":"America/Santiago","77/158/8":"America/Argentina/Salta","76/159/8":"America/Santiago","77/159/8":"America/Argentina/Salta","79/151/8":"America/Argentina/San_Juan","77/151/8":"America/Santiago","78/151/8":"America/Argentina/San_Juan","77/152/8":"America/Santiago","79/173/8":"America/Argentina/Ushuaia","80/173/8":"America/Argentina/Ushuaia","79/174/8":"America/Argentina/Ushuaia","80/174/8":"America/Argentina/Ushuaia","81/174/8":"America/Argentina/Ushuaia","82/174/8":"America/Argentina/Ushuaia","80/175/8":"America/Argentina/Ushuaia","81/175/8":"America/Argentina/Ushuaia","82/175/8":"America/Argentina/Ushuaia","84/143/8":"America/Asuncion","85/143/8":"America/Asuncion","85/144/8":"America/Asuncion","86/145/8":"America/Asuncion","87/145/8":"America/Asuncion","88/146/8":"America/Asuncion","87/147/8":"America/Asuncion","85/141/8":"America/La_Paz","86/141/8":"America/La_Paz","83/142/8":"America/La_Paz","84/142/8":"America/Asuncion","85/142/8":"America/Asuncion","86/142/8":"America/Asuncion","83/143/8":"America/La_Paz","86/143/8":"America/Asuncion","86/144/8":"America/Asuncion","87/144/8":"America/Asuncion","88/144/8":"America/Campo_Grande","88/145/8":"America/Asuncion","89/145/8":"America/Sao_Paulo","62/87/8":"America/Winnipeg","63/87/8":"America/Winnipeg","62/88/8":"America/Winnipeg","63/88/8":"America/Atikokan","64/88/8":"America/Toronto","97/135/8":"America/Bahia","98/135/8":"America/Bahia","99/135/8":"America/Bahia","96/136/8":"America/Bahia","97/136/8":"America/Bahia","98/136/8":"America/Bahia","99/136/8":"America/Bahia","96/137/8":"America/Bahia","97/137/8":"America/Bahia","98/137/8":"America/Bahia","99/137/8":"America/Bahia","99/138/8":"America/Bahia","96/134/8":"America/Fortaleza","97/134/8":"America/Fortaleza","98/134/8":"America/Bahia","99/134/8":"America/Bahia","100/134/8":"America/Bahia","96/135/8":"America/Fortaleza","100/135/8":"America/Bahia","101/135/8":"America/Maceio","100/136/8":"America/Bahia","101/136/8":"America/Bahia","100/137/8":"America/Bahia","101/137/8":"America/Bahia","95/138/8":"America/Bahia","96/138/8":"America/Sao_Paulo","97/138/8":"America/Bahia","98/138/8":"America/Bahia","100/138/8":"America/Bahia","98/139/8":"America/Sao_Paulo","99/139/8":"America/Bahia","100/139/8":"America/Bahia","99/140/8":"America/Bahia","100/140/8":"America/Bahia","99/141/8":"America/Sao_Paulo","100/141/8":"America/Bahia","52/112/8":"America/Mazatlan","53/112/8":"America/Mazatlan","52/113/8":"America/Mexico_City","53/113/8":"America/Mexico_City","85/118/8":"America/Barbados","91/127/8":"America/Belem","92/128/8":"America/Belem","92/129/8":"America/Belem","93/129/8":"America/Belem","92/130/8":"America/Belem","93/130/8":"America/Belem","91/131/8":"America/Belem","92/131/8":"America/Belem","92/132/8":"America/Belem","91/133/8":"America/Belem","91/124/8":"America/Cayenne","90/125/8":"America/Cayenne","91/125/8":"America/Belem","88/126/8":"America/Santarem","89/126/8":"America/Belem","90/126/8":"America/Belem","91/126/8":"America/Belem","92/126/8":"America/Belem","89/127/8":"America/Santarem","90/127/8":"America/Belem","92/127/8":"America/Belem","93/127/8":"America/Belem","90/128/8":"America/Santarem","91/128/8":"America/Belem","93/128/8":"America/Belem","94/128/8":"America/Belem","95/128/8":"America/Fortaleza","90/129/8":"America/Santarem","91/129/8":"America/Belem","94/129/8":"America/Belem","95/129/8":"America/Fortaleza","90/130/8":"America/Santarem","91/130/8":"America/Belem","94/130/8":"America/Belem","90/131/8":"America/Belem","90/132/8":"America/Santarem","91/132/8":"America/Belem","90/133/8":"America/Santarem","90/134/8":"America/Santarem","91/134/8":"America/Belem","64/114/8":"America/Merida","65/114/8":"America/Cancun","64/115/8":"America/Guatemala","65/115/8":"America/Belize","64/116/8":"America/Guatemala","65/116/8":"America/Tegucigalpa","85/85/8":"America/Blanc-Sablon","84/84/8":"America/Goose_Bay","85/84/8":"America/Goose_Bay","86/84/8":"America/Goose_Bay","87/84/8":"America/St_Johns","84/85/8":"America/Blanc-Sablon","86/85/8":"America/Blanc-Sablon","87/85/8":"America/St_Johns","84/86/8":"America/Blanc-Sablon","85/86/8":"America/Blanc-Sablon","86/86/8":"America/St_Johns","84/87/8":"America/Blanc-Sablon","85/87/8":"America/St_Johns","84/88/8":"America/Halifax","84/126/8":"America/Boa_Vista","84/127/8":"America/Boa_Vista","81/124/8":"America/Caracas","82/124/8":"America/Caracas","84/124/8":"America/Caracas","85/124/8":"America/Guyana","81/125/8":"America/Caracas","82/125/8":"America/Boa_Vista","83/125/8":"America/Boa_Vista","84/125/8":"America/Boa_Vista","85/125/8":"America/Guyana","82/126/8":"America/Caracas","83/126/8":"America/Boa_Vista","85/126/8":"America/Boa_Vista","83/127/8":"America/Manaus","85/127/8":"America/Boa_Vista","86/127/8":"America/Santarem","83/128/8":"America/Manaus","84/128/8":"America/Boa_Vista","85/128/8":"America/Manaus","84/129/8":"America/Manaus","75/120/8":"America/Bogota","74/121/8":"America/Bogota","74/122/8":"America/Bogota","75/122/8":"America/Bogota","73/123/8":"America/Bogota","74/123/8":"America/Bogota","75/123/8":"America/Bogota","73/124/8":"America/Bogota","74/124/8":"America/Bogota","75/124/8":"America/Bogota","76/124/8":"America/Bogota","77/124/8":"America/Bogota","78/124/8":"America/Bogota","73/125/8":"America/Bogota","74/125/8":"America/Bogota","75/125/8":"America/Bogota","76/125/8":"America/Bogota","77/125/8":"America/Bogota","78/125/8":"America/Bogota","73/126/8":"America/Bogota","74/126/8":"America/Bogota","75/126/8":"America/Bogota","76/126/8":"America/Bogota","77/126/8":"America/Bogota","75/127/8":"America/Bogota","76/127/8":"America/Bogota","77/127/8":"America/Bogota","76/128/8":"America/Bogota","77/128/8":"America/Bogota","71/116/8":"America/Bogota","72/116/8":"America/Bogota","70/117/8":"America/Bogota","71/117/8":"America/Bogota","69/118/8":"America/Bogota","70/118/8":"America/Bogota","71/118/8":"America/Bogota","76/118/8":"America/Bogota","77/118/8":"America/Caracas","69/119/8":"America/Bogota","70/119/8":"America/Bogota","74/119/8":"America/Bogota","75/119/8":"America/Bogota","76/119/8":"America/Bogota","77/119/8":"America/Caracas","73/120/8":"America/Bogota","74/120/8":"America/Bogota","76/120/8":"America/Caracas","72/121/8":"America/Panama","73/121/8":"America/Bogota","75/121/8":"America/Bogota","76/121/8":"America/Caracas","72/122/8":"America/Panama","73/122/8":"America/Bogota","76/122/8":"America/Bogota","77/122/8":"America/Caracas","72/123/8":"America/Bogota","76/123/8":"America/Bogota","77/123/8":"America/Bogota","78/123/8":"America/Bogota","79/123/8":"America/Caracas","80/123/8":"America/Caracas","69/124/8":"America/Bogota","72/124/8":"America/Bogota","79/124/8":"America/Bogota","69/125/8":"America/Bogota","70/125/8":"America/Bogota","72/125/8":"America/Bogota","79/125/8":"America/Bogota","80/125/8":"America/Caracas","71/126/8":"America/Bogota","72/126/8":"America/Bogota","78/126/8":"America/Bogota","79/126/8":"America/Bogota","80/126/8":"America/Caracas","71/127/8":"America/Guayaquil","72/127/8":"America/Guayaquil","73/127/8":"America/Bogota","74/127/8":"America/Bogota","78/127/8":"America/Manaus","80/127/8":"America/Manaus","74/128/8":"America/Lima","75/128/8":"America/Bogota","78/128/8":"America/Manaus","75/129/8":"America/Lima","76/129/8":"America/Bogota","77/129/8":"America/Bogota","78/129/8":"America/Bogota","77/130/8":"America/Lima","78/130/8":"America/Manaus","78/131/8":"America/Manaus","45/92/8":"America/Boise","46/92/8":"America/Boise","44/93/8":"America/Boise","45/93/8":"America/Boise","46/93/8":"America/Boise","47/93/8":"America/Boise","48/93/8":"America/Boise","45/94/8":"America/Boise","46/94/8":"America/Boise","47/94/8":"America/Boise","48/94/8":"America/Boise","44/91/8":"America/Los_Angeles","45/91/8":"America/Los_Angeles","46/91/8":"America/Boise","47/91/8":"America/Denver","43/92/8":"America/Los_Angeles","44/92/8":"America/Los_Angeles","47/92/8":"America/Boise","48/92/8":"America/Denver","49/92/8":"America/Denver","43/93/8":"America/Los_Angeles","49/93/8":"America/Denver","43/94/8":"America/Los_Angeles","44/94/8":"America/Boise","49/94/8":"America/Denver","44/95/8":"America/Los_Angeles","45/95/8":"America/Los_Angeles","46/95/8":"America/Los_Angeles","47/95/8":"America/Denver","48/95/8":"America/Denver","49/95/8":"America/Denver","54/30/8":"America/Cambridge_Bay","52/31/8":"America/Cambridge_Bay","53/31/8":"America/Cambridge_Bay","54/31/8":"America/Cambridge_Bay","51/32/8":"America/Cambridge_Bay","52/32/8":"America/Cambridge_Bay","53/32/8":"America/Cambridge_Bay","54/32/8":"America/Cambridge_Bay","50/33/8":"America/Cambridge_Bay","51/33/8":"America/Cambridge_Bay","52/33/8":"America/Cambridge_Bay","53/33/8":"America/Cambridge_Bay","54/33/8":"America/Cambridge_Bay","50/34/8":"America/Cambridge_Bay","51/34/8":"America/Cambridge_Bay","52/34/8":"America/Cambridge_Bay","53/34/8":"America/Cambridge_Bay","54/34/8":"America/Cambridge_Bay","50/35/8":"America/Cambridge_Bay","51/35/8":"America/Cambridge_Bay","52/35/8":"America/Cambridge_Bay","53/35/8":"America/Cambridge_Bay","54/35/8":"America/Cambridge_Bay","50/36/8":"America/Cambridge_Bay","51/36/8":"America/Cambridge_Bay","52/36/8":"America/Cambridge_Bay","53/36/8":"America/Cambridge_Bay","54/36/8":"America/Cambridge_Bay","50/37/8":"America/Cambridge_Bay","51/37/8":"America/Cambridge_Bay","52/37/8":"America/Cambridge_Bay","53/37/8":"America/Cambridge_Bay","54/37/8":"America/Cambridge_Bay","50/38/8":"America/Cambridge_Bay","51/38/8":"America/Cambridge_Bay","52/38/8":"America/Cambridge_Bay","53/38/8":"America/Cambridge_Bay","54/38/8":"America/Cambridge_Bay","50/39/8":"America/Cambridge_Bay","51/39/8":"America/Cambridge_Bay","52/39/8":"America/Cambridge_Bay","53/39/8":"America/Cambridge_Bay","54/39/8":"America/Cambridge_Bay","50/40/8":"America/Cambridge_Bay","51/40/8":"America/Cambridge_Bay","52/40/8":"America/Cambridge_Bay","53/40/8":"America/Cambridge_Bay","54/40/8":"America/Cambridge_Bay","50/41/8":"America/Cambridge_Bay","51/41/8":"America/Cambridge_Bay","52/41/8":"America/Cambridge_Bay","53/41/8":"America/Cambridge_Bay","54/41/8":"America/Cambridge_Bay","50/42/8":"America/Cambridge_Bay","51/42/8":"America/Cambridge_Bay","52/42/8":"America/Cambridge_Bay","53/42/8":"America/Cambridge_Bay","54/42/8":"America/Cambridge_Bay","50/43/8":"America/Cambridge_Bay","51/43/8":"America/Cambridge_Bay","52/43/8":"America/Cambridge_Bay","53/43/8":"America/Cambridge_Bay","54/43/8":"America/Cambridge_Bay","50/44/8":"America/Cambridge_Bay","51/44/8":"America/Cambridge_Bay","52/44/8":"America/Cambridge_Bay","53/44/8":"America/Cambridge_Bay","54/44/8":"America/Cambridge_Bay","50/45/8":"America/Cambridge_Bay","51/45/8":"America/Cambridge_Bay","52/45/8":"America/Cambridge_Bay","53/45/8":"America/Cambridge_Bay","54/45/8":"America/Cambridge_Bay","50/46/8":"America/Cambridge_Bay","51/46/8":"America/Cambridge_Bay","52/46/8":"America/Cambridge_Bay","53/46/8":"America/Cambridge_Bay","54/46/8":"America/Cambridge_Bay","50/47/8":"America/Cambridge_Bay","51/47/8":"America/Cambridge_Bay","52/47/8":"America/Cambridge_Bay","53/47/8":"America/Cambridge_Bay","54/47/8":"America/Cambridge_Bay","50/48/8":"America/Cambridge_Bay","51/48/8":"America/Cambridge_Bay","52/48/8":"America/Cambridge_Bay","53/48/8":"America/Cambridge_Bay","54/48/8":"America/Cambridge_Bay","50/49/8":"America/Cambridge_Bay","51/49/8":"America/Cambridge_Bay","52/49/8":"America/Cambridge_Bay","53/49/8":"America/Cambridge_Bay","54/49/8":"America/Cambridge_Bay","50/50/8":"America/Cambridge_Bay","51/50/8":"America/Cambridge_Bay","52/50/8":"America/Cambridge_Bay","53/50/8":"America/Cambridge_Bay","54/50/8":"America/Cambridge_Bay","55/50/8":"America/Cambridge_Bay","50/51/8":"America/Cambridge_Bay","51/51/8":"America/Cambridge_Bay","52/51/8":"America/Cambridge_Bay","53/51/8":"America/Cambridge_Bay","54/51/8":"America/Cambridge_Bay","55/51/8":"America/Cambridge_Bay","56/51/8":"America/Cambridge_Bay","57/51/8":"America/Cambridge_Bay","50/52/8":"America/Cambridge_Bay","51/52/8":"America/Cambridge_Bay","52/52/8":"America/Cambridge_Bay","53/52/8":"America/Cambridge_Bay","54/52/8":"America/Cambridge_Bay","55/52/8":"America/Cambridge_Bay","56/52/8":"America/Cambridge_Bay","57/52/8":"America/Cambridge_Bay","58/52/8":"America/Cambridge_Bay","59/52/8":"America/Cambridge_Bay","50/53/8":"America/Cambridge_Bay","51/53/8":"America/Cambridge_Bay","52/53/8":"America/Cambridge_Bay","53/53/8":"America/Cambridge_Bay","54/53/8":"America/Cambridge_Bay","55/53/8":"America/Cambridge_Bay","56/53/8":"America/Cambridge_Bay","57/53/8":"America/Cambridge_Bay","58/53/8":"America/Cambridge_Bay","59/53/8":"America/Cambridge_Bay","60/53/8":"America/Cambridge_Bay","61/53/8":"America/Cambridge_Bay","50/54/8":"America/Cambridge_Bay","51/54/8":"America/Cambridge_Bay","52/54/8":"America/Cambridge_Bay","53/54/8":"America/Cambridge_Bay","54/54/8":"America/Cambridge_Bay","55/54/8":"America/Cambridge_Bay","56/54/8":"America/Cambridge_Bay","57/54/8":"America/Cambridge_Bay","58/54/8":"America/Cambridge_Bay","59/54/8":"America/Cambridge_Bay","60/54/8":"America/Cambridge_Bay","61/54/8":"America/Cambridge_Bay","50/55/8":"America/Cambridge_Bay","51/55/8":"America/Cambridge_Bay","52/55/8":"America/Cambridge_Bay","53/55/8":"America/Cambridge_Bay","54/55/8":"America/Cambridge_Bay","55/55/8":"America/Cambridge_Bay","56/55/8":"America/Cambridge_Bay","57/55/8":"America/Cambridge_Bay","58/55/8":"America/Cambridge_Bay","59/55/8":"America/Cambridge_Bay","60/55/8":"America/Cambridge_Bay","61/55/8":"America/Cambridge_Bay","62/55/8":"America/Cambridge_Bay","50/56/8":"America/Cambridge_Bay","51/56/8":"America/Cambridge_Bay","52/56/8":"America/Cambridge_Bay","53/56/8":"America/Cambridge_Bay","54/56/8":"America/Cambridge_Bay","55/56/8":"America/Cambridge_Bay","56/56/8":"America/Cambridge_Bay","57/56/8":"America/Cambridge_Bay","58/56/8":"America/Cambridge_Bay","59/56/8":"America/Cambridge_Bay","60/56/8":"America/Cambridge_Bay","61/56/8":"America/Cambridge_Bay","62/56/8":"America/Cambridge_Bay","50/57/8":"America/Cambridge_Bay","51/57/8":"America/Cambridge_Bay","52/57/8":"America/Cambridge_Bay","53/57/8":"America/Cambridge_Bay","54/57/8":"America/Cambridge_Bay","55/57/8":"America/Cambridge_Bay","56/57/8":"America/Cambridge_Bay","57/57/8":"America/Cambridge_Bay","58/57/8":"America/Cambridge_Bay","59/57/8":"America/Cambridge_Bay","60/57/8":"America/Cambridge_Bay","61/57/8":"America/Cambridge_Bay","62/57/8":"America/Cambridge_Bay","63/57/8":"America/Cambridge_Bay","46/58/8":"America/Cambridge_Bay","47/58/8":"America/Cambridge_Bay","48/58/8":"America/Cambridge_Bay","49/58/8":"America/Cambridge_Bay","50/58/8":"America/Cambridge_Bay","51/58/8":"America/Cambridge_Bay","52/58/8":"America/Cambridge_Bay","53/58/8":"America/Cambridge_Bay","54/58/8":"America/Cambridge_Bay","55/58/8":"America/Cambridge_Bay","56/58/8":"America/Cambridge_Bay","57/58/8":"America/Cambridge_Bay","58/58/8":"America/Cambridge_Bay","59/58/8":"America/Cambridge_Bay","60/58/8":"America/Cambridge_Bay","61/58/8":"America/Cambridge_Bay","62/58/8":"America/Cambridge_Bay","63/58/8":"America/Cambridge_Bay","43/59/8":"America/Cambridge_Bay","44/59/8":"America/Cambridge_Bay","45/59/8":"America/Cambridge_Bay","46/59/8":"America/Cambridge_Bay","47/59/8":"America/Cambridge_Bay","48/59/8":"America/Cambridge_Bay","49/59/8":"America/Cambridge_Bay","50/59/8":"America/Cambridge_Bay","51/59/8":"America/Cambridge_Bay","52/59/8":"America/Cambridge_Bay","53/59/8":"America/Cambridge_Bay","54/59/8":"America/Cambridge_Bay","55/59/8":"America/Cambridge_Bay","56/59/8":"America/Cambridge_Bay","57/59/8":"America/Cambridge_Bay","58/59/8":"America/Cambridge_Bay","59/59/8":"America/Cambridge_Bay","60/59/8":"America/Cambridge_Bay","61/59/8":"America/Cambridge_Bay","62/59/8":"America/Cambridge_Bay","63/59/8":"America/Cambridge_Bay","43/60/8":"America/Cambridge_Bay","44/60/8":"America/Cambridge_Bay","45/60/8":"America/Cambridge_Bay","46/60/8":"America/Cambridge_Bay","47/60/8":"America/Cambridge_Bay","48/60/8":"America/Cambridge_Bay","49/60/8":"America/Cambridge_Bay","50/60/8":"America/Cambridge_Bay","51/60/8":"America/Cambridge_Bay","52/60/8":"America/Cambridge_Bay","53/60/8":"America/Cambridge_Bay","54/60/8":"America/Cambridge_Bay","55/60/8":"America/Cambridge_Bay","56/60/8":"America/Cambridge_Bay","57/60/8":"America/Cambridge_Bay","58/60/8":"America/Cambridge_Bay","59/60/8":"America/Cambridge_Bay","60/60/8":"America/Cambridge_Bay","61/60/8":"America/Cambridge_Bay","62/60/8":"America/Cambridge_Bay","63/60/8":"America/Cambridge_Bay","44/61/8":"America/Cambridge_Bay","45/61/8":"America/Cambridge_Bay","46/61/8":"America/Cambridge_Bay","47/61/8":"America/Cambridge_Bay","48/61/8":"America/Cambridge_Bay","49/61/8":"America/Cambridge_Bay","50/61/8":"America/Cambridge_Bay","51/61/8":"America/Cambridge_Bay","52/61/8":"America/Cambridge_Bay","53/61/8":"America/Cambridge_Bay","54/61/8":"America/Cambridge_Bay","55/61/8":"America/Cambridge_Bay","56/61/8":"America/Cambridge_Bay","57/61/8":"America/Cambridge_Bay","58/61/8":"America/Cambridge_Bay","59/61/8":"America/Cambridge_Bay","60/61/8":"America/Cambridge_Bay","61/61/8":"America/Cambridge_Bay","62/61/8":"America/Cambridge_Bay","63/61/8":"America/Cambridge_Bay","45/62/8":"America/Cambridge_Bay","46/62/8":"America/Cambridge_Bay","47/62/8":"America/Cambridge_Bay","48/62/8":"America/Cambridge_Bay","49/62/8":"America/Cambridge_Bay","50/62/8":"America/Cambridge_Bay","51/62/8":"America/Cambridge_Bay","52/62/8":"America/Cambridge_Bay","53/62/8":"America/Cambridge_Bay","54/62/8":"America/Cambridge_Bay","55/62/8":"America/Cambridge_Bay","56/62/8":"America/Cambridge_Bay","57/62/8":"America/Cambridge_Bay","58/62/8":"America/Cambridge_Bay","59/62/8":"America/Cambridge_Bay","60/62/8":"America/Cambridge_Bay","61/62/8":"America/Cambridge_Bay","62/62/8":"America/Cambridge_Bay","63/62/8":"America/Cambridge_Bay","46/63/8":"America/Cambridge_Bay","47/63/8":"America/Cambridge_Bay","48/63/8":"America/Cambridge_Bay","49/63/8":"America/Cambridge_Bay","50/63/8":"America/Cambridge_Bay","51/63/8":"America/Cambridge_Bay","52/63/8":"America/Cambridge_Bay","53/63/8":"America/Cambridge_Bay","54/63/8":"America/Cambridge_Bay","47/64/8":"America/Cambridge_Bay","48/64/8":"America/Cambridge_Bay","49/64/8":"America/Cambridge_Bay","50/64/8":"America/Cambridge_Bay","51/64/8":"America/Cambridge_Bay","52/64/8":"America/Cambridge_Bay","53/64/8":"America/Cambridge_Bay","54/64/8":"America/Cambridge_Bay","50/65/8":"America/Cambridge_Bay","51/65/8":"America/Cambridge_Bay","52/65/8":"America/Cambridge_Bay","53/65/8":"America/Cambridge_Bay","54/65/8":"America/Cambridge_Bay","51/66/8":"America/Cambridge_Bay","52/66/8":"America/Cambridge_Bay","53/66/8":"America/Cambridge_Bay","54/66/8":"America/Cambridge_Bay","54/28/8":"America/Cambridge_Bay","55/28/8":"America/Rankin_Inlet","53/29/8":"America/Cambridge_Bay","54/29/8":"America/Cambridge_Bay","55/29/8":"America/Rankin_Inlet","51/30/8":"America/Cambridge_Bay","52/30/8":"America/Cambridge_Bay","53/30/8":"America/Cambridge_Bay","55/30/8":"America/Rankin_Inlet","50/31/8":"America/Cambridge_Bay","51/31/8":"America/Cambridge_Bay","55/31/8":"America/Rankin_Inlet","49/32/8":"America/Yellowknife","50/32/8":"America/Cambridge_Bay","55/32/8":"America/Rankin_Inlet","49/33/8":"America/Yellowknife","55/33/8":"America/Rankin_Inlet","49/34/8":"America/Yellowknife","55/34/8":"America/Rankin_Inlet","49/35/8":"America/Yellowknife","55/35/8":"America/Rankin_Inlet","49/36/8":"America/Yellowknife","55/36/8":"America/Rankin_Inlet","49/37/8":"America/Yellowknife","55/37/8":"America/Rankin_Inlet","49/38/8":"America/Yellowknife","55/38/8":"America/Rankin_Inlet","49/39/8":"America/Yellowknife","55/39/8":"America/Rankin_Inlet","49/40/8":"America/Yellowknife","55/40/8":"America/Rankin_Inlet","49/41/8":"America/Yellowknife","55/41/8":"America/Rankin_Inlet","49/42/8":"America/Yellowknife","55/42/8":"America/Rankin_Inlet","49/43/8":"America/Yellowknife","55/43/8":"America/Rankin_Inlet","49/44/8":"America/Yellowknife","55/44/8":"America/Rankin_Inlet","49/45/8":"America/Yellowknife","55/45/8":"America/Rankin_Inlet","49/46/8":"America/Yellowknife","55/46/8":"America/Rankin_Inlet","49/47/8":"America/Yellowknife","55/47/8":"America/Rankin_Inlet","49/48/8":"America/Yellowknife","55/48/8":"America/Rankin_Inlet","49/49/8":"America/Yellowknife","55/49/8":"America/Cambridge_Bay","56/49/8":"America/Rankin_Inlet","49/50/8":"America/Yellowknife","56/50/8":"America/Cambridge_Bay","57/50/8":"America/Rankin_Inlet","58/50/8":"America/Rankin_Inlet","49/51/8":"America/Yellowknife","58/51/8":"America/Cambridge_Bay","59/51/8":"America/Rankin_Inlet","60/51/8":"America/Rankin_Inlet","49/52/8":"America/Yellowknife","60/52/8":"America/Cambridge_Bay","61/52/8":"America/Rankin_Inlet","62/52/8":"America/Rankin_Inlet","49/53/8":"America/Yellowknife","62/53/8":"America/Cambridge_Bay","49/54/8":"America/Yellowknife","62/54/8":"America/Cambridge_Bay","63/54/8":"America/Rankin_Inlet","49/55/8":"America/Yellowknife","63/55/8":"America/Rankin_Inlet","49/56/8":"America/Yellowknife","63/56/8":"America/Cambridge_Bay","64/56/8":"America/Rankin_Inlet","44/57/8":"America/Yellowknife","45/57/8":"America/Cambridge_Bay","46/57/8":"America/Cambridge_Bay","47/57/8":"America/Cambridge_Bay","48/57/8":"America/Cambridge_Bay","49/57/8":"America/Cambridge_Bay","64/57/8":"America/Rankin_Inlet","42/58/8":"America/Cambridge_Bay","43/58/8":"America/Cambridge_Bay","44/58/8":"America/Cambridge_Bay","45/58/8":"America/Cambridge_Bay","64/58/8":"America/Cambridge_Bay","42/59/8":"America/Cambridge_Bay","64/59/8":"America/Cambridge_Bay","42/60/8":"America/Cambridge_Bay","64/60/8":"America/Cambridge_Bay","42/61/8":"America/Yellowknife","43/61/8":"America/Cambridge_Bay","64/61/8":"America/Cambridge_Bay","43/62/8":"America/Yellowknife","44/62/8":"America/Cambridge_Bay","64/62/8":"America/Cambridge_Bay","44/63/8":"America/Yellowknife","45/63/8":"America/Cambridge_Bay","55/63/8":"America/Cambridge_Bay","56/63/8":"America/Rankin_Inlet","57/63/8":"America/Rankin_Inlet","58/63/8":"America/Rankin_Inlet","59/63/8":"America/Rankin_Inlet","60/63/8":"America/Rankin_Inlet","61/63/8":"America/Rankin_Inlet","62/63/8":"America/Rankin_Inlet","63/63/8":"America/Rankin_Inlet","64/63/8":"America/Rankin_Inlet","45/64/8":"America/Yellowknife","46/64/8":"America/Cambridge_Bay","55/64/8":"America/Rankin_Inlet","46/65/8":"America/Yellowknife","47/65/8":"America/Yellowknife","48/65/8":"America/Cambridge_Bay","49/65/8":"America/Cambridge_Bay","55/65/8":"America/Rankin_Inlet","49/66/8":"America/Yellowknife","50/66/8":"America/Cambridge_Bay","55/66/8":"America/Rankin_Inlet","50/67/8":"America/Yellowknife","51/67/8":"America/Yellowknife","52/67/8":"America/Yellowknife","53/67/8":"America/Cambridge_Bay","54/67/8":"America/Cambridge_Bay","55/67/8":"America/Rankin_Inlet","88/141/8":"America/Campo_Grande","87/142/8":"America/Campo_Grande","88/142/8":"America/Campo_Grande","89/142/8":"America/Campo_Grande","90/142/8":"America/Campo_Grande","87/143/8":"America/Campo_Grande","88/143/8":"America/Campo_Grande","89/143/8":"America/Campo_Grande","86/140/8":"America/La_Paz","87/140/8":"America/Cuiaba","88/140/8":"America/Cuiaba","89/140/8":"America/Cuiaba","87/141/8":"America/Campo_Grande","89/141/8":"America/Campo_Grande","90/141/8":"America/Campo_Grande","91/141/8":"America/Sao_Paulo","91/142/8":"America/Campo_Grande","90/143/8":"America/Campo_Grande","91/143/8":"America/Sao_Paulo","89/144/8":"America/Campo_Grande","90/144/8":"America/Sao_Paulo","65/112/8":"America/Merida","66/112/8":"America/Cancun","64/113/8":"America/Merida","65/113/8":"America/Cancun","66/113/8":"America/Cancun","66/114/8":"America/Cancun","77/120/8":"America/Caracas","78/120/8":"America/Caracas","79/120/8":"America/Caracas","80/120/8":"America/Caracas","81/120/8":"America/Caracas","82/120/8":"America/Caracas","77/121/8":"America/Caracas","78/121/8":"America/Caracas","79/121/8":"America/Caracas","80/121/8":"America/Caracas","81/121/8":"America/Caracas","82/121/8":"America/Caracas","83/121/8":"America/Caracas","78/122/8":"America/Caracas","79/122/8":"America/Caracas","80/122/8":"America/Caracas","81/122/8":"America/Caracas","82/122/8":"America/Caracas","83/122/8":"America/Caracas","81/123/8":"America/Caracas","82/123/8":"America/Caracas","83/123/8":"America/Caracas","80/124/8":"America/Caracas","83/124/8":"America/Caracas","81/126/8":"America/Caracas","82/116/8":"America/Caracas","79/119/8":"America/Caracas","80/119/8":"America/Caracas","81/119/8":"America/Caracas","82/119/8":"America/Caracas","83/119/8":"America/Caracas","83/120/8":"America/Caracas","84/120/8":"America/Port_of_Spain","84/121/8":"America/Caracas","85/121/8":"America/Caracas","84/122/8":"America/Caracas","85/122/8":"America/Guyana","84/123/8":"America/Caracas","85/123/8":"America/Guyana","81/127/8":"America/Manaus","82/127/8":"America/Manaus","89/123/8":"America/Paramaribo","90/123/8":"America/Cayenne","89/124/8":"America/Cayenne","90/124/8":"America/Cayenne","89/125/8":"America/Cayenne","69/113/8":"America/Cayman","70/113/8":"America/Cayman","71/113/8":"America/Cayman","69/114/8":"America/Cayman","70/114/8":"America/Cayman","55/88/8":"America/Chicago","56/88/8":"America/Chicago","57/88/8":"America/Chicago","58/88/8":"America/Chicago","59/88/8":"America/Chicago","57/89/8":"America/Chicago","58/89/8":"America/Chicago","59/89/8":"America/Chicago","60/89/8":"America/Chicago","61/89/8":"America/Chicago","62/89/8":"America/Chicago","57/90/8":"America/Chicago","58/90/8":"America/Chicago","59/90/8":"America/Chicago","60/90/8":"America/Chicago","61/90/8":"America/Chicago","62/90/8":"America/Chicago","57/91/8":"America/Chicago","58/91/8":"America/Chicago","59/91/8":"America/Chicago","60/91/8":"America/Chicago","61/91/8":"America/Chicago","62/91/8":"America/Chicago","63/91/8":"America/Chicago","57/92/8":"America/Chicago","58/92/8":"America/Chicago","59/92/8":"America/Chicago","60/92/8":"America/Chicago","61/92/8":"America/Chicago","62/92/8":"America/Chicago","63/92/8":"America/Chicago","64/92/8":"America/Chicago","57/93/8":"America/Chicago","58/93/8":"America/Chicago","59/93/8":"America/Chicago","60/93/8":"America/Chicago","61/93/8":"America/Chicago","62/93/8":"America/Chicago","63/93/8":"America/Chicago","64/93/8":"America/Chicago","65/93/8":"America/Chicago","57/94/8":"America/Chicago","58/94/8":"America/Chicago","59/94/8":"America/Chicago","60/94/8":"America/Chicago","61/94/8":"America/Chicago","62/94/8":"America/Chicago","63/94/8":"America/Chicago","64/94/8":"America/Chicago","65/94/8":"America/Chicago","57/95/8":"America/Chicago","58/95/8":"America/Chicago","59/95/8":"America/Chicago","60/95/8":"America/Chicago","61/95/8":"America/Chicago","62/95/8":"America/Chicago","63/95/8":"America/Chicago","64/95/8":"America/Chicago","57/96/8":"America/Chicago","58/96/8":"America/Chicago","59/96/8":"America/Chicago","60/96/8":"America/Chicago","61/96/8":"America/Chicago","62/96/8":"America/Chicago","63/96/8":"America/Chicago","64/96/8":"America/Chicago","56/97/8":"America/Chicago","57/97/8":"America/Chicago","58/97/8":"America/Chicago","59/97/8":"America/Chicago","60/97/8":"America/Chicago","61/97/8":"America/Chicago","62/97/8":"America/Chicago","63/97/8":"America/Chicago","64/97/8":"America/Chicago","56/98/8":"America/Chicago","57/98/8":"America/Chicago","58/98/8":"America/Chicago","59/98/8":"America/Chicago","60/98/8":"America/Chicago","61/98/8":"America/Chicago","62/98/8":"America/Chicago","63/98/8":"America/Chicago","64/98/8":"America/Chicago","56/99/8":"America/Chicago","57/99/8":"America/Chicago","58/99/8":"America/Chicago","59/99/8":"America/Chicago","60/99/8":"America/Chicago","61/99/8":"America/Chicago","62/99/8":"America/Chicago","63/99/8":"America/Chicago","64/99/8":"America/Chicago","65/99/8":"America/Chicago","55/100/8":"America/Chicago","56/100/8":"America/Chicago","57/100/8":"America/Chicago","58/100/8":"America/Chicago","59/100/8":"America/Chicago","60/100/8":"America/Chicago","61/100/8":"America/Chicago","62/100/8":"America/Chicago","63/100/8":"America/Chicago","64/100/8":"America/Chicago","65/100/8":"America/Chicago","66/100/8":"America/Chicago","55/101/8":"America/Chicago","56/101/8":"America/Chicago","57/101/8":"America/Chicago","58/101/8":"America/Chicago","59/101/8":"America/Chicago","60/101/8":"America/Chicago","61/101/8":"America/Chicago","62/101/8":"America/Chicago","63/101/8":"America/Chicago","64/101/8":"America/Chicago","65/101/8":"America/Chicago","66/101/8":"America/Chicago","55/102/8":"America/Chicago","56/102/8":"America/Chicago","57/102/8":"America/Chicago","58/102/8":"America/Chicago","59/102/8":"America/Chicago","60/102/8":"America/Chicago","61/102/8":"America/Chicago","62/102/8":"America/Chicago","63/102/8":"America/Chicago","64/102/8":"America/Chicago","65/102/8":"America/Chicago","66/102/8":"America/Chicago","55/103/8":"America/Chicago","56/103/8":"America/Chicago","57/103/8":"America/Chicago","58/103/8":"America/Chicago","59/103/8":"America/Chicago","60/103/8":"America/Chicago","61/103/8":"America/Chicago","62/103/8":"America/Chicago","63/103/8":"America/Chicago","64/103/8":"America/Chicago","65/103/8":"America/Chicago","66/103/8":"America/Chicago","54/104/8":"America/Chicago","55/104/8":"America/Chicago","56/104/8":"America/Chicago","57/104/8":"America/Chicago","58/104/8":"America/Chicago","59/104/8":"America/Chicago","60/104/8":"America/Chicago","61/104/8":"America/Chicago","62/104/8":"America/Chicago","63/104/8":"America/Chicago","64/104/8":"America/Chicago","65/104/8":"America/Chicago","66/104/8":"America/Chicago","57/105/8":"America/Chicago","58/105/8":"America/Chicago","59/105/8":"America/Chicago","60/105/8":"America/Chicago","62/105/8":"America/Chicago","63/105/8":"America/Chicago","57/106/8":"America/Chicago","58/106/8":"America/Chicago","54/87/8":"America/Regina","55/87/8":"America/Regina","56/87/8":"America/Winnipeg","57/87/8":"America/Winnipeg","58/87/8":"America/Winnipeg","59/87/8":"America/Winnipeg","60/87/8":"America/Winnipeg","54/88/8":"America/Chicago","60/88/8":"America/Chicago","61/88/8":"America/Chicago","54/89/8":"America/Denver","55/89/8":"America/Chicago","56/89/8":"America/Chicago","63/89/8":"America/Chicago","64/89/8":"America/Detroit","55/90/8":"America/Denver","56/90/8":"America/Chicago","63/90/8":"America/Chicago","64/90/8":"America/Detroit","55/91/8":"America/Denver","56/91/8":"America/Denver","64/91/8":"America/Chicago","65/91/8":"America/Chicago","66/91/8":"America/Detroit","56/92/8":"America/Chicago","65/92/8":"America/Chicago","66/92/8":"America/Detroit","56/93/8":"America/Chicago","66/93/8":"America/Detroit","56/94/8":"America/Chicago","66/94/8":"America/Detroit","55/95/8":"America/Denver","56/95/8":"America/Chicago","65/95/8":"America/Chicago","66/95/8":"America/Indiana/Indianapolis","55/96/8":"America/Denver","56/96/8":"America/Chicago","65/96/8":"America/Chicago","66/96/8":"America/Indiana/Indianapolis","55/97/8":"America/Denver","65/97/8":"America/Chicago","55/98/8":"America/Denver","65/98/8":"America/Chicago","66/98/8":"America/Indiana/Indianapolis","54/99/8":"America/Denver","55/99/8":"America/Chicago","66/99/8":"America/Chicago","67/99/8":"America/New_York","54/100/8":"America/Denver","67/100/8":"America/Chicago","54/101/8":"America/Denver","67/101/8":"America/New_York","54/102/8":"America/Denver","67/102/8":"America/New_York","53/103/8":"America/Denver","54/103/8":"America/Denver","67/103/8":"America/New_York","67/104/8":"America/Chicago","53/105/8":"America/Ojinaga","54/105/8":"America/Chicago","55/105/8":"America/Chicago","56/105/8":"America/Chicago","61/105/8":"America/Chicago","64/105/8":"America/Chicago","65/105/8":"America/Chicago","66/105/8":"America/Chicago","67/105/8":"America/New_York","53/106/8":"America/Chihuahua","54/106/8":"America/Matamoros","55/106/8":"America/Matamoros","56/106/8":"America/Chicago","59/106/8":"America/Chicago","60/106/8":"America/Chicago","61/106/8":"America/Chicago","62/106/8":"America/Chicago","63/106/8":"America/Chicago","64/106/8":"America/Chicago","56/107/8":"America/Monterrey","57/107/8":"America/Chicago","58/107/8":"America/Chicago","59/107/8":"America/Chicago","57/108/8":"America/Monterrey","58/108/8":"America/Chicago","59/108/8":"America/Chicago","51/106/8":"America/Chihuahua","51/107/8":"America/Chihuahua","52/107/8":"America/Chihuahua","53/107/8":"America/Chihuahua","51/104/8":"America/Ojinaga","52/104/8":"America/Ojinaga","50/105/8":"America/Hermosillo","51/105/8":"America/Chihuahua","52/105/8":"America/Chihuahua","50/106/8":"America/Hermosillo","52/106/8":"America/Chihuahua","50/107/8":"America/Hermosillo","54/107/8":"America/Matamoros","50/108/8":"America/Mazatlan","51/108/8":"America/Chihuahua","52/108/8":"America/Chihuahua","53/108/8":"America/Monterrey","54/108/8":"America/Monterrey","51/109/8":"America/Mazatlan","52/109/8":"America/Monterrey","67/67/8":"America/Coral_Harbour","67/64/8":"America/Rankin_Inlet","66/65/8":"America/Rankin_Inlet","67/65/8":"America/Coral_Harbour","68/65/8":"America/Iqaluit","66/66/8":"America/Rankin_Inlet","67/66/8":"America/Coral_Harbour","68/66/8":"America/Coral_Harbour","69/66/8":"America/Iqaluit","66/67/8":"America/Rankin_Inlet","68/67/8":"America/Coral_Harbour","69/67/8":"America/Coral_Harbour","65/68/8":"America/Rankin_Inlet","66/68/8":"America/Coral_Harbour","67/68/8":"America/Coral_Harbour","68/68/8":"America/Iqaluit","69/68/8":"America/Coral_Harbour","70/68/8":"America/Coral_Harbour","71/68/8":"America/Iqaluit","66/69/8":"America/Rankin_Inlet","67/69/8":"America/Coral_Harbour","70/69/8":"America/Iqaluit","67/119/8":"America/Managua","66/120/8":"America/Costa_Rica","67/120/8":"America/Costa_Rica","68/120/8":"America/Costa_Rica","69/120/8":"America/Costa_Rica","67/121/8":"America/Costa_Rica","68/121/8":"America/Costa_Rica","69/121/8":"America/Panama","68/122/8":"America/Costa_Rica","69/122/8":"America/Panama","65/123/8":"America/Costa_Rica","66/123/8":"America/Costa_Rica","65/124/8":"America/Costa_Rica","66/124/8":"America/Costa_Rica","44/87/8":"America/Vancouver","45/87/8":"America/Edmonton","86/135/8":"America/Cuiaba","87/135/8":"America/Cuiaba","88/135/8":"America/Cuiaba","89/135/8":"America/Cuiaba","90/135/8":"America/Cuiaba","86/136/8":"America/Cuiaba","87/136/8":"America/Cuiaba","88/136/8":"America/Cuiaba","89/136/8":"America/Cuiaba","90/136/8":"America/Cuiaba","86/137/8":"America/Cuiaba","87/137/8":"America/Cuiaba","88/137/8":"America/Cuiaba","89/137/8":"America/Cuiaba","90/137/8":"America/Cuiaba","86/138/8":"America/Cuiaba","87/138/8":"America/Cuiaba","88/138/8":"America/Cuiaba","89/138/8":"America/Cuiaba","90/138/8":"America/Cuiaba","87/139/8":"America/Cuiaba","88/139/8":"America/Cuiaba","89/139/8":"America/Cuiaba","86/133/8":"America/Manaus","87/133/8":"America/Santarem","84/134/8":"America/Cuiaba","85/134/8":"America/Cuiaba","86/134/8":"America/Cuiaba","87/134/8":"America/Santarem","88/134/8":"America/Santarem","89/134/8":"America/Santarem","84/135/8":"America/Cuiaba","85/135/8":"America/Cuiaba","85/136/8":"America/Cuiaba","84/137/8":"America/Porto_Velho","85/137/8":"America/Cuiaba","84/138/8":"America/La_Paz","85/138/8":"America/Cuiaba","91/138/8":"America/Cuiaba","85/139/8":"America/Cuiaba","86/139/8":"America/Cuiaba","90/139/8":"America/Cuiaba","91/139/8":"America/Sao_Paulo","90/140/8":"America/Sao_Paulo","111/53/8":"America/Danmarkshavn","111/54/8":"America/Danmarkshavn","112/54/8":"America/Danmarkshavn","111/55/8":"America/Danmarkshavn","112/55/8":"America/Danmarkshavn","110/51/8":"America/Godthab","110/52/8":"America/Godthab","111/52/8":"America/Godthab","112/52/8":"America/Godthab","110/53/8":"America/Godthab","112/53/8":"America/Danmarkshavn","113/53/8":"America/Danmarkshavn","110/54/8":"America/Godthab","113/54/8":"America/Danmarkshavn","110/55/8":"America/Danmarkshavn","113/55/8":"America/Danmarkshavn","110/56/8":"America/Godthab","111/56/8":"America/Danmarkshavn","112/56/8":"America/Danmarkshavn","113/56/8":"America/Danmarkshavn","28/68/8":"America/Whitehorse","41/78/8":"America/Dawson_Creek","41/79/8":"America/Dawson_Creek","39/77/8":"America/Dawson_Creek","40/77/8":"America/Dawson_Creek","41/77/8":"America/Dawson_Creek","42/77/8":"America/Dawson_Creek","39/78/8":"America/Vancouver","40/78/8":"America/Dawson_Creek","42/78/8":"America/Dawson_Creek","40/79/8":"America/Dawson_Creek","42/79/8":"America/Dawson_Creek","40/80/8":"America/Vancouver","41/80/8":"America/Dawson_Creek","42/80/8":"America/Dawson_Creek","41/81/8":"America/Vancouver","42/81/8":"America/Dawson_Creek","42/82/8":"America/Vancouver","46/88/8":"America/Denver","47/88/8":"America/Denver","48/88/8":"America/Denver","49/88/8":"America/Denver","50/88/8":"America/Denver","51/88/8":"America/Denver","52/88/8":"America/Denver","53/88/8":"America/Denver","47/89/8":"America/Denver","48/89/8":"America/Denver","49/89/8":"America/Denver","50/89/8":"America/Denver","51/89/8":"America/Denver","52/89/8":"America/Denver","53/89/8":"America/Denver","47/90/8":"America/Denver","48/90/8":"America/Denver","49/90/8":"America/Denver","50/90/8":"America/Denver","51/90/8":"America/Denver","52/90/8":"America/Denver","53/90/8":"America/Denver","54/90/8":"America/Denver","48/91/8":"America/Denver","49/91/8":"America/Denver","50/91/8":"America/Denver","51/91/8":"America/Denver","52/91/8":"America/Denver","53/91/8":"America/Denver","54/91/8":"America/Denver","50/92/8":"America/Denver","51/92/8":"America/Denver","52/92/8":"America/Denver","53/92/8":"America/Denver","54/92/8":"America/Denver","55/92/8":"America/Denver","50/93/8":"America/Denver","51/93/8":"America/Denver","52/93/8":"America/Denver","53/93/8":"America/Denver","54/93/8":"America/Denver","55/93/8":"America/Denver","50/94/8":"America/Denver","51/94/8":"America/Denver","52/94/8":"America/Denver","53/94/8":"America/Denver","54/94/8":"America/Denver","55/94/8":"America/Denver","50/95/8":"America/Denver","51/95/8":"America/Denver","52/95/8":"America/Denver","53/95/8":"America/Denver","54/95/8":"America/Denver","47/96/8":"America/Denver","48/96/8":"America/Denver","49/96/8":"America/Denver","50/96/8":"America/Denver","51/96/8":"America/Denver","52/96/8":"America/Denver","53/96/8":"America/Denver","54/96/8":"America/Denver","47/97/8":"America/Denver","48/97/8":"America/Denver","49/97/8":"America/Denver","50/97/8":"America/Denver","51/97/8":"America/Denver","52/97/8":"America/Denver","53/97/8":"America/Denver","54/97/8":"America/Denver","47/98/8":"America/Denver","48/98/8":"America/Denver","49/98/8":"America/Denver","50/98/8":"America/Denver","51/98/8":"America/Denver","52/98/8":"America/Denver","53/98/8":"America/Denver","54/98/8":"America/Denver","49/99/8":"America/Denver","50/99/8":"America/Denver","51/99/8":"America/Denver","52/99/8":"America/Denver","53/99/8":"America/Denver","50/100/8":"America/Denver","51/100/8":"America/Denver","52/100/8":"America/Denver","53/100/8":"America/Denver","51/101/8":"America/Denver","52/101/8":"America/Denver","53/101/8":"America/Denver","51/102/8":"America/Denver","52/102/8":"America/Denver","53/102/8":"America/Denver","51/103/8":"America/Denver","52/103/8":"America/Denver","46/87/8":"America/Edmonton","47/87/8":"America/Edmonton","48/87/8":"America/Edmonton","49/87/8":"America/Edmonton","50/87/8":"America/Regina","51/87/8":"America/Regina","52/87/8":"America/Regina","53/87/8":"America/Regina","45/88/8":"America/Denver","45/89/8":"America/Los_Angeles","46/89/8":"America/Denver","46/90/8":"America/Los_Angeles","46/96/8":"America/Los_Angeles","46/97/8":"America/Los_Angeles","46/98/8":"America/Los_Angeles","46/99/8":"America/Los_Angeles","47/99/8":"America/Denver","48/99/8":"America/Denver","48/100/8":"America/Phoenix","49/100/8":"America/Denver","48/101/8":"America/Phoenix","49/101/8":"America/Phoenix","50/101/8":"America/Denver","50/102/8":"America/Denver","50/103/8":"America/Denver","50/104/8":"America/Hermosillo","53/104/8":"America/Denver","66/90/8":"America/Detroit","67/91/8":"America/Detroit","67/92/8":"America/Detroit","68/92/8":"America/Detroit","67/93/8":"America/Detroit","68/93/8":"America/Detroit","67/94/8":"America/Detroit","65/88/8":"America/Toronto","65/89/8":"America/Detroit","66/89/8":"America/Detroit","67/89/8":"America/Toronto","65/90/8":"America/Detroit","67/90/8":"America/Detroit","68/90/8":"America/Toronto","68/91/8":"America/Detroit","69/91/8":"America/Toronto","69/92/8":"America/Toronto","69/93/8":"America/Detroit","68/94/8":"America/Detroit","69/94/8":"America/Toronto","67/95/8":"America/Indiana/Indianapolis","68/95/8":"America/New_York","84/116/8":"America/Guadeloupe","84/117/8":"America/Martinique","43/75/8":"America/Edmonton","44/75/8":"America/Edmonton","45/75/8":"America/Edmonton","46/75/8":"America/Edmonton","47/75/8":"America/Edmonton","48/75/8":"America/Edmonton","43/76/8":"America/Edmonton","44/76/8":"America/Edmonton","45/76/8":"America/Edmonton","46/76/8":"America/Edmonton","47/76/8":"America/Edmonton","48/76/8":"America/Edmonton","43/77/8":"America/Edmonton","44/77/8":"America/Edmonton","45/77/8":"America/Edmonton","46/77/8":"America/Edmonton","47/77/8":"America/Edmonton","48/77/8":"America/Edmonton","43/78/8":"America/Edmonton","44/78/8":"America/Edmonton","45/78/8":"America/Edmonton","46/78/8":"America/Edmonton","47/78/8":"America/Edmonton","48/78/8":"America/Edmonton","43/79/8":"America/Edmonton","44/79/8":"America/Edmonton","45/79/8":"America/Edmonton","46/79/8":"America/Edmonton","47/79/8":"America/Edmonton","48/79/8":"America/Edmonton","43/80/8":"America/Edmonton","44/80/8":"America/Edmonton","45/80/8":"America/Edmonton","46/80/8":"America/Edmonton","47/80/8":"America/Edmonton","48/80/8":"America/Edmonton","43/81/8":"America/Edmonton","44/81/8":"America/Edmonton","45/81/8":"America/Edmonton","46/81/8":"America/Edmonton","47/81/8":"America/Edmonton","48/81/8":"America/Edmonton","44/82/8":"America/Edmonton","45/82/8":"America/Edmonton","46/82/8":"America/Edmonton","47/82/8":"America/Edmonton","48/82/8":"America/Edmonton","44/83/8":"America/Edmonton","45/83/8":"America/Edmonton","46/83/8":"America/Edmonton","47/83/8":"America/Edmonton","48/83/8":"America/Edmonton","45/84/8":"America/Edmonton","46/84/8":"America/Edmonton","47/84/8":"America/Edmonton","48/84/8":"America/Edmonton","45/85/8":"America/Edmonton","46/85/8":"America/Edmonton","47/85/8":"America/Edmonton","48/85/8":"America/Edmonton","46/86/8":"America/Edmonton","47/86/8":"America/Edmonton","48/86/8":"America/Edmonton","42/74/8":"America/Fort_Nelson","43/74/8":"America/Edmonton","44/74/8":"America/Edmonton","45/74/8":"America/Edmonton","46/74/8":"America/Edmonton","47/74/8":"America/Edmonton","48/74/8":"America/Edmonton","49/74/8":"America/Edmonton","42/75/8":"America/Fort_Nelson","49/75/8":"America/Edmonton","42/76/8":"America/Fort_Nelson","49/76/8":"America/Edmonton","49/77/8":"America/Edmonton","49/78/8":"America/Edmonton","49/79/8":"America/Edmonton","49/80/8":"America/Edmonton","49/81/8":"America/Edmonton","43/82/8":"America/Edmonton","49/82/8":"America/Edmonton","50/82/8":"America/Regina","43/83/8":"America/Vancouver","49/83/8":"America/Edmonton","50/83/8":"America/Regina","43/84/8":"America/Vancouver","44/84/8":"America/Edmonton","49/84/8":"America/Edmonton","44/85/8":"America/Vancouver","49/85/8":"America/Edmonton","44/86/8":"America/Vancouver","45/86/8":"America/Edmonton","49/86/8":"America/Edmonton","77/132/8":"America/Eirunepe","76/131/8":"America/Lima","77/131/8":"America/Eirunepe","75/132/8":"America/Lima","76/132/8":"America/Eirunepe","78/132/8":"America/Eirunepe","79/132/8":"America/Manaus","75/133/8":"America/Lima","76/133/8":"America/Rio_Branco","77/133/8":"America/Eirunepe","78/133/8":"America/Eirunepe","79/133/8":"America/Manaus","78/134/8":"America/Rio_Branco","79/134/8":"America/Eirunepe","63/117/8":"America/Guatemala","64/117/8":"America/Guatemala","65/117/8":"America/Tegucigalpa","63/118/8":"America/Guatemala","64/118/8":"America/El_Salvador","65/118/8":"America/El_Salvador","38/75/8":"America/Fort_Nelson","39/75/8":"America/Fort_Nelson","40/75/8":"America/Fort_Nelson","41/75/8":"America/Fort_Nelson","40/76/8":"America/Fort_Nelson","41/76/8":"America/Fort_Nelson","37/74/8":"America/Fort_Nelson","38/74/8":"America/Fort_Nelson","39/74/8":"America/Fort_Nelson","40/74/8":"America/Fort_Nelson","41/74/8":"America/Fort_Nelson","37/75/8":"America/Vancouver","37/76/8":"America/Vancouver","38/76/8":"America/Fort_Nelson","39/76/8":"America/Fort_Nelson","95/130/8":"America/Fortaleza","96/130/8":"America/Fortaleza","97/130/8":"America/Fortaleza","98/130/8":"America/Fortaleza","95/131/8":"America/Fortaleza","96/131/8":"America/Fortaleza","97/131/8":"America/Fortaleza","98/131/8":"America/Fortaleza","99/131/8":"America/Fortaleza","100/131/8":"America/Fortaleza","95/132/8":"America/Fortaleza","96/132/8":"America/Fortaleza","97/132/8":"America/Fortaleza","98/132/8":"America/Fortaleza","99/132/8":"America/Fortaleza","100/132/8":"America/Fortaleza","101/132/8":"America/Fortaleza","102/132/8":"America/Fortaleza","95/133/8":"America/Fortaleza","96/133/8":"America/Fortaleza","97/133/8":"America/Fortaleza","95/134/8":"America/Fortaleza","96/128/8":"America/Fortaleza","96/129/8":"America/Fortaleza","97/129/8":"America/Fortaleza","98/129/8":"America/Fortaleza","99/129/8":"America/Fortaleza","99/130/8":"America/Fortaleza","100/130/8":"America/Fortaleza","101/130/8":"America/Fortaleza","101/131/8":"America/Fortaleza","102/131/8":"America/Fortaleza","103/131/8":"America/Fortaleza","103/132/8":"America/Fortaleza","98/133/8":"America/Fortaleza","99/133/8":"America/Recife","100/133/8":"America/Fortaleza","101/133/8":"America/Fortaleza","102/133/8":"America/Recife","103/133/8":"America/Recife","84/90/8":"America/Halifax","85/90/8":"America/Glace_Bay","84/91/8":"America/Halifax","85/91/8":"America/Glace_Bay","103/9/8":"America/Godthab","104/9/8":"America/Godthab","105/9/8":"America/Godthab","106/9/8":"America/Godthab","100/10/8":"America/Godthab","101/10/8":"America/Godthab","102/10/8":"America/Godthab","103/10/8":"America/Godthab","104/10/8":"America/Godthab","105/10/8":"America/Godthab","106/10/8":"America/Godthab","107/10/8":"America/Godthab","108/10/8":"America/Godthab","98/11/8":"America/Godthab","99/11/8":"America/Godthab","100/11/8":"America/Godthab","101/11/8":"America/Godthab","102/11/8":"America/Godthab","103/11/8":"America/Godthab","104/11/8":"America/Godthab","105/11/8":"America/Godthab","106/11/8":"America/Godthab","107/11/8":"America/Godthab","108/11/8":"America/Godthab","109/11/8":"America/Godthab","96/12/8":"America/Godthab","97/12/8":"America/Godthab","98/12/8":"America/Godthab","99/12/8":"America/Godthab","100/12/8":"America/Godthab","101/12/8":"America/Godthab","102/12/8":"America/Godthab","103/12/8":"America/Godthab","104/12/8":"America/Godthab","105/12/8":"America/Godthab","106/12/8":"America/Godthab","107/12/8":"America/Godthab","108/12/8":"America/Godthab","109/12/8":"America/Godthab","110/12/8":"America/Godthab","94/13/8":"America/Godthab","95/13/8":"America/Godthab","96/13/8":"America/Godthab","97/13/8":"America/Godthab","98/13/8":"America/Godthab","99/13/8":"America/Godthab","100/13/8":"America/Godthab","101/13/8":"America/Godthab","102/13/8":"America/Godthab","103/13/8":"America/Godthab","104/13/8":"America/Godthab","105/13/8":"America/Godthab","106/13/8":"America/Godthab","107/13/8":"America/Godthab","108/13/8":"America/Godthab","109/13/8":"America/Godthab","110/13/8":"America/Godthab","111/13/8":"America/Godthab","93/14/8":"America/Godthab","94/14/8":"America/Godthab","95/14/8":"America/Godthab","96/14/8":"America/Godthab","97/14/8":"America/Godthab","98/14/8":"America/Godthab","99/14/8":"America/Godthab","100/14/8":"America/Godthab","101/14/8":"America/Godthab","102/14/8":"America/Godthab","103/14/8":"America/Godthab","104/14/8":"America/Godthab","105/14/8":"America/Godthab","106/14/8":"America/Godthab","107/14/8":"America/Godthab","108/14/8":"America/Godthab","109/14/8":"America/Godthab","110/14/8":"America/Godthab","111/14/8":"America/Godthab","112/14/8":"America/Godthab","91/15/8":"America/Godthab","92/15/8":"America/Godthab","93/15/8":"America/Godthab","94/15/8":"America/Godthab","95/15/8":"America/Godthab","96/15/8":"America/Godthab","97/15/8":"America/Godthab","98/15/8":"America/Godthab","99/15/8":"America/Godthab","100/15/8":"America/Godthab","101/15/8":"America/Godthab","102/15/8":"America/Godthab","103/15/8":"America/Godthab","104/15/8":"America/Godthab","105/15/8":"America/Godthab","106/15/8":"America/Godthab","107/15/8":"America/Godthab","108/15/8":"America/Godthab","109/15/8":"America/Godthab","110/15/8":"America/Godthab","111/15/8":"America/Godthab","112/15/8":"America/Godthab","113/15/8":"America/Godthab","90/16/8":"America/Godthab","91/16/8":"America/Godthab","92/16/8":"America/Godthab","93/16/8":"America/Godthab","94/16/8":"America/Godthab","95/16/8":"America/Godthab","96/16/8":"America/Godthab","97/16/8":"America/Godthab","98/16/8":"America/Godthab","99/16/8":"America/Godthab","100/16/8":"America/Godthab","101/16/8":"America/Godthab","102/16/8":"America/Godthab","103/16/8":"America/Godthab","104/16/8":"America/Godthab","105/16/8":"America/Godthab","106/16/8":"America/Godthab","107/16/8":"America/Godthab","108/16/8":"America/Godthab","109/16/8":"America/Godthab","110/16/8":"America/Godthab","111/16/8":"America/Godthab","112/16/8":"America/Godthab","113/16/8":"America/Godthab","88/17/8":"America/Godthab","89/17/8":"America/Godthab","90/17/8":"America/Godthab","91/17/8":"America/Godthab","92/17/8":"America/Godthab","93/17/8":"America/Godthab","94/17/8":"America/Godthab","95/17/8":"America/Godthab","96/17/8":"America/Godthab","97/17/8":"America/Godthab","98/17/8":"America/Godthab","99/17/8":"America/Godthab","100/17/8":"America/Godthab","101/17/8":"America/Godthab","102/17/8":"America/Godthab","103/17/8":"America/Godthab","104/17/8":"America/Godthab","105/17/8":"America/Godthab","106/17/8":"America/Godthab","107/17/8":"America/Godthab","108/17/8":"America/Godthab","109/17/8":"America/Godthab","110/17/8":"America/Godthab","111/17/8":"America/Godthab","112/17/8":"America/Godthab","113/17/8":"America/Godthab","114/17/8":"America/Godthab","86/18/8":"America/Godthab","87/18/8":"America/Godthab","88/18/8":"America/Godthab","89/18/8":"America/Godthab","90/18/8":"America/Godthab","91/18/8":"America/Godthab","92/18/8":"America/Godthab","93/18/8":"America/Godthab","94/18/8":"America/Godthab","95/18/8":"America/Godthab","96/18/8":"America/Godthab","97/18/8":"America/Godthab","98/18/8":"America/Godthab","99/18/8":"America/Godthab","100/18/8":"America/Godthab","101/18/8":"America/Godthab","102/18/8":"America/Godthab","103/18/8":"America/Godthab","104/18/8":"America/Godthab","105/18/8":"America/Godthab","106/18/8":"America/Godthab","107/18/8":"America/Godthab","108/18/8":"America/Godthab","109/18/8":"America/Godthab","110/18/8":"America/Godthab","111/18/8":"America/Godthab","112/18/8":"America/Godthab","113/18/8":"America/Godthab","114/18/8":"America/Godthab","85/19/8":"America/Godthab","86/19/8":"America/Godthab","87/19/8":"America/Godthab","88/19/8":"America/Godthab","89/19/8":"America/Godthab","90/19/8":"America/Godthab","91/19/8":"America/Godthab","92/19/8":"America/Godthab","93/19/8":"America/Godthab","94/19/8":"America/Godthab","95/19/8":"America/Godthab","96/19/8":"America/Godthab","97/19/8":"America/Godthab","98/19/8":"America/Godthab","99/19/8":"America/Godthab","100/19/8":"America/Godthab","101/19/8":"America/Godthab","102/19/8":"America/Godthab","103/19/8":"America/Godthab","104/19/8":"America/Godthab","105/19/8":"America/Godthab","106/19/8":"America/Godthab","107/19/8":"America/Godthab","108/19/8":"America/Godthab","109/19/8":"America/Godthab","110/19/8":"America/Godthab","111/19/8":"America/Godthab","112/19/8":"America/Godthab","113/19/8":"America/Godthab","114/19/8":"America/Godthab","115/19/8":"America/Godthab","116/19/8":"America/Godthab","85/20/8":"America/Godthab","86/20/8":"America/Godthab","87/20/8":"America/Godthab","88/20/8":"America/Godthab","89/20/8":"America/Godthab","90/20/8":"America/Godthab","91/20/8":"America/Godthab","92/20/8":"America/Godthab","93/20/8":"America/Godthab","94/20/8":"America/Godthab","95/20/8":"America/Godthab","96/20/8":"America/Godthab","97/20/8":"America/Godthab","98/20/8":"America/Godthab","99/20/8":"America/Godthab","100/20/8":"America/Godthab","101/20/8":"America/Godthab","102/20/8":"America/Godthab","103/20/8":"America/Godthab","104/20/8":"America/Godthab","105/20/8":"America/Godthab","106/20/8":"America/Godthab","107/20/8":"America/Godthab","108/20/8":"America/Godthab","109/20/8":"America/Godthab","110/20/8":"America/Godthab","111/20/8":"America/Godthab","112/20/8":"America/Godthab","113/20/8":"America/Godthab","114/20/8":"America/Godthab","115/20/8":"America/Godthab","116/20/8":"America/Godthab","117/20/8":"America/Godthab","84/21/8":"America/Godthab","85/21/8":"America/Godthab","86/21/8":"America/Godthab","87/21/8":"America/Godthab","88/21/8":"America/Godthab","89/21/8":"America/Godthab","90/21/8":"America/Godthab","91/21/8":"America/Godthab","92/21/8":"America/Godthab","93/21/8":"America/Godthab","94/21/8":"America/Godthab","95/21/8":"America/Godthab","96/21/8":"America/Godthab","97/21/8":"America/Godthab","98/21/8":"America/Godthab","99/21/8":"America/Godthab","100/21/8":"America/Godthab","101/21/8":"America/Godthab","102/21/8":"America/Godthab","103/21/8":"America/Godthab","104/21/8":"America/Godthab","105/21/8":"America/Godthab","106/21/8":"America/Godthab","107/21/8":"America/Godthab","108/21/8":"America/Godthab","109/21/8":"America/Godthab","110/21/8":"America/Godthab","111/21/8":"America/Godthab","112/21/8":"America/Godthab","113/21/8":"America/Godthab","114/21/8":"America/Godthab","115/21/8":"America/Godthab","116/21/8":"America/Godthab","117/21/8":"America/Godthab","118/21/8":"America/Godthab","119/21/8":"America/Godthab","83/22/8":"America/Godthab","84/22/8":"America/Godthab","85/22/8":"America/Godthab","86/22/8":"America/Godthab","87/22/8":"America/Godthab","88/22/8":"America/Godthab","89/22/8":"America/Godthab","90/22/8":"America/Godthab","91/22/8":"America/Godthab","92/22/8":"America/Godthab","93/22/8":"America/Godthab","94/22/8":"America/Godthab","95/22/8":"America/Godthab","96/22/8":"America/Godthab","97/22/8":"America/Godthab","98/22/8":"America/Godthab","99/22/8":"America/Godthab","100/22/8":"America/Godthab","101/22/8":"America/Godthab","102/22/8":"America/Godthab","103/22/8":"America/Godthab","104/22/8":"America/Godthab","105/22/8":"America/Godthab","106/22/8":"America/Godthab","107/22/8":"America/Godthab","108/22/8":"America/Godthab","109/22/8":"America/Godthab","110/22/8":"America/Godthab","111/22/8":"America/Godthab","112/22/8":"America/Godthab","113/22/8":"America/Godthab","114/22/8":"America/Godthab","115/22/8":"America/Godthab","116/22/8":"America/Godthab","117/22/8":"America/Godthab","118/22/8":"America/Godthab","119/22/8":"America/Godthab","83/23/8":"America/Godthab","84/23/8":"America/Godthab","85/23/8":"America/Godthab","86/23/8":"America/Godthab","87/23/8":"America/Godthab","88/23/8":"America/Godthab","89/23/8":"America/Godthab","90/23/8":"America/Godthab","91/23/8":"America/Godthab","92/23/8":"America/Godthab","93/23/8":"America/Godthab","94/23/8":"America/Godthab","95/23/8":"America/Godthab","96/23/8":"America/Godthab","97/23/8":"America/Godthab","98/23/8":"America/Godthab","99/23/8":"America/Godthab","100/23/8":"America/Godthab","101/23/8":"America/Godthab","102/23/8":"America/Godthab","103/23/8":"America/Godthab","104/23/8":"America/Godthab","105/23/8":"America/Godthab","106/23/8":"America/Godthab","107/23/8":"America/Godthab","108/23/8":"America/Godthab","109/23/8":"America/Godthab","110/23/8":"America/Godthab","111/23/8":"America/Godthab","112/23/8":"America/Godthab","113/23/8":"America/Godthab","114/23/8":"America/Godthab","115/23/8":"America/Godthab","116/23/8":"America/Godthab","117/23/8":"America/Godthab","118/23/8":"America/Godthab","119/23/8":"America/Godthab","82/24/8":"America/Godthab","83/24/8":"America/Godthab","84/24/8":"America/Godthab","85/24/8":"America/Godthab","86/24/8":"America/Godthab","87/24/8":"America/Godthab","88/24/8":"America/Godthab","89/24/8":"America/Godthab","90/24/8":"America/Godthab","91/24/8":"America/Godthab","92/24/8":"America/Godthab","93/24/8":"America/Godthab","94/24/8":"America/Godthab","95/24/8":"America/Godthab","96/24/8":"America/Godthab","97/24/8":"America/Godthab","98/24/8":"America/Godthab","99/24/8":"America/Godthab","100/24/8":"America/Godthab","101/24/8":"America/Godthab","102/24/8":"America/Godthab","103/24/8":"America/Godthab","104/24/8":"America/Godthab","105/24/8":"America/Godthab","106/24/8":"America/Godthab","107/24/8":"America/Godthab","108/24/8":"America/Godthab","109/24/8":"America/Godthab","110/24/8":"America/Godthab","111/24/8":"America/Godthab","112/24/8":"America/Godthab","113/24/8":"America/Godthab","114/24/8":"America/Godthab","115/24/8":"America/Godthab","116/24/8":"America/Godthab","117/24/8":"America/Godthab","118/24/8":"America/Godthab","81/25/8":"America/Godthab","82/25/8":"America/Godthab","83/25/8":"America/Godthab","84/25/8":"America/Godthab","85/25/8":"America/Godthab","86/25/8":"America/Godthab","87/25/8":"America/Godthab","88/25/8":"America/Godthab","89/25/8":"America/Godthab","90/25/8":"America/Godthab","91/25/8":"America/Godthab","92/25/8":"America/Godthab","93/25/8":"America/Godthab","94/25/8":"America/Godthab","95/25/8":"America/Godthab","96/25/8":"America/Godthab","97/25/8":"America/Godthab","98/25/8":"America/Godthab","99/25/8":"America/Godthab","100/25/8":"America/Godthab","101/25/8":"America/Godthab","102/25/8":"America/Godthab","103/25/8":"America/Godthab","104/25/8":"America/Godthab","105/25/8":"America/Godthab","106/25/8":"America/Godthab","107/25/8":"America/Godthab","108/25/8":"America/Godthab","109/25/8":"America/Godthab","110/25/8":"America/Godthab","111/25/8":"America/Godthab","112/25/8":"America/Godthab","113/25/8":"America/Godthab","114/25/8":"America/Godthab","115/25/8":"America/Godthab","116/25/8":"America/Godthab","117/25/8":"America/Godthab","118/25/8":"America/Godthab","81/26/8":"America/Godthab","82/26/8":"America/Godthab","83/26/8":"America/Godthab","84/26/8":"America/Godthab","85/26/8":"America/Godthab","86/26/8":"America/Godthab","87/26/8":"America/Godthab","88/26/8":"America/Godthab","89/26/8":"America/Godthab","90/26/8":"America/Godthab","91/26/8":"America/Godthab","92/26/8":"America/Godthab","93/26/8":"America/Godthab","94/26/8":"America/Godthab","95/26/8":"America/Godthab","96/26/8":"America/Godthab","97/26/8":"America/Godthab","98/26/8":"America/Godthab","99/26/8":"America/Godthab","100/26/8":"America/Godthab","101/26/8":"America/Godthab","102/26/8":"America/Godthab","103/26/8":"America/Godthab","104/26/8":"America/Godthab","105/26/8":"America/Godthab","106/26/8":"America/Godthab","107/26/8":"America/Godthab","108/26/8":"America/Godthab","109/26/8":"America/Godthab","110/26/8":"America/Godthab","111/26/8":"America/Godthab","112/26/8":"America/Godthab","113/26/8":"America/Godthab","114/26/8":"America/Godthab","115/26/8":"America/Godthab","116/26/8":"America/Godthab","117/26/8":"America/Godthab","80/27/8":"America/Godthab","81/27/8":"America/Godthab","82/27/8":"America/Godthab","83/27/8":"America/Godthab","84/27/8":"America/Godthab","85/27/8":"America/Godthab","86/27/8":"America/Godthab","87/27/8":"America/Godthab","88/27/8":"America/Godthab","89/27/8":"America/Godthab","90/27/8":"America/Godthab","91/27/8":"America/Godthab","92/27/8":"America/Godthab","93/27/8":"America/Godthab","94/27/8":"America/Godthab","95/27/8":"America/Godthab","96/27/8":"America/Godthab","97/27/8":"America/Godthab","98/27/8":"America/Godthab","99/27/8":"America/Godthab","100/27/8":"America/Godthab","101/27/8":"America/Godthab","102/27/8":"America/Godthab","103/27/8":"America/Godthab","104/27/8":"America/Godthab","105/27/8":"America/Godthab","106/27/8":"America/Godthab","107/27/8":"America/Godthab","108/27/8":"America/Godthab","109/27/8":"America/Godthab","110/27/8":"America/Godthab","111/27/8":"America/Godthab","112/27/8":"America/Godthab","113/27/8":"America/Godthab","114/27/8":"America/Godthab","115/27/8":"America/Godthab","116/27/8":"America/Godthab","80/28/8":"America/Godthab","81/28/8":"America/Godthab","82/28/8":"America/Godthab","83/28/8":"America/Godthab","84/28/8":"America/Godthab","85/28/8":"America/Godthab","86/28/8":"America/Godthab","87/28/8":"America/Godthab","88/28/8":"America/Godthab","89/28/8":"America/Godthab","90/28/8":"America/Godthab","91/28/8":"America/Godthab","92/28/8":"America/Godthab","93/28/8":"America/Godthab","94/28/8":"America/Godthab","95/28/8":"America/Godthab","96/28/8":"America/Godthab","97/28/8":"America/Godthab","98/28/8":"America/Godthab","99/28/8":"America/Godthab","100/28/8":"America/Godthab","101/28/8":"America/Godthab","102/28/8":"America/Godthab","103/28/8":"America/Godthab","104/28/8":"America/Godthab","105/28/8":"America/Godthab","106/28/8":"America/Godthab","107/28/8":"America/Godthab","108/28/8":"America/Godthab","109/28/8":"America/Godthab","110/28/8":"America/Godthab","111/28/8":"America/Godthab","112/28/8":"America/Godthab","113/28/8":"America/Godthab","114/28/8":"America/Godthab","115/28/8":"America/Godthab","80/29/8":"America/Godthab","81/29/8":"America/Godthab","82/29/8":"America/Godthab","83/29/8":"America/Godthab","84/29/8":"America/Godthab","85/29/8":"America/Godthab","86/29/8":"America/Godthab","87/29/8":"America/Godthab","88/29/8":"America/Godthab","89/29/8":"America/Godthab","90/29/8":"America/Godthab","91/29/8":"America/Godthab","92/29/8":"America/Godthab","93/29/8":"America/Godthab","94/29/8":"America/Godthab","95/29/8":"America/Godthab","96/29/8":"America/Godthab","97/29/8":"America/Godthab","98/29/8":"America/Godthab","99/29/8":"America/Godthab","100/29/8":"America/Godthab","101/29/8":"America/Godthab","102/29/8":"America/Godthab","103/29/8":"America/Godthab","104/29/8":"America/Godthab","105/29/8":"America/Godthab","106/29/8":"America/Godthab","107/29/8":"America/Godthab","108/29/8":"America/Godthab","109/29/8":"America/Godthab","110/29/8":"America/Godthab","111/29/8":"America/Godthab","112/29/8":"America/Godthab","113/29/8":"America/Godthab","114/29/8":"America/Godthab","115/29/8":"America/Godthab","81/30/8":"America/Godthab","82/30/8":"America/Godthab","83/30/8":"America/Godthab","84/30/8":"America/Godthab","85/30/8":"America/Godthab","86/30/8":"America/Godthab","87/30/8":"America/Godthab","88/30/8":"America/Godthab","89/30/8":"America/Godthab","90/30/8":"America/Godthab","91/30/8":"America/Godthab","92/30/8":"America/Godthab","93/30/8":"America/Godthab","94/30/8":"America/Godthab","95/30/8":"America/Godthab","96/30/8":"America/Godthab","97/30/8":"America/Godthab","98/30/8":"America/Godthab","99/30/8":"America/Godthab","100/30/8":"America/Godthab","101/30/8":"America/Godthab","102/30/8":"America/Godthab","103/30/8":"America/Godthab","104/30/8":"America/Godthab","105/30/8":"America/Godthab","106/30/8":"America/Godthab","107/30/8":"America/Godthab","108/30/8":"America/Godthab","109/30/8":"America/Godthab","110/30/8":"America/Godthab","111/30/8":"America/Godthab","112/30/8":"America/Godthab","113/30/8":"America/Godthab","114/30/8":"America/Godthab","115/30/8":"America/Godthab","82/31/8":"America/Godthab","83/31/8":"America/Godthab","84/31/8":"America/Godthab","85/31/8":"America/Godthab","86/31/8":"America/Godthab","87/31/8":"America/Godthab","88/31/8":"America/Godthab","89/31/8":"America/Godthab","90/31/8":"America/Godthab","91/31/8":"America/Godthab","92/31/8":"America/Godthab","93/31/8":"America/Godthab","94/31/8":"America/Godthab","95/31/8":"America/Godthab","96/31/8":"America/Godthab","97/31/8":"America/Godthab","98/31/8":"America/Godthab","99/31/8":"America/Godthab","100/31/8":"America/Godthab","101/31/8":"America/Godthab","102/31/8":"America/Godthab","103/31/8":"America/Godthab","104/31/8":"America/Godthab","105/31/8":"America/Godthab","106/31/8":"America/Godthab","107/31/8":"America/Godthab","108/31/8":"America/Godthab","109/31/8":"America/Godthab","110/31/8":"America/Godthab","111/31/8":"America/Godthab","112/31/8":"America/Godthab","113/31/8":"America/Godthab","114/31/8":"America/Godthab","115/31/8":"America/Godthab","83/32/8":"America/Godthab","84/32/8":"America/Godthab","85/32/8":"America/Godthab","86/32/8":"America/Godthab","87/32/8":"America/Godthab","88/32/8":"America/Godthab","89/32/8":"America/Godthab","90/32/8":"America/Godthab","91/32/8":"America/Godthab","92/32/8":"America/Godthab","93/32/8":"America/Godthab","94/32/8":"America/Godthab","95/32/8":"America/Godthab","96/32/8":"America/Godthab","97/32/8":"America/Godthab","98/32/8":"America/Godthab","99/32/8":"America/Godthab","100/32/8":"America/Godthab","101/32/8":"America/Godthab","102/32/8":"America/Godthab","103/32/8":"America/Godthab","104/32/8":"America/Godthab","105/32/8":"America/Godthab","106/32/8":"America/Godthab","107/32/8":"America/Godthab","108/32/8":"America/Godthab","109/32/8":"America/Godthab","110/32/8":"America/Godthab","111/32/8":"America/Godthab","112/32/8":"America/Godthab","113/32/8":"America/Godthab","114/32/8":"America/Godthab","115/32/8":"America/Godthab","84/33/8":"America/Godthab","85/33/8":"America/Godthab","86/33/8":"America/Godthab","87/33/8":"America/Godthab","88/33/8":"America/Godthab","89/33/8":"America/Godthab","90/33/8":"America/Godthab","91/33/8":"America/Godthab","92/33/8":"America/Godthab","93/33/8":"America/Godthab","94/33/8":"America/Godthab","95/33/8":"America/Godthab","96/33/8":"America/Godthab","97/33/8":"America/Godthab","98/33/8":"America/Godthab","99/33/8":"America/Godthab","100/33/8":"America/Godthab","101/33/8":"America/Godthab","102/33/8":"America/Godthab","103/33/8":"America/Godthab","104/33/8":"America/Godthab","105/33/8":"America/Godthab","106/33/8":"America/Godthab","107/33/8":"America/Godthab","108/33/8":"America/Godthab","109/33/8":"America/Godthab","110/33/8":"America/Godthab","111/33/8":"America/Godthab","112/33/8":"America/Godthab","113/33/8":"America/Godthab","114/33/8":"America/Godthab","85/34/8":"America/Godthab","86/34/8":"America/Godthab","87/34/8":"America/Godthab","88/34/8":"America/Godthab","89/34/8":"America/Godthab","90/34/8":"America/Godthab","91/34/8":"America/Godthab","92/34/8":"America/Godthab","93/34/8":"America/Godthab","94/34/8":"America/Godthab","95/34/8":"America/Godthab","96/34/8":"America/Godthab","97/34/8":"America/Godthab","98/34/8":"America/Godthab","99/34/8":"America/Godthab","100/34/8":"America/Godthab","101/34/8":"America/Godthab","102/34/8":"America/Godthab","103/34/8":"America/Godthab","104/34/8":"America/Godthab","105/34/8":"America/Godthab","106/34/8":"America/Godthab","107/34/8":"America/Godthab","108/34/8":"America/Godthab","109/34/8":"America/Godthab","110/34/8":"America/Godthab","111/34/8":"America/Godthab","112/34/8":"America/Godthab","113/34/8":"America/Godthab","114/34/8":"America/Godthab","115/34/8":"America/Godthab","86/35/8":"America/Godthab","87/35/8":"America/Godthab","88/35/8":"America/Godthab","89/35/8":"America/Godthab","90/35/8":"America/Godthab","91/35/8":"America/Godthab","92/35/8":"America/Godthab","93/35/8":"America/Godthab","94/35/8":"America/Godthab","95/35/8":"America/Godthab","96/35/8":"America/Godthab","97/35/8":"America/Godthab","98/35/8":"America/Godthab","99/35/8":"America/Godthab","100/35/8":"America/Godthab","101/35/8":"America/Godthab","102/35/8":"America/Godthab","103/35/8":"America/Godthab","104/35/8":"America/Godthab","105/35/8":"America/Godthab","106/35/8":"America/Godthab","107/35/8":"America/Godthab","108/35/8":"America/Godthab","109/35/8":"America/Godthab","110/35/8":"America/Godthab","111/35/8":"America/Godthab","112/35/8":"America/Godthab","113/35/8":"America/Godthab","114/35/8":"America/Godthab","115/35/8":"America/Godthab","86/36/8":"America/Godthab","87/36/8":"America/Godthab","88/36/8":"America/Godthab","89/36/8":"America/Godthab","90/36/8":"America/Godthab","91/36/8":"America/Godthab","92/36/8":"America/Godthab","93/36/8":"America/Godthab","94/36/8":"America/Godthab","95/36/8":"America/Godthab","96/36/8":"America/Godthab","97/36/8":"America/Godthab","98/36/8":"America/Godthab","99/36/8":"America/Godthab","100/36/8":"America/Godthab","101/36/8":"America/Godthab","102/36/8":"America/Godthab","103/36/8":"America/Godthab","104/36/8":"America/Godthab","105/36/8":"America/Godthab","106/36/8":"America/Godthab","107/36/8":"America/Godthab","108/36/8":"America/Godthab","109/36/8":"America/Godthab","110/36/8":"America/Godthab","111/36/8":"America/Godthab","112/36/8":"America/Godthab","113/36/8":"America/Godthab","114/36/8":"America/Godthab","115/36/8":"America/Godthab","86/37/8":"America/Godthab","87/37/8":"America/Godthab","88/37/8":"America/Godthab","89/37/8":"America/Godthab","90/37/8":"America/Godthab","91/37/8":"America/Godthab","92/37/8":"America/Godthab","93/37/8":"America/Godthab","94/37/8":"America/Godthab","95/37/8":"America/Godthab","96/37/8":"America/Godthab","97/37/8":"America/Godthab","98/37/8":"America/Godthab","99/37/8":"America/Godthab","100/37/8":"America/Godthab","101/37/8":"America/Godthab","102/37/8":"America/Godthab","103/37/8":"America/Godthab","104/37/8":"America/Godthab","105/37/8":"America/Godthab","106/37/8":"America/Godthab","107/37/8":"America/Godthab","108/37/8":"America/Godthab","109/37/8":"America/Godthab","110/37/8":"America/Godthab","111/37/8":"America/Godthab","112/37/8":"America/Godthab","113/37/8":"America/Godthab","114/37/8":"America/Godthab","85/38/8":"America/Godthab","86/38/8":"America/Godthab","87/38/8":"America/Godthab","88/38/8":"America/Godthab","89/38/8":"America/Godthab","90/38/8":"America/Godthab","91/38/8":"America/Godthab","92/38/8":"America/Godthab","93/38/8":"America/Godthab","94/38/8":"America/Godthab","95/38/8":"America/Godthab","96/38/8":"America/Godthab","97/38/8":"America/Godthab","98/38/8":"America/Godthab","99/38/8":"America/Godthab","100/38/8":"America/Godthab","101/38/8":"America/Godthab","102/38/8":"America/Godthab","103/38/8":"America/Godthab","104/38/8":"America/Godthab","105/38/8":"America/Godthab","106/38/8":"America/Godthab","107/38/8":"America/Godthab","108/38/8":"America/Godthab","109/38/8":"America/Godthab","110/38/8":"America/Godthab","111/38/8":"America/Godthab","112/38/8":"America/Godthab","113/38/8":"America/Godthab","114/38/8":"America/Godthab","85/39/8":"America/Godthab","86/39/8":"America/Godthab","87/39/8":"America/Godthab","88/39/8":"America/Godthab","89/39/8":"America/Godthab","90/39/8":"America/Godthab","91/39/8":"America/Godthab","92/39/8":"America/Godthab","93/39/8":"America/Godthab","94/39/8":"America/Godthab","95/39/8":"America/Godthab","96/39/8":"America/Godthab","97/39/8":"America/Godthab","98/39/8":"America/Godthab","99/39/8":"America/Godthab","100/39/8":"America/Godthab","101/39/8":"America/Godthab","102/39/8":"America/Godthab","103/39/8":"America/Godthab","104/39/8":"America/Godthab","105/39/8":"America/Godthab","106/39/8":"America/Godthab","107/39/8":"America/Godthab","108/39/8":"America/Godthab","109/39/8":"America/Godthab","110/39/8":"America/Godthab","111/39/8":"America/Godthab","112/39/8":"America/Godthab","113/39/8":"America/Godthab","114/39/8":"America/Godthab","85/40/8":"America/Godthab","86/40/8":"America/Godthab","87/40/8":"America/Godthab","88/40/8":"America/Godthab","89/40/8":"America/Godthab","90/40/8":"America/Godthab","91/40/8":"America/Godthab","92/40/8":"America/Godthab","93/40/8":"America/Godthab","94/40/8":"America/Godthab","95/40/8":"America/Godthab","96/40/8":"America/Godthab","97/40/8":"America/Godthab","98/40/8":"America/Godthab","99/40/8":"America/Godthab","100/40/8":"America/Godthab","101/40/8":"America/Godthab","102/40/8":"America/Godthab","103/40/8":"America/Godthab","104/40/8":"America/Godthab","105/40/8":"America/Godthab","106/40/8":"America/Godthab","107/40/8":"America/Godthab","108/40/8":"America/Godthab","109/40/8":"America/Godthab","110/40/8":"America/Godthab","111/40/8":"America/Godthab","112/40/8":"America/Godthab","113/40/8":"America/Godthab","114/40/8":"America/Godthab","85/41/8":"America/Godthab","86/41/8":"America/Godthab","87/41/8":"America/Godthab","88/41/8":"America/Godthab","89/41/8":"America/Godthab","90/41/8":"America/Godthab","91/41/8":"America/Godthab","92/41/8":"America/Godthab","93/41/8":"America/Godthab","94/41/8":"America/Godthab","95/41/8":"America/Godthab","96/41/8":"America/Godthab","97/41/8":"America/Godthab","98/41/8":"America/Godthab","99/41/8":"America/Godthab","100/41/8":"America/Godthab","101/41/8":"America/Godthab","102/41/8":"America/Godthab","103/41/8":"America/Godthab","104/41/8":"America/Godthab","105/41/8":"America/Godthab","106/41/8":"America/Godthab","107/41/8":"America/Godthab","108/41/8":"America/Godthab","109/41/8":"America/Godthab","110/41/8":"America/Godthab","111/41/8":"America/Godthab","112/41/8":"America/Godthab","113/41/8":"America/Godthab","114/41/8":"America/Godthab","84/42/8":"America/Godthab","85/42/8":"America/Godthab","86/42/8":"America/Godthab","87/42/8":"America/Godthab","88/42/8":"America/Godthab","89/42/8":"America/Godthab","90/42/8":"America/Godthab","91/42/8":"America/Godthab","92/42/8":"America/Godthab","93/42/8":"America/Godthab","94/42/8":"America/Godthab","95/42/8":"America/Godthab","96/42/8":"America/Godthab","97/42/8":"America/Godthab","98/42/8":"America/Godthab","99/42/8":"America/Godthab","100/42/8":"America/Godthab","101/42/8":"America/Godthab","102/42/8":"America/Godthab","103/42/8":"America/Godthab","104/42/8":"America/Godthab","105/42/8":"America/Godthab","106/42/8":"America/Godthab","107/42/8":"America/Godthab","108/42/8":"America/Godthab","109/42/8":"America/Godthab","110/42/8":"America/Godthab","111/42/8":"America/Godthab","112/42/8":"America/Godthab","113/42/8":"America/Godthab","114/42/8":"America/Godthab","84/43/8":"America/Godthab","85/43/8":"America/Godthab","86/43/8":"America/Godthab","87/43/8":"America/Godthab","88/43/8":"America/Godthab","89/43/8":"America/Godthab","90/43/8":"America/Godthab","91/43/8":"America/Godthab","92/43/8":"America/Godthab","93/43/8":"America/Godthab","94/43/8":"America/Godthab","95/43/8":"America/Godthab","96/43/8":"America/Godthab","97/43/8":"America/Godthab","98/43/8":"America/Godthab","99/43/8":"America/Godthab","100/43/8":"America/Godthab","101/43/8":"America/Godthab","102/43/8":"America/Godthab","103/43/8":"America/Godthab","104/43/8":"America/Godthab","105/43/8":"America/Godthab","106/43/8":"America/Godthab","107/43/8":"America/Godthab","108/43/8":"America/Godthab","109/43/8":"America/Godthab","110/43/8":"America/Godthab","111/43/8":"America/Godthab","112/43/8":"America/Godthab","113/43/8":"America/Godthab","86/44/8":"America/Godthab","87/44/8":"America/Godthab","88/44/8":"America/Godthab","89/44/8":"America/Godthab","90/44/8":"America/Godthab","91/44/8":"America/Godthab","92/44/8":"America/Godthab","93/44/8":"America/Godthab","94/44/8":"America/Godthab","95/44/8":"America/Godthab","96/44/8":"America/Godthab","97/44/8":"America/Godthab","98/44/8":"America/Godthab","99/44/8":"America/Godthab","100/44/8":"America/Godthab","101/44/8":"America/Godthab","102/44/8":"America/Godthab","103/44/8":"America/Godthab","104/44/8":"America/Godthab","105/44/8":"America/Godthab","106/44/8":"America/Godthab","107/44/8":"America/Godthab","108/44/8":"America/Godthab","109/44/8":"America/Godthab","110/44/8":"America/Godthab","111/44/8":"America/Godthab","112/44/8":"America/Godthab","113/44/8":"America/Godthab","86/45/8":"America/Godthab","87/45/8":"America/Godthab","88/45/8":"America/Godthab","89/45/8":"America/Godthab","90/45/8":"America/Godthab","91/45/8":"America/Godthab","92/45/8":"America/Godthab","93/45/8":"America/Godthab","94/45/8":"America/Godthab","95/45/8":"America/Godthab","96/45/8":"America/Godthab","97/45/8":"America/Godthab","98/45/8":"America/Godthab","99/45/8":"America/Godthab","100/45/8":"America/Godthab","101/45/8":"America/Godthab","102/45/8":"America/Godthab","103/45/8":"America/Godthab","104/45/8":"America/Godthab","105/45/8":"America/Godthab","106/45/8":"America/Godthab","107/45/8":"America/Godthab","108/45/8":"America/Godthab","109/45/8":"America/Godthab","110/45/8":"America/Godthab","111/45/8":"America/Godthab","112/45/8":"America/Godthab","87/46/8":"America/Godthab","88/46/8":"America/Godthab","89/46/8":"America/Godthab","90/46/8":"America/Godthab","91/46/8":"America/Godthab","92/46/8":"America/Godthab","93/46/8":"America/Godthab","94/46/8":"America/Godthab","95/46/8":"America/Godthab","96/46/8":"America/Godthab","97/46/8":"America/Godthab","98/46/8":"America/Godthab","99/46/8":"America/Godthab","100/46/8":"America/Godthab","101/46/8":"America/Godthab","102/46/8":"America/Godthab","103/46/8":"America/Godthab","104/46/8":"America/Godthab","105/46/8":"America/Godthab","106/46/8":"America/Godthab","107/46/8":"America/Godthab","108/46/8":"America/Godthab","109/46/8":"America/Godthab","110/46/8":"America/Godthab","111/46/8":"America/Godthab","87/47/8":"America/Godthab","88/47/8":"America/Godthab","89/47/8":"America/Godthab","90/47/8":"America/Godthab","91/47/8":"America/Godthab","92/47/8":"America/Godthab","93/47/8":"America/Godthab","94/47/8":"America/Godthab","95/47/8":"America/Godthab","96/47/8":"America/Godthab","97/47/8":"America/Godthab","98/47/8":"America/Godthab","99/47/8":"America/Godthab","100/47/8":"America/Godthab","101/47/8":"America/Godthab","102/47/8":"America/Godthab","103/47/8":"America/Godthab","104/47/8":"America/Godthab","105/47/8":"America/Godthab","106/47/8":"America/Godthab","107/47/8":"America/Godthab","108/47/8":"America/Godthab","109/47/8":"America/Godthab","110/47/8":"America/Godthab","87/48/8":"America/Godthab","88/48/8":"America/Godthab","89/48/8":"America/Godthab","90/48/8":"America/Godthab","91/48/8":"America/Godthab","92/48/8":"America/Godthab","93/48/8":"America/Godthab","94/48/8":"America/Godthab","95/48/8":"America/Godthab","96/48/8":"America/Godthab","97/48/8":"America/Godthab","98/48/8":"America/Godthab","99/48/8":"America/Godthab","100/48/8":"America/Godthab","101/48/8":"America/Godthab","102/48/8":"America/Godthab","103/48/8":"America/Godthab","104/48/8":"America/Godthab","105/48/8":"America/Godthab","106/48/8":"America/Godthab","107/48/8":"America/Godthab","108/48/8":"America/Godthab","109/48/8":"America/Godthab","110/48/8":"America/Godthab","87/49/8":"America/Godthab","88/49/8":"America/Godthab","89/49/8":"America/Godthab","90/49/8":"America/Godthab","91/49/8":"America/Godthab","92/49/8":"America/Godthab","93/49/8":"America/Godthab","94/49/8":"America/Godthab","95/49/8":"America/Godthab","96/49/8":"America/Godthab","97/49/8":"America/Godthab","98/49/8":"America/Godthab","99/49/8":"America/Godthab","100/49/8":"America/Godthab","101/49/8":"America/Godthab","102/49/8":"America/Godthab","103/49/8":"America/Godthab","104/49/8":"America/Godthab","105/49/8":"America/Godthab","106/49/8":"America/Godthab","107/49/8":"America/Godthab","108/49/8":"America/Godthab","109/49/8":"America/Godthab","88/50/8":"America/Godthab","89/50/8":"America/Godthab","90/50/8":"America/Godthab","91/50/8":"America/Godthab","92/50/8":"America/Godthab","93/50/8":"America/Godthab","94/50/8":"America/Godthab","95/50/8":"America/Godthab","96/50/8":"America/Godthab","97/50/8":"America/Godthab","98/50/8":"America/Godthab","99/50/8":"America/Godthab","100/50/8":"America/Godthab","101/50/8":"America/Godthab","102/50/8":"America/Godthab","103/50/8":"America/Godthab","104/50/8":"America/Godthab","105/50/8":"America/Godthab","106/50/8":"America/Godthab","107/50/8":"America/Godthab","108/50/8":"America/Godthab","109/50/8":"America/Godthab","110/50/8":"America/Godthab","88/51/8":"America/Godthab","89/51/8":"America/Godthab","90/51/8":"America/Godthab","91/51/8":"America/Godthab","92/51/8":"America/Godthab","93/51/8":"America/Godthab","94/51/8":"America/Godthab","95/51/8":"America/Godthab","96/51/8":"America/Godthab","97/51/8":"America/Godthab","98/51/8":"America/Godthab","99/51/8":"America/Godthab","100/51/8":"America/Godthab","101/51/8":"America/Godthab","102/51/8":"America/Godthab","103/51/8":"America/Godthab","104/51/8":"America/Godthab","105/51/8":"America/Godthab","106/51/8":"America/Godthab","107/51/8":"America/Godthab","108/51/8":"America/Godthab","109/51/8":"America/Godthab","111/51/8":"America/Godthab","88/52/8":"America/Godthab","89/52/8":"America/Godthab","90/52/8":"America/Godthab","91/52/8":"America/Godthab","92/52/8":"America/Godthab","93/52/8":"America/Godthab","94/52/8":"America/Godthab","95/52/8":"America/Godthab","96/52/8":"America/Godthab","97/52/8":"America/Godthab","98/52/8":"America/Godthab","99/52/8":"America/Godthab","100/52/8":"America/Godthab","101/52/8":"America/Godthab","102/52/8":"America/Godthab","103/52/8":"America/Godthab","104/52/8":"America/Godthab","105/52/8":"America/Godthab","106/52/8":"America/Godthab","107/52/8":"America/Godthab","108/52/8":"America/Godthab","109/52/8":"America/Godthab","88/53/8":"America/Godthab","89/53/8":"America/Godthab","90/53/8":"America/Godthab","91/53/8":"America/Godthab","92/53/8":"America/Godthab","93/53/8":"America/Godthab","94/53/8":"America/Godthab","95/53/8":"America/Godthab","96/53/8":"America/Godthab","97/53/8":"America/Godthab","98/53/8":"America/Godthab","99/53/8":"America/Godthab","100/53/8":"America/Godthab","101/53/8":"America/Godthab","102/53/8":"America/Godthab","103/53/8":"America/Godthab","104/53/8":"America/Godthab","105/53/8":"America/Godthab","106/53/8":"America/Godthab","107/53/8":"America/Godthab","108/53/8":"America/Godthab","109/53/8":"America/Godthab","89/54/8":"America/Godthab","90/54/8":"America/Godthab","91/54/8":"America/Godthab","92/54/8":"America/Godthab","93/54/8":"America/Godthab","94/54/8":"America/Godthab","95/54/8":"America/Godthab","96/54/8":"America/Godthab","97/54/8":"America/Godthab","98/54/8":"America/Godthab","99/54/8":"America/Godthab","100/54/8":"America/Godthab","101/54/8":"America/Godthab","102/54/8":"America/Godthab","103/54/8":"America/Godthab","104/54/8":"America/Godthab","105/54/8":"America/Godthab","106/54/8":"America/Godthab","107/54/8":"America/Godthab","108/54/8":"America/Godthab","109/54/8":"America/Godthab","89/55/8":"America/Godthab","90/55/8":"America/Godthab","91/55/8":"America/Godthab","92/55/8":"America/Godthab","93/55/8":"America/Godthab","94/55/8":"America/Godthab","95/55/8":"America/Godthab","96/55/8":"America/Godthab","97/55/8":"America/Godthab","98/55/8":"America/Godthab","99/55/8":"America/Godthab","100/55/8":"America/Godthab","101/55/8":"America/Godthab","102/55/8":"America/Godthab","103/55/8":"America/Godthab","104/55/8":"America/Godthab","105/55/8":"America/Godthab","106/55/8":"America/Godthab","107/55/8":"America/Godthab","108/55/8":"America/Godthab","109/55/8":"America/Godthab","89/56/8":"America/Godthab","90/56/8":"America/Godthab","91/56/8":"America/Godthab","92/56/8":"America/Godthab","93/56/8":"America/Godthab","94/56/8":"America/Godthab","95/56/8":"America/Godthab","96/56/8":"America/Godthab","97/56/8":"America/Godthab","98/56/8":"America/Godthab","99/56/8":"America/Godthab","100/56/8":"America/Godthab","101/56/8":"America/Godthab","102/56/8":"America/Godthab","103/56/8":"America/Godthab","104/56/8":"America/Godthab","105/56/8":"America/Godthab","106/56/8":"America/Godthab","107/56/8":"America/Godthab","108/56/8":"America/Godthab","109/56/8":"America/Godthab","89/57/8":"America/Godthab","90/57/8":"America/Godthab","91/57/8":"America/Godthab","92/57/8":"America/Godthab","93/57/8":"America/Godthab","94/57/8":"America/Godthab","95/57/8":"America/Godthab","96/57/8":"America/Godthab","97/57/8":"America/Godthab","98/57/8":"America/Godthab","99/57/8":"America/Godthab","100/57/8":"America/Godthab","101/57/8":"America/Godthab","102/57/8":"America/Godthab","103/57/8":"America/Godthab","104/57/8":"America/Godthab","105/57/8":"America/Godthab","106/57/8":"America/Godthab","107/57/8":"America/Godthab","108/57/8":"America/Godthab","109/57/8":"America/Godthab","110/57/8":"America/Godthab","111/57/8":"America/Godthab","90/58/8":"America/Godthab","91/58/8":"America/Godthab","92/58/8":"America/Godthab","93/58/8":"America/Godthab","94/58/8":"America/Godthab","95/58/8":"America/Godthab","96/58/8":"America/Godthab","97/58/8":"America/Godthab","98/58/8":"America/Godthab","99/58/8":"America/Godthab","100/58/8":"America/Godthab","101/58/8":"America/Godthab","102/58/8":"America/Godthab","103/58/8":"America/Godthab","104/58/8":"America/Godthab","105/58/8":"America/Godthab","106/58/8":"America/Godthab","107/58/8":"America/Godthab","108/58/8":"America/Godthab","109/58/8":"America/Godthab","90/59/8":"America/Godthab","91/59/8":"America/Godthab","92/59/8":"America/Godthab","93/59/8":"America/Godthab","94/59/8":"America/Godthab","95/59/8":"America/Godthab","96/59/8":"America/Godthab","97/59/8":"America/Godthab","98/59/8":"America/Godthab","99/59/8":"America/Godthab","100/59/8":"America/Godthab","101/59/8":"America/Godthab","102/59/8":"America/Godthab","103/59/8":"America/Godthab","104/59/8":"America/Godthab","105/59/8":"America/Godthab","106/59/8":"America/Godthab","107/59/8":"America/Godthab","108/59/8":"America/Godthab","90/60/8":"America/Godthab","91/60/8":"America/Godthab","92/60/8":"America/Godthab","93/60/8":"America/Godthab","94/60/8":"America/Godthab","95/60/8":"America/Godthab","96/60/8":"America/Godthab","97/60/8":"America/Godthab","98/60/8":"America/Godthab","99/60/8":"America/Godthab","100/60/8":"America/Godthab","101/60/8":"America/Godthab","102/60/8":"America/Godthab","103/60/8":"America/Godthab","104/60/8":"America/Godthab","105/60/8":"America/Godthab","106/60/8":"America/Godthab","90/61/8":"America/Godthab","91/61/8":"America/Godthab","92/61/8":"America/Godthab","93/61/8":"America/Godthab","94/61/8":"America/Godthab","95/61/8":"America/Godthab","96/61/8":"America/Godthab","97/61/8":"America/Godthab","98/61/8":"America/Godthab","99/61/8":"America/Godthab","100/61/8":"America/Godthab","101/61/8":"America/Godthab","102/61/8":"America/Godthab","103/61/8":"America/Godthab","104/61/8":"America/Godthab","90/62/8":"America/Godthab","91/62/8":"America/Godthab","92/62/8":"America/Godthab","93/62/8":"America/Godthab","94/62/8":"America/Godthab","95/62/8":"America/Godthab","96/62/8":"America/Godthab","97/62/8":"America/Godthab","98/62/8":"America/Godthab","99/62/8":"America/Godthab","100/62/8":"America/Godthab","101/62/8":"America/Godthab","102/62/8":"America/Godthab","103/62/8":"America/Godthab","90/63/8":"America/Godthab","91/63/8":"America/Godthab","92/63/8":"America/Godthab","93/63/8":"America/Godthab","94/63/8":"America/Godthab","95/63/8":"America/Godthab","96/63/8":"America/Godthab","97/63/8":"America/Godthab","98/63/8":"America/Godthab","99/63/8":"America/Godthab","100/63/8":"America/Godthab","101/63/8":"America/Godthab","102/63/8":"America/Godthab","103/63/8":"America/Godthab","90/64/8":"America/Godthab","91/64/8":"America/Godthab","92/64/8":"America/Godthab","93/64/8":"America/Godthab","94/64/8":"America/Godthab","95/64/8":"America/Godthab","96/64/8":"America/Godthab","97/64/8":"America/Godthab","98/64/8":"America/Godthab","99/64/8":"America/Godthab","100/64/8":"America/Godthab","101/64/8":"America/Godthab","102/64/8":"America/Godthab","90/65/8":"America/Godthab","91/65/8":"America/Godthab","92/65/8":"America/Godthab","93/65/8":"America/Godthab","94/65/8":"America/Godthab","95/65/8":"America/Godthab","96/65/8":"America/Godthab","97/65/8":"America/Godthab","98/65/8":"America/Godthab","99/65/8":"America/Godthab","100/65/8":"America/Godthab","101/65/8":"America/Godthab","91/66/8":"America/Godthab","92/66/8":"America/Godthab","93/66/8":"America/Godthab","94/66/8":"America/Godthab","95/66/8":"America/Godthab","96/66/8":"America/Godthab","97/66/8":"America/Godthab","98/66/8":"America/Godthab","91/67/8":"America/Godthab","92/67/8":"America/Godthab","93/67/8":"America/Godthab","94/67/8":"America/Godthab","95/67/8":"America/Godthab","96/67/8":"America/Godthab","97/67/8":"America/Godthab","98/67/8":"America/Godthab","91/68/8":"America/Godthab","92/68/8":"America/Godthab","93/68/8":"America/Godthab","94/68/8":"America/Godthab","95/68/8":"America/Godthab","96/68/8":"America/Godthab","97/68/8":"America/Godthab","98/68/8":"America/Godthab","92/69/8":"America/Godthab","93/69/8":"America/Godthab","94/69/8":"America/Godthab","95/69/8":"America/Godthab","96/69/8":"America/Godthab","97/69/8":"America/Godthab","93/70/8":"America/Godthab","94/70/8":"America/Godthab","95/70/8":"America/Godthab","96/70/8":"America/Godthab","97/70/8":"America/Godthab","93/71/8":"America/Godthab","94/71/8":"America/Godthab","95/71/8":"America/Godthab","96/71/8":"America/Godthab","97/71/8":"America/Godthab","94/72/8":"America/Godthab","95/72/8":"America/Godthab","96/72/8":"America/Godthab","97/72/8":"America/Godthab","95/73/8":"America/Godthab","96/73/8":"America/Godthab","102/8/8":"America/Godthab","103/8/8":"America/Godthab","104/8/8":"America/Godthab","105/8/8":"America/Godthab","106/8/8":"America/Godthab","107/8/8":"America/Godthab","99/9/8":"America/Godthab","100/9/8":"America/Godthab","101/9/8":"America/Godthab","102/9/8":"America/Godthab","107/9/8":"America/Godthab","108/9/8":"America/Godthab","109/9/8":"America/Godthab","97/10/8":"America/Godthab","98/10/8":"America/Godthab","99/10/8":"America/Godthab","109/10/8":"America/Godthab","110/10/8":"America/Godthab","95/11/8":"America/Godthab","96/11/8":"America/Godthab","97/11/8":"America/Godthab","110/11/8":"America/Godthab","111/11/8":"America/Godthab","93/12/8":"America/Godthab","94/12/8":"America/Godthab","95/12/8":"America/Godthab","111/12/8":"America/Godthab","112/12/8":"America/Godthab","92/13/8":"America/Godthab","93/13/8":"America/Godthab","112/13/8":"America/Godthab","113/13/8":"America/Godthab","90/14/8":"America/Godthab","91/14/8":"America/Godthab","92/14/8":"America/Godthab","113/14/8":"America/Godthab","114/14/8":"America/Godthab","89/15/8":"America/Godthab","90/15/8":"America/Godthab","114/15/8":"America/Godthab","87/16/8":"America/Godthab","88/16/8":"America/Godthab","89/16/8":"America/Godthab","114/16/8":"America/Godthab","115/16/8":"America/Godthab","85/17/8":"America/Pangnirtung","86/17/8":"America/Godthab","87/17/8":"America/Godthab","115/17/8":"America/Godthab","84/18/8":"America/Pangnirtung","85/18/8":"America/Godthab","115/18/8":"America/Godthab","116/18/8":"America/Godthab","117/18/8":"America/Godthab","84/19/8":"America/Godthab","117/19/8":"America/Godthab","118/19/8":"America/Godthab","83/20/8":"America/Pangnirtung","84/20/8":"America/Godthab","118/20/8":"America/Godthab","119/20/8":"America/Godthab","120/20/8":"America/Godthab","82/21/8":"America/Pangnirtung","83/21/8":"America/Godthab","120/21/8":"America/Godthab","82/22/8":"America/Pangnirtung","120/22/8":"America/Godthab","81/23/8":"America/Pangnirtung","82/23/8":"America/Godthab","120/23/8":"America/Godthab","80/24/8":"America/Pangnirtung","81/24/8":"America/Godthab","119/24/8":"America/Godthab","120/24/8":"America/Godthab","80/25/8":"America/Godthab","119/25/8":"America/Godthab","79/26/8":"America/Iqaluit","80/26/8":"America/Godthab","118/26/8":"America/Godthab","119/26/8":"America/Godthab","79/27/8":"America/Godthab","117/27/8":"America/Godthab","118/27/8":"America/Godthab","79/28/8":"America/Godthab","116/28/8":"America/Godthab","117/28/8":"America/Godthab","79/29/8":"America/Godthab","116/29/8":"America/Godthab","79/30/8":"America/Godthab","80/30/8":"America/Godthab","116/30/8":"America/Godthab","80/31/8":"America/Godthab","81/31/8":"America/Godthab","116/31/8":"America/Godthab","81/32/8":"America/Godthab","82/32/8":"America/Godthab","116/32/8":"America/Godthab","82/33/8":"America/Godthab","83/33/8":"America/Godthab","115/33/8":"America/Godthab","116/33/8":"America/Godthab","83/34/8":"America/Thule","84/34/8":"America/Godthab","116/34/8":"America/Godthab","84/35/8":"America/Thule","85/35/8":"America/Godthab","116/35/8":"America/Godthab","85/36/8":"America/Godthab","116/36/8":"America/Godthab","84/37/8":"America/Thule","85/37/8":"America/Godthab","115/37/8":"America/Godthab","116/37/8":"America/Godthab","84/38/8":"America/Thule","115/38/8":"America/Godthab","84/39/8":"America/Thule","115/39/8":"America/Godthab","84/40/8":"America/Godthab","115/40/8":"America/Godthab","83/41/8":"America/Thule","84/41/8":"America/Godthab","115/41/8":"America/Godthab","83/42/8":"America/Thule","115/42/8":"America/Godthab","83/43/8":"America/Godthab","114/43/8":"America/Godthab","115/43/8":"America/Scoresbysund","83/44/8":"America/Godthab","84/44/8":"America/Godthab","85/44/8":"America/Godthab","114/44/8":"America/Godthab","85/45/8":"America/Godthab","113/45/8":"America/Godthab","114/45/8":"America/Scoresbysund","85/46/8":"America/Godthab","86/46/8":"America/Godthab","112/46/8":"America/Godthab","113/46/8":"America/Scoresbysund","86/47/8":"America/Godthab","111/47/8":"America/Godthab","112/47/8":"America/Scoresbysund","86/48/8":"America/Godthab","111/48/8":"America/Scoresbysund","86/49/8":"America/Godthab","110/49/8":"America/Godthab","111/49/8":"America/Scoresbysund","86/50/8":"America/Godthab","87/50/8":"America/Godthab","111/50/8":"America/Godthab","112/50/8":"America/Godthab","113/50/8":"America/Scoresbysund","87/51/8":"America/Godthab","112/51/8":"America/Godthab","113/51/8":"America/Godthab","87/52/8":"America/Godthab","87/53/8":"America/Godthab","87/54/8":"America/Godthab","88/54/8":"America/Godthab","88/55/8":"America/Godthab","88/56/8":"America/Godthab","88/57/8":"America/Godthab","112/57/8":"America/Godthab","88/58/8":"America/Godthab","89/58/8":"America/Godthab","110/58/8":"America/Godthab","111/58/8":"America/Godthab","112/58/8":"America/Godthab","89/59/8":"America/Godthab","109/59/8":"America/Godthab","110/59/8":"America/Godthab","89/60/8":"America/Godthab","107/60/8":"America/Godthab","108/60/8":"America/Godthab","109/60/8":"America/Godthab","89/61/8":"America/Godthab","105/61/8":"America/Godthab","106/61/8":"America/Godthab","107/61/8":"America/Godthab","89/62/8":"America/Godthab","104/62/8":"America/Godthab","105/62/8":"America/Godthab","89/63/8":"America/Godthab","104/63/8":"America/Godthab","89/64/8":"America/Godthab","103/64/8":"America/Godthab","104/64/8":"America/Godthab","89/65/8":"America/Godthab","102/65/8":"America/Godthab","103/65/8":"America/Godthab","89/66/8":"America/Godthab","90/66/8":"America/Godthab","99/66/8":"America/Godthab","100/66/8":"America/Godthab","101/66/8":"America/Godthab","102/66/8":"America/Godthab","90/67/8":"America/Godthab","99/67/8":"America/Godthab","90/68/8":"America/Godthab","99/68/8":"America/Godthab","90/69/8":"America/Godthab","91/69/8":"America/Godthab","98/69/8":"America/Godthab","99/69/8":"America/Godthab","91/70/8":"America/Godthab","92/70/8":"America/Godthab","98/70/8":"America/Godthab","92/71/8":"America/Godthab","98/71/8":"America/Godthab","92/72/8":"America/Godthab","93/72/8":"America/Godthab","98/72/8":"America/Godthab","93/73/8":"America/Godthab","94/73/8":"America/Godthab","97/73/8":"America/Godthab","98/73/8":"America/Godthab","94/74/8":"America/Godthab","95/74/8":"America/Godthab","96/74/8":"America/Godthab","97/74/8":"America/Godthab","96/75/8":"America/Godthab","83/77/8":"America/Goose_Bay","83/78/8":"America/Goose_Bay","83/79/8":"America/Goose_Bay","83/80/8":"America/Goose_Bay","84/80/8":"America/Goose_Bay","83/81/8":"America/Goose_Bay","84/81/8":"America/Goose_Bay","85/81/8":"America/Goose_Bay","86/81/8":"America/Goose_Bay","81/82/8":"America/Goose_Bay","82/82/8":"America/Goose_Bay","83/82/8":"America/Goose_Bay","84/82/8":"America/Goose_Bay","85/82/8":"America/Goose_Bay","86/82/8":"America/Goose_Bay","81/83/8":"America/Goose_Bay","83/83/8":"America/Goose_Bay","84/83/8":"America/Goose_Bay","85/83/8":"America/Goose_Bay","86/83/8":"America/Goose_Bay","81/73/8":"America/Pangnirtung","82/73/8":"America/Pangnirtung","81/74/8":"America/Pangnirtung","82/74/8":"America/Goose_Bay","81/75/8":"America/Montreal","82/75/8":"America/Goose_Bay","83/75/8":"America/Goose_Bay","82/76/8":"America/Goose_Bay","83/76/8":"America/Goose_Bay","84/76/8":"America/Goose_Bay","82/77/8":"America/Montreal","84/77/8":"America/Goose_Bay","82/78/8":"America/Montreal","84/78/8":"America/Goose_Bay","82/79/8":"America/Montreal","84/79/8":"America/Goose_Bay","85/79/8":"America/Goose_Bay","80/80/8":"America/Montreal","82/80/8":"America/Montreal","85/80/8":"America/Goose_Bay","86/80/8":"America/Goose_Bay","87/80/8":"America/Goose_Bay","79/81/8":"America/Montreal","80/81/8":"America/Goose_Bay","81/81/8":"America/Goose_Bay","82/81/8":"America/Goose_Bay","87/81/8":"America/Goose_Bay","79/82/8":"America/Montreal","80/82/8":"America/Goose_Bay","87/82/8":"America/Goose_Bay","88/82/8":"America/Goose_Bay","80/83/8":"America/Goose_Bay","82/83/8":"America/Goose_Bay","87/83/8":"America/Goose_Bay","88/83/8":"America/St_Johns","80/84/8":"America/Montreal","81/84/8":"America/Goose_Bay","82/84/8":"America/Goose_Bay","83/84/8":"America/Goose_Bay","82/85/8":"America/Montreal","76/111/8":"America/Nassau","77/111/8":"America/Grand_Turk","76/112/8":"America/Grand_Turk","77/112/8":"America/Grand_Turk","84/118/8":"America/St_Vincent","84/119/8":"America/Grenada","83/116/8":"America/Guadeloupe","62/115/8":"America/Mexico_City","63/115/8":"America/Guatemala","62/116/8":"America/Mexico_City","63/116/8":"America/Guatemala","62/117/8":"America/Guatemala","62/118/8":"America/Guatemala","71/128/8":"America/Guayaquil","72/128/8":"America/Guayaquil","73/128/8":"America/Guayaquil","71/129/8":"America/Guayaquil","72/129/8":"America/Guayaquil","70/127/8":"America/Guayaquil","70/128/8":"America/Guayaquil","70/129/8":"America/Guayaquil","73/129/8":"America/Guayaquil","74/129/8":"America/Lima","70/130/8":"America/Lima","71/130/8":"America/Guayaquil","72/130/8":"America/Lima","73/130/8":"America/Lima","70/131/8":"America/Lima","71/131/8":"America/Lima","72/131/8":"America/Lima","86/122/8":"America/Guyana","86/123/8":"America/Guyana","87/123/8":"America/Guyana","86/124/8":"America/Guyana","87/124/8":"America/Paramaribo","86/125/8":"America/Guyana","87/125/8":"America/Paramaribo","86/126/8":"America/Guyana","87/126/8":"America/Guyana","84/89/8":"America/Halifax","83/90/8":"America/Halifax","83/91/8":"America/Halifax","83/88/8":"America/Montreal","85/88/8":"America/St_Johns","82/89/8":"America/Moncton","83/89/8":"America/Halifax","85/89/8":"America/St_Johns","82/90/8":"America/Halifax","81/91/8":"America/Moncton","82/91/8":"America/Halifax","80/92/8":"America/Moncton","81/92/8":"America/Halifax","82/92/8":"America/Halifax","83/92/8":"America/Halifax","84/92/8":"America/Halifax","85/92/8":"America/Halifax","80/93/8":"America/Halifax","81/93/8":"America/Halifax","82/93/8":"America/Halifax","85/93/8":"America/Halifax","69/111/8":"America/Havana","70/111/8":"America/Havana","72/112/8":"America/Havana","68/110/8":"America/New_York","69/110/8":"America/New_York","70/110/8":"America/Nassau","71/110/8":"America/Nassau","67/111/8":"America/Havana","68/111/8":"America/Havana","71/111/8":"America/Havana","72/111/8":"America/Nassau","73/111/8":"America/Nassau","67/112/8":"America/Havana","68/112/8":"America/Havana","69/112/8":"America/Havana","70/112/8":"America/Havana","71/112/8":"America/Havana","73/112/8":"America/Havana","74/112/8":"America/Nassau","75/112/8":"America/Nassau","72/113/8":"America/Havana","73/113/8":"America/Havana","74/113/8":"America/Havana","75/113/8":"America/Havana","48/105/8":"America/Hermosillo","49/105/8":"America/Hermosillo","49/106/8":"America/Hermosillo","46/103/8":"America/Phoenix","47/103/8":"America/Phoenix","46/104/8":"America/Tijuana","47/104/8":"America/Hermosillo","48/104/8":"America/Hermosillo","49/104/8":"America/Phoenix","47/105/8":"America/Hermosillo","47/106/8":"America/Tijuana","48/106/8":"America/Hermosillo","47/107/8":"America/Mazatlan","48/107/8":"America/Mazatlan","49/107/8":"America/Hermosillo","49/108/8":"America/Hermosillo","67/96/8":"America/Indiana/Indianapolis","66/97/8":"America/Indiana/Indianapolis","67/97/8":"America/Indiana/Indianapolis","67/98/8":"America/New_York","32/60/8":"America/Yellowknife","33/60/8":"America/Yellowknife","72/13/8":"America/Iqaluit","73/13/8":"America/Iqaluit","74/13/8":"America/Iqaluit","75/13/8":"America/Iqaluit","76/13/8":"America/Iqaluit","77/13/8":"America/Iqaluit","78/13/8":"America/Iqaluit","70/14/8":"America/Iqaluit","71/14/8":"America/Iqaluit","72/14/8":"America/Iqaluit","73/14/8":"America/Iqaluit","74/14/8":"America/Iqaluit","75/14/8":"America/Iqaluit","76/14/8":"America/Iqaluit","77/14/8":"America/Iqaluit","78/14/8":"America/Iqaluit","69/15/8":"America/Iqaluit","70/15/8":"America/Iqaluit","71/15/8":"America/Iqaluit","72/15/8":"America/Iqaluit","73/15/8":"America/Iqaluit","74/15/8":"America/Iqaluit","75/15/8":"America/Iqaluit","76/15/8":"America/Iqaluit","77/15/8":"America/Iqaluit","78/15/8":"America/Iqaluit","68/16/8":"America/Iqaluit","69/16/8":"America/Iqaluit","70/16/8":"America/Iqaluit","71/16/8":"America/Iqaluit","72/16/8":"America/Iqaluit","73/16/8":"America/Iqaluit","74/16/8":"America/Iqaluit","75/16/8":"America/Iqaluit","76/16/8":"America/Iqaluit","77/16/8":"America/Iqaluit","78/16/8":"America/Iqaluit","68/17/8":"America/Iqaluit","69/17/8":"America/Iqaluit","70/17/8":"America/Iqaluit","71/17/8":"America/Iqaluit","72/17/8":"America/Iqaluit","73/17/8":"America/Iqaluit","74/17/8":"America/Iqaluit","75/17/8":"America/Iqaluit","76/17/8":"America/Iqaluit","77/17/8":"America/Iqaluit","78/17/8":"America/Iqaluit","68/18/8":"America/Iqaluit","69/18/8":"America/Iqaluit","70/18/8":"America/Iqaluit","71/18/8":"America/Iqaluit","72/18/8":"America/Iqaluit","73/18/8":"America/Iqaluit","74/18/8":"America/Iqaluit","75/18/8":"America/Iqaluit","76/18/8":"America/Iqaluit","77/18/8":"America/Iqaluit","78/18/8":"America/Iqaluit","68/19/8":"America/Iqaluit","69/19/8":"America/Iqaluit","70/19/8":"America/Iqaluit","71/19/8":"America/Iqaluit","72/19/8":"America/Iqaluit","73/19/8":"America/Iqaluit","74/19/8":"America/Iqaluit","75/19/8":"America/Iqaluit","76/19/8":"America/Iqaluit","77/19/8":"America/Iqaluit","78/19/8":"America/Iqaluit","68/20/8":"America/Iqaluit","69/20/8":"America/Iqaluit","70/20/8":"America/Iqaluit","71/20/8":"America/Iqaluit","72/20/8":"America/Iqaluit","73/20/8":"America/Iqaluit","74/20/8":"America/Iqaluit","75/20/8":"America/Iqaluit","76/20/8":"America/Iqaluit","77/20/8":"America/Iqaluit","78/20/8":"America/Iqaluit","68/21/8":"America/Iqaluit","69/21/8":"America/Iqaluit","70/21/8":"America/Iqaluit","71/21/8":"America/Iqaluit","72/21/8":"America/Iqaluit","73/21/8":"America/Iqaluit","74/21/8":"America/Iqaluit","75/21/8":"America/Iqaluit","76/21/8":"America/Iqaluit","77/21/8":"America/Iqaluit","78/21/8":"America/Iqaluit","68/22/8":"America/Iqaluit","69/22/8":"America/Iqaluit","70/22/8":"America/Iqaluit","71/22/8":"America/Iqaluit","72/22/8":"America/Iqaluit","73/22/8":"America/Iqaluit","74/22/8":"America/Iqaluit","75/22/8":"America/Iqaluit","76/22/8":"America/Iqaluit","77/22/8":"America/Iqaluit","78/22/8":"America/Iqaluit","68/23/8":"America/Iqaluit","69/23/8":"America/Iqaluit","70/23/8":"America/Iqaluit","71/23/8":"America/Iqaluit","72/23/8":"America/Iqaluit","73/23/8":"America/Iqaluit","74/23/8":"America/Iqaluit","75/23/8":"America/Iqaluit","76/23/8":"America/Iqaluit","77/23/8":"America/Iqaluit","78/23/8":"America/Iqaluit","68/24/8":"America/Iqaluit","69/24/8":"America/Iqaluit","70/24/8":"America/Iqaluit","71/24/8":"America/Iqaluit","72/24/8":"America/Iqaluit","73/24/8":"America/Iqaluit","74/24/8":"America/Iqaluit","75/24/8":"America/Iqaluit","76/24/8":"America/Iqaluit","77/24/8":"America/Iqaluit","78/24/8":"America/Iqaluit","68/25/8":"America/Iqaluit","69/25/8":"America/Iqaluit","70/25/8":"America/Iqaluit","71/25/8":"America/Iqaluit","72/25/8":"America/Iqaluit","73/25/8":"America/Iqaluit","74/25/8":"America/Iqaluit","75/25/8":"America/Iqaluit","76/25/8":"America/Iqaluit","77/25/8":"America/Iqaluit","78/25/8":"America/Iqaluit","68/26/8":"America/Iqaluit","69/26/8":"America/Iqaluit","70/26/8":"America/Iqaluit","71/26/8":"America/Iqaluit","72/26/8":"America/Iqaluit","73/26/8":"America/Iqaluit","74/26/8":"America/Iqaluit","75/26/8":"America/Iqaluit","76/26/8":"America/Iqaluit","77/26/8":"America/Iqaluit","78/26/8":"America/Iqaluit","68/27/8":"America/Iqaluit","69/27/8":"America/Iqaluit","70/27/8":"America/Iqaluit","71/27/8":"America/Iqaluit","72/27/8":"America/Iqaluit","73/27/8":"America/Iqaluit","74/27/8":"America/Iqaluit","75/27/8":"America/Iqaluit","76/27/8":"America/Iqaluit","77/27/8":"America/Iqaluit","78/27/8":"America/Iqaluit","68/28/8":"America/Iqaluit","69/28/8":"America/Iqaluit","70/28/8":"America/Iqaluit","71/28/8":"America/Iqaluit","72/28/8":"America/Iqaluit","73/28/8":"America/Iqaluit","74/28/8":"America/Iqaluit","75/28/8":"America/Iqaluit","76/28/8":"America/Iqaluit","77/28/8":"America/Iqaluit","68/29/8":"America/Iqaluit","69/29/8":"America/Iqaluit","70/29/8":"America/Iqaluit","71/29/8":"America/Iqaluit","72/29/8":"America/Iqaluit","73/29/8":"America/Iqaluit","74/29/8":"America/Iqaluit","75/29/8":"America/Iqaluit","76/29/8":"America/Iqaluit","77/29/8":"America/Iqaluit","68/30/8":"America/Iqaluit","69/30/8":"America/Iqaluit","70/30/8":"America/Iqaluit","71/30/8":"America/Iqaluit","72/30/8":"America/Iqaluit","73/30/8":"America/Iqaluit","74/30/8":"America/Iqaluit","75/30/8":"America/Iqaluit","68/31/8":"America/Iqaluit","69/31/8":"America/Iqaluit","70/31/8":"America/Iqaluit","71/31/8":"America/Iqaluit","72/31/8":"America/Iqaluit","73/31/8":"America/Iqaluit","74/31/8":"America/Iqaluit","68/32/8":"America/Iqaluit","69/32/8":"America/Iqaluit","70/32/8":"America/Iqaluit","71/32/8":"America/Iqaluit","72/32/8":"America/Iqaluit","73/32/8":"America/Iqaluit","74/32/8":"America/Iqaluit","68/33/8":"America/Iqaluit","69/33/8":"America/Iqaluit","70/33/8":"America/Iqaluit","71/33/8":"America/Iqaluit","72/33/8":"America/Iqaluit","73/33/8":"America/Iqaluit","74/33/8":"America/Iqaluit","68/34/8":"America/Iqaluit","69/34/8":"America/Iqaluit","70/34/8":"America/Iqaluit","71/34/8":"America/Iqaluit","72/34/8":"America/Iqaluit","73/34/8":"America/Iqaluit","74/34/8":"America/Iqaluit","68/35/8":"America/Iqaluit","69/35/8":"America/Iqaluit","70/35/8":"America/Iqaluit","71/35/8":"America/Iqaluit","72/35/8":"America/Iqaluit","73/35/8":"America/Iqaluit","68/36/8":"America/Iqaluit","69/36/8":"America/Iqaluit","70/36/8":"America/Iqaluit","71/36/8":"America/Iqaluit","72/36/8":"America/Iqaluit","73/36/8":"America/Iqaluit","68/37/8":"America/Iqaluit","69/37/8":"America/Iqaluit","70/37/8":"America/Iqaluit","71/37/8":"America/Iqaluit","72/37/8":"America/Iqaluit","68/38/8":"America/Iqaluit","69/38/8":"America/Iqaluit","70/38/8":"America/Iqaluit","71/38/8":"America/Iqaluit","72/38/8":"America/Iqaluit","68/39/8":"America/Iqaluit","69/39/8":"America/Iqaluit","70/39/8":"America/Iqaluit","71/39/8":"America/Iqaluit","72/39/8":"America/Iqaluit","68/40/8":"America/Iqaluit","69/40/8":"America/Iqaluit","70/40/8":"America/Iqaluit","71/40/8":"America/Iqaluit","72/40/8":"America/Iqaluit","68/41/8":"America/Iqaluit","69/41/8":"America/Iqaluit","70/41/8":"America/Iqaluit","71/41/8":"America/Iqaluit","68/42/8":"America/Iqaluit","69/42/8":"America/Iqaluit","70/42/8":"America/Iqaluit","71/42/8":"America/Iqaluit","68/43/8":"America/Iqaluit","69/43/8":"America/Iqaluit","70/43/8":"America/Iqaluit","71/43/8":"America/Iqaluit","68/44/8":"America/Iqaluit","69/44/8":"America/Iqaluit","70/44/8":"America/Iqaluit","71/44/8":"America/Iqaluit","68/45/8":"America/Iqaluit","69/45/8":"America/Iqaluit","70/45/8":"America/Iqaluit","71/45/8":"America/Iqaluit","68/46/8":"America/Iqaluit","69/46/8":"America/Iqaluit","70/46/8":"America/Iqaluit","68/47/8":"America/Iqaluit","69/47/8":"America/Iqaluit","70/47/8":"America/Iqaluit","68/48/8":"America/Iqaluit","69/48/8":"America/Iqaluit","70/48/8":"America/Iqaluit","68/49/8":"America/Iqaluit","69/49/8":"America/Iqaluit","70/49/8":"America/Iqaluit","71/49/8":"America/Iqaluit","72/49/8":"America/Iqaluit","68/50/8":"America/Iqaluit","69/50/8":"America/Iqaluit","70/50/8":"America/Iqaluit","71/50/8":"America/Iqaluit","72/50/8":"America/Iqaluit","73/50/8":"America/Iqaluit","68/51/8":"America/Iqaluit","69/51/8":"America/Iqaluit","70/51/8":"America/Iqaluit","71/51/8":"America/Iqaluit","72/51/8":"America/Iqaluit","73/51/8":"America/Iqaluit","68/52/8":"America/Iqaluit","69/52/8":"America/Iqaluit","70/52/8":"America/Iqaluit","71/52/8":"America/Iqaluit","72/52/8":"America/Iqaluit","73/52/8":"America/Iqaluit","74/52/8":"America/Iqaluit","68/53/8":"America/Iqaluit","69/53/8":"America/Iqaluit","70/53/8":"America/Iqaluit","71/53/8":"America/Iqaluit","72/53/8":"America/Iqaluit","73/53/8":"America/Iqaluit","74/53/8":"America/Iqaluit","68/54/8":"America/Iqaluit","69/54/8":"America/Iqaluit","70/54/8":"America/Iqaluit","71/54/8":"America/Iqaluit","72/54/8":"America/Iqaluit","73/54/8":"America/Iqaluit","74/54/8":"America/Iqaluit","75/54/8":"America/Iqaluit","76/54/8":"America/Iqaluit","68/55/8":"America/Iqaluit","69/55/8":"America/Iqaluit","70/55/8":"America/Iqaluit","71/55/8":"America/Iqaluit","72/55/8":"America/Iqaluit","73/55/8":"America/Iqaluit","74/55/8":"America/Iqaluit","75/55/8":"America/Iqaluit","76/55/8":"America/Iqaluit","77/55/8":"America/Iqaluit","68/56/8":"America/Iqaluit","69/56/8":"America/Iqaluit","70/56/8":"America/Iqaluit","71/56/8":"America/Iqaluit","72/56/8":"America/Iqaluit","73/56/8":"America/Iqaluit","74/56/8":"America/Iqaluit","75/56/8":"America/Iqaluit","76/56/8":"America/Iqaluit","77/56/8":"America/Iqaluit","78/56/8":"America/Iqaluit","68/57/8":"America/Iqaluit","69/57/8":"America/Iqaluit","70/57/8":"America/Iqaluit","71/57/8":"America/Iqaluit","72/57/8":"America/Iqaluit","73/57/8":"America/Iqaluit","74/57/8":"America/Iqaluit","75/57/8":"America/Iqaluit","76/57/8":"America/Iqaluit","77/57/8":"America/Iqaluit","78/57/8":"America/Iqaluit","68/58/8":"America/Iqaluit","69/58/8":"America/Iqaluit","70/58/8":"America/Iqaluit","71/58/8":"America/Iqaluit","72/58/8":"America/Iqaluit","73/58/8":"America/Iqaluit","74/58/8":"America/Iqaluit","75/58/8":"America/Iqaluit","76/58/8":"America/Iqaluit","77/58/8":"America/Iqaluit","78/58/8":"America/Iqaluit","68/59/8":"America/Iqaluit","69/59/8":"America/Iqaluit","70/59/8":"America/Iqaluit","71/59/8":"America/Iqaluit","72/59/8":"America/Iqaluit","73/59/8":"America/Iqaluit","74/59/8":"America/Iqaluit","75/59/8":"America/Iqaluit","76/59/8":"America/Iqaluit","77/59/8":"America/Iqaluit","78/59/8":"America/Iqaluit","68/60/8":"America/Iqaluit","69/60/8":"America/Iqaluit","70/60/8":"America/Iqaluit","71/60/8":"America/Iqaluit","72/60/8":"America/Iqaluit","73/60/8":"America/Iqaluit","74/60/8":"America/Iqaluit","75/60/8":"America/Iqaluit","76/60/8":"America/Iqaluit","77/60/8":"America/Iqaluit","78/60/8":"America/Iqaluit","68/61/8":"America/Iqaluit","69/61/8":"America/Iqaluit","70/61/8":"America/Iqaluit","71/61/8":"America/Iqaluit","72/61/8":"America/Iqaluit","73/61/8":"America/Iqaluit","74/61/8":"America/Iqaluit","75/61/8":"America/Iqaluit","76/61/8":"America/Iqaluit","77/61/8":"America/Iqaluit","78/61/8":"America/Iqaluit","68/62/8":"America/Iqaluit","69/62/8":"America/Iqaluit","70/62/8":"America/Iqaluit","71/62/8":"America/Iqaluit","72/62/8":"America/Iqaluit","73/62/8":"America/Iqaluit","74/62/8":"America/Iqaluit","75/62/8":"America/Iqaluit","76/62/8":"America/Iqaluit","77/62/8":"America/Iqaluit","78/62/8":"America/Iqaluit","68/63/8":"America/Iqaluit","69/63/8":"America/Iqaluit","70/63/8":"America/Iqaluit","71/63/8":"America/Iqaluit","72/63/8":"America/Iqaluit","73/63/8":"America/Iqaluit","74/63/8":"America/Iqaluit","75/63/8":"America/Iqaluit","76/63/8":"America/Iqaluit","77/63/8":"America/Iqaluit","78/63/8":"America/Iqaluit","68/64/8":"America/Iqaluit","69/64/8":"America/Iqaluit","70/64/8":"America/Iqaluit","71/64/8":"America/Iqaluit","72/64/8":"America/Iqaluit","73/64/8":"America/Iqaluit","74/64/8":"America/Iqaluit","75/64/8":"America/Iqaluit","76/64/8":"America/Iqaluit","77/64/8":"America/Iqaluit","78/64/8":"America/Iqaluit","69/65/8":"America/Iqaluit","70/65/8":"America/Iqaluit","71/65/8":"America/Iqaluit","72/65/8":"America/Iqaluit","73/65/8":"America/Iqaluit","74/65/8":"America/Iqaluit","75/65/8":"America/Iqaluit","76/65/8":"America/Iqaluit","77/65/8":"America/Iqaluit","78/65/8":"America/Iqaluit","70/66/8":"America/Iqaluit","71/66/8":"America/Iqaluit","72/66/8":"America/Iqaluit","73/66/8":"America/Iqaluit","74/66/8":"America/Iqaluit","75/66/8":"America/Iqaluit","76/66/8":"America/Iqaluit","77/66/8":"America/Iqaluit","78/66/8":"America/Iqaluit","70/67/8":"America/Iqaluit","71/67/8":"America/Iqaluit","72/67/8":"America/Iqaluit","73/67/8":"America/Iqaluit","74/67/8":"America/Iqaluit","75/67/8":"America/Iqaluit","76/67/8":"America/Iqaluit","77/67/8":"America/Iqaluit","78/67/8":"America/Iqaluit","72/68/8":"America/Iqaluit","73/68/8":"America/Iqaluit","74/68/8":"America/Iqaluit","75/68/8":"America/Iqaluit","76/68/8":"America/Iqaluit","77/68/8":"America/Iqaluit","78/68/8":"America/Iqaluit","68/69/8":"America/Iqaluit","69/69/8":"America/Iqaluit","71/69/8":"America/Iqaluit","72/69/8":"America/Iqaluit","73/69/8":"America/Iqaluit","74/69/8":"America/Iqaluit","75/69/8":"America/Iqaluit","76/69/8":"America/Iqaluit","77/69/8":"America/Iqaluit","78/69/8":"America/Iqaluit","68/70/8":"America/Iqaluit","69/70/8":"America/Iqaluit","70/70/8":"America/Iqaluit","71/70/8":"America/Iqaluit","76/70/8":"America/Iqaluit","77/70/8":"America/Iqaluit","78/70/8":"America/Iqaluit","68/71/8":"America/Iqaluit","69/71/8":"America/Iqaluit","70/71/8":"America/Iqaluit","71/71/8":"America/Iqaluit","78/71/8":"America/Iqaluit","68/72/8":"America/Iqaluit","69/72/8":"America/Iqaluit","70/72/8":"America/Iqaluit","71/72/8":"America/Iqaluit","68/73/8":"America/Iqaluit","69/73/8":"America/Iqaluit","70/73/8":"America/Iqaluit","71/73/8":"America/Iqaluit","68/74/8":"America/Iqaluit","69/74/8":"America/Iqaluit","70/74/8":"America/Iqaluit","71/74/8":"America/Iqaluit","68/75/8":"America/Iqaluit","69/75/8":"America/Iqaluit","70/75/8":"America/Iqaluit","71/75/8":"America/Iqaluit","68/76/8":"America/Iqaluit","69/76/8":"America/Iqaluit","70/76/8":"America/Iqaluit","71/76/8":"America/Iqaluit","68/77/8":"America/Iqaluit","69/77/8":"America/Iqaluit","70/77/8":"America/Iqaluit","71/77/8":"America/Iqaluit","72/77/8":"America/Iqaluit","68/78/8":"America/Iqaluit","69/78/8":"America/Iqaluit","70/78/8":"America/Iqaluit","71/78/8":"America/Iqaluit","72/78/8":"America/Iqaluit","68/79/8":"America/Iqaluit","69/79/8":"America/Iqaluit","70/79/8":"America/Iqaluit","71/79/8":"America/Iqaluit","72/79/8":"America/Iqaluit","70/80/8":"America/Iqaluit","71/80/8":"America/Iqaluit","70/81/8":"America/Iqaluit","70/82/8":"America/Iqaluit","70/83/8":"America/Iqaluit","71/12/8":"America/Iqaluit","72/12/8":"America/Iqaluit","73/12/8":"America/Iqaluit","74/12/8":"America/Iqaluit","75/12/8":"America/Iqaluit","76/12/8":"America/Iqaluit","77/12/8":"America/Iqaluit","78/12/8":"America/Iqaluit","79/12/8":"America/Iqaluit","69/13/8":"America/Iqaluit","70/13/8":"America/Iqaluit","71/13/8":"America/Iqaluit","79/13/8":"America/Iqaluit","68/14/8":"America/Iqaluit","69/14/8":"America/Iqaluit","79/14/8":"America/Iqaluit","67/15/8":"America/Iqaluit","68/15/8":"America/Iqaluit","79/15/8":"America/Iqaluit","67/16/8":"America/Rankin_Inlet","79/16/8":"America/Iqaluit","67/17/8":"America/Rankin_Inlet","79/17/8":"America/Iqaluit","67/18/8":"America/Rankin_Inlet","79/18/8":"America/Iqaluit","67/19/8":"America/Rankin_Inlet","79/19/8":"America/Iqaluit","67/20/8":"America/Rankin_Inlet","79/20/8":"America/Iqaluit","67/21/8":"America/Rankin_Inlet","79/21/8":"America/Iqaluit","67/22/8":"America/Rankin_Inlet","79/22/8":"America/Iqaluit","67/23/8":"America/Rankin_Inlet","79/23/8":"America/Iqaluit","67/24/8":"America/Rankin_Inlet","79/24/8":"America/Iqaluit","67/25/8":"America/Rankin_Inlet","79/25/8":"America/Iqaluit","67/26/8":"America/Rankin_Inlet","67/27/8":"America/Rankin_Inlet","67/28/8":"America/Rankin_Inlet","78/28/8":"America/Iqaluit","67/29/8":"America/Rankin_Inlet","78/29/8":"America/Iqaluit","67/30/8":"America/Rankin_Inlet","76/30/8":"America/Iqaluit","77/30/8":"America/Iqaluit","78/30/8":"America/Iqaluit","67/31/8":"America/Rankin_Inlet","75/31/8":"America/Iqaluit","76/31/8":"America/Iqaluit","67/32/8":"America/Rankin_Inlet","75/32/8":"America/Iqaluit","67/33/8":"America/Rankin_Inlet","75/33/8":"America/Iqaluit","76/33/8":"America/Thule","67/34/8":"America/Rankin_Inlet","75/34/8":"America/Iqaluit","67/35/8":"America/Rankin_Inlet","74/35/8":"America/Iqaluit","75/35/8":"America/Thule","67/36/8":"America/Rankin_Inlet","74/36/8":"America/Iqaluit","67/37/8":"America/Rankin_Inlet","73/37/8":"America/Iqaluit","74/37/8":"America/Iqaluit","67/38/8":"America/Rankin_Inlet","73/38/8":"America/Iqaluit","67/39/8":"America/Rankin_Inlet","73/39/8":"America/Iqaluit","67/40/8":"America/Rankin_Inlet","73/40/8":"America/Iqaluit","67/41/8":"America/Rankin_Inlet","72/41/8":"America/Iqaluit","73/41/8":"America/Iqaluit","67/42/8":"America/Rankin_Inlet","72/42/8":"America/Iqaluit","67/43/8":"America/Rankin_Inlet","72/43/8":"America/Iqaluit","67/44/8":"America/Rankin_Inlet","72/44/8":"America/Iqaluit","67/45/8":"America/Rankin_Inlet","72/45/8":"America/Iqaluit","67/46/8":"America/Rankin_Inlet","71/46/8":"America/Iqaluit","72/46/8":"America/Iqaluit","67/47/8":"America/Rankin_Inlet","71/47/8":"America/Iqaluit","67/48/8":"America/Rankin_Inlet","71/48/8":"America/Iqaluit","72/48/8":"America/Iqaluit","73/48/8":"America/Iqaluit","67/49/8":"America/Rankin_Inlet","73/49/8":"America/Iqaluit","74/49/8":"America/Iqaluit","67/50/8":"America/Rankin_Inlet","74/50/8":"America/Iqaluit","67/51/8":"America/Rankin_Inlet","74/51/8":"America/Iqaluit","75/51/8":"America/Iqaluit","67/52/8":"America/Rankin_Inlet","75/52/8":"America/Iqaluit","67/53/8":"America/Rankin_Inlet","75/53/8":"America/Iqaluit","76/53/8":"America/Iqaluit","77/53/8":"America/Iqaluit","67/54/8":"America/Rankin_Inlet","77/54/8":"America/Iqaluit","78/54/8":"America/Iqaluit","67/55/8":"America/Rankin_Inlet","78/55/8":"America/Iqaluit","79/55/8":"America/Iqaluit","67/56/8":"America/Rankin_Inlet","79/56/8":"America/Iqaluit","67/57/8":"America/Rankin_Inlet","79/57/8":"America/Iqaluit","67/58/8":"America/Rankin_Inlet","79/58/8":"America/Iqaluit","67/59/8":"America/Rankin_Inlet","79/59/8":"America/Iqaluit","67/60/8":"America/Rankin_Inlet","79/60/8":"America/Iqaluit","67/61/8":"America/Rankin_Inlet","79/61/8":"America/Iqaluit","67/62/8":"America/Rankin_Inlet","79/62/8":"America/Iqaluit","67/63/8":"America/Rankin_Inlet","79/63/8":"America/Iqaluit","79/64/8":"America/Iqaluit","79/65/8":"America/Iqaluit","79/66/8":"America/Iqaluit","79/67/8":"America/Iqaluit","79/68/8":"America/Iqaluit","79/69/8":"America/Iqaluit","67/70/8":"America/Rankin_Inlet","72/70/8":"America/Iqaluit","73/70/8":"America/Iqaluit","74/70/8":"America/Iqaluit","75/70/8":"America/Iqaluit","79/70/8":"America/Iqaluit","67/71/8":"America/Rankin_Inlet","72/71/8":"America/Montreal","74/71/8":"America/Montreal","75/71/8":"America/Montreal","76/71/8":"America/Montreal","77/71/8":"America/Iqaluit","79/71/8":"America/Iqaluit","67/72/8":"America/Rankin_Inlet","72/72/8":"America/Iqaluit","76/72/8":"America/Montreal","77/72/8":"America/Iqaluit","78/72/8":"America/Iqaluit","79/72/8":"America/Iqaluit","67/73/8":"America/Rankin_Inlet","72/73/8":"America/Iqaluit","78/73/8":"America/Iqaluit","79/73/8":"America/Iqaluit","67/74/8":"America/Rankin_Inlet","72/74/8":"America/Iqaluit","78/74/8":"America/Montreal","79/74/8":"America/Iqaluit","67/75/8":"America/Rankin_Inlet","72/75/8":"America/Montreal","78/75/8":"America/Montreal","79/75/8":"America/Iqaluit","67/76/8":"America/Rankin_Inlet","72/76/8":"America/Montreal","73/76/8":"America/Montreal","79/76/8":"America/Montreal","67/77/8":"America/Rankin_Inlet","73/77/8":"America/Montreal","67/78/8":"America/Rankin_Inlet","73/78/8":"America/Iqaluit","67/79/8":"America/Rankin_Inlet","73/79/8":"America/Montreal","67/80/8":"America/Toronto","68/80/8":"America/Iqaluit","69/80/8":"America/Iqaluit","72/80/8":"America/Iqaluit","73/80/8":"America/Montreal","69/81/8":"America/Iqaluit","71/81/8":"America/Iqaluit","72/81/8":"America/Montreal","69/82/8":"America/Toronto","71/82/8":"America/Iqaluit","69/83/8":"America/Toronto","71/83/8":"America/Iqaluit","72/83/8":"America/Montreal","69/84/8":"America/Toronto","70/84/8":"America/Iqaluit","71/84/8":"America/Iqaluit","72/84/8":"America/Montreal","70/85/8":"America/Toronto","71/85/8":"America/Montreal","72/114/8":"America/Jamaica","73/114/8":"America/Jamaica","72/115/8":"America/Jamaica","73/115/8":"America/Jamaica","74/115/8":"America/Jamaica","31/76/8":"America/Juneau","31/74/8":"America/Vancouver","29/75/8":"America/Yakutat","30/75/8":"America/Vancouver","31/75/8":"America/Juneau","32/75/8":"America/Vancouver","29/76/8":"America/Juneau","30/76/8":"America/Juneau","32/76/8":"America/Juneau","33/76/8":"America/Vancouver","30/77/8":"America/Juneau","31/77/8":"America/Sitka","32/77/8":"America/Juneau","33/77/8":"America/Juneau","32/78/8":"America/Sitka","33/78/8":"America/Sitka","82/115/8":"America/St_Thomas","80/136/8":"America/La_Paz","80/137/8":"America/La_Paz","81/137/8":"America/La_Paz","80/138/8":"America/La_Paz","81/138/8":"America/La_Paz","82/138/8":"America/La_Paz","83/138/8":"America/La_Paz","80/139/8":"America/La_Paz","81/139/8":"America/La_Paz","82/139/8":"America/La_Paz","83/139/8":"America/La_Paz","84/139/8":"America/La_Paz","79/140/8":"America/La_Paz","80/140/8":"America/La_Paz","81/140/8":"America/La_Paz","82/140/8":"America/La_Paz","83/140/8":"America/La_Paz","84/140/8":"America/La_Paz","85/140/8":"America/La_Paz","80/141/8":"America/La_Paz","81/141/8":"America/La_Paz","82/141/8":"America/La_Paz","83/141/8":"America/La_Paz","84/141/8":"America/La_Paz","80/142/8":"America/La_Paz","81/142/8":"America/La_Paz","82/142/8":"America/La_Paz","82/143/8":"America/La_Paz","80/134/8":"America/Manaus","81/134/8":"America/Manaus","78/135/8":"America/Rio_Branco","79/135/8":"America/Rio_Branco","80/135/8":"America/La_Paz","81/135/8":"America/La_Paz","78/136/8":"America/Lima","79/136/8":"America/La_Paz","81/136/8":"America/La_Paz","82/136/8":"America/Porto_Velho","78/137/8":"America/Lima","79/137/8":"America/La_Paz","82/137/8":"America/La_Paz","83/137/8":"America/La_Paz","78/138/8":"America/Lima","79/138/8":"America/La_Paz","78/139/8":"America/Lima","79/139/8":"America/La_Paz","78/140/8":"America/Lima","78/141/8":"America/Santiago","79/141/8":"America/La_Paz","79/142/8":"America/La_Paz","79/143/8":"America/La_Paz","79/144/8":"America/Santiago","74/130/8":"America/Lima","75/130/8":"America/Lima","76/130/8":"America/Lima","68/131/8":"America/Lima","69/131/8":"America/Lima","73/131/8":"America/Lima","74/131/8":"America/Lima","75/131/8":"America/Lima","69/132/8":"America/Lima","70/132/8":"America/Lima","71/132/8":"America/Lima","72/132/8":"America/Lima","73/132/8":"America/Lima","74/132/8":"America/Lima","69/133/8":"America/Lima","70/133/8":"America/Lima","71/133/8":"America/Lima","72/133/8":"America/Lima","73/133/8":"America/Lima","74/133/8":"America/Lima","70/134/8":"America/Lima","71/134/8":"America/Lima","72/134/8":"America/Lima","73/134/8":"America/Lima","74/134/8":"America/Lima","71/135/8":"America/Lima","72/135/8":"America/Lima","73/135/8":"America/Lima","74/135/8":"America/Lima","75/135/8":"America/Lima","71/136/8":"America/Lima","72/136/8":"America/Lima","73/136/8":"America/Lima","74/136/8":"America/Lima","75/136/8":"America/Lima","76/136/8":"America/Lima","77/136/8":"America/Lima","72/137/8":"America/Lima","73/137/8":"America/Lima","74/137/8":"America/Lima","75/137/8":"America/Lima","76/137/8":"America/Lima","77/137/8":"America/Lima","72/138/8":"America/Lima","73/138/8":"America/Lima","74/138/8":"America/Lima","75/138/8":"America/Lima","76/138/8":"America/Lima","77/138/8":"America/Lima","73/139/8":"America/Lima","74/139/8":"America/Lima","75/139/8":"America/Lima","76/139/8":"America/Lima","77/139/8":"America/Lima","73/140/8":"America/Lima","74/140/8":"America/Lima","75/140/8":"America/Lima","76/140/8":"America/Lima","77/140/8":"America/Lima","75/141/8":"America/Lima","67/130/8":"America/Lima","68/130/8":"America/Lima","69/130/8":"America/Lima","67/131/8":"America/Lima","67/132/8":"America/Lima","68/132/8":"America/Lima","68/133/8":"America/Lima","68/134/8":"America/Lima","69/134/8":"America/Lima","75/134/8":"America/Lima","76/134/8":"America/Rio_Branco","77/134/8":"America/Rio_Branco","69/135/8":"America/Lima","70/135/8":"America/Lima","76/135/8":"America/Lima","77/135/8":"America/Lima","70/136/8":"America/Lima","70/137/8":"America/Lima","71/137/8":"America/Lima","71/138/8":"America/Lima","71/139/8":"America/Lima","72/139/8":"America/Lima","72/140/8":"America/Lima","72/141/8":"America/Lima","73/141/8":"America/Lima","74/141/8":"America/Lima","76/141/8":"America/Lima","77/141/8":"America/Lima","74/142/8":"America/Lima","75/142/8":"America/Lima","76/142/8":"America/Lima","41/88/8":"America/Los_Angeles","42/88/8":"America/Los_Angeles","43/88/8":"America/Los_Angeles","44/88/8":"America/Los_Angeles","40/89/8":"America/Los_Angeles","41/89/8":"America/Los_Angeles","42/89/8":"America/Los_Angeles","43/89/8":"America/Los_Angeles","44/89/8":"America/Los_Angeles","40/90/8":"America/Los_Angeles","41/90/8":"America/Los_Angeles","42/90/8":"America/Los_Angeles","43/90/8":"America/Los_Angeles","44/90/8":"America/Los_Angeles","45/90/8":"America/Los_Angeles","40/91/8":"America/Los_Angeles","41/91/8":"America/Los_Angeles","42/91/8":"America/Los_Angeles","43/91/8":"America/Los_Angeles","40/92/8":"America/Los_Angeles","41/92/8":"America/Los_Angeles","42/92/8":"America/Los_Angeles","40/93/8":"America/Los_Angeles","41/93/8":"America/Los_Angeles","42/93/8":"America/Los_Angeles","40/94/8":"America/Los_Angeles","41/94/8":"America/Los_Angeles","42/94/8":"America/Los_Angeles","40/95/8":"America/Los_Angeles","41/95/8":"America/Los_Angeles","42/95/8":"America/Los_Angeles","43/95/8":"America/Los_Angeles","40/96/8":"America/Los_Angeles","41/96/8":"America/Los_Angeles","42/96/8":"America/Los_Angeles","43/96/8":"America/Los_Angeles","44/96/8":"America/Los_Angeles","45/96/8":"America/Los_Angeles","40/97/8":"America/Los_Angeles","41/97/8":"America/Los_Angeles","42/97/8":"America/Los_Angeles","43/97/8":"America/Los_Angeles","44/97/8":"America/Los_Angeles","45/97/8":"America/Los_Angeles","41/98/8":"America/Los_Angeles","42/98/8":"America/Los_Angeles","43/98/8":"America/Los_Angeles","44/98/8":"America/Los_Angeles","45/98/8":"America/Los_Angeles","42/99/8":"America/Los_Angeles","43/99/8":"America/Los_Angeles","44/99/8":"America/Los_Angeles","45/99/8":"America/Los_Angeles","42/100/8":"America/Los_Angeles","43/100/8":"America/Los_Angeles","44/100/8":"America/Los_Angeles","45/100/8":"America/Los_Angeles","43/101/8":"America/Los_Angeles","44/101/8":"America/Los_Angeles","45/101/8":"America/Los_Angeles","45/102/8":"America/Los_Angeles","40/87/8":"America/Vancouver","41/87/8":"America/Vancouver","42/87/8":"America/Vancouver","43/87/8":"America/Vancouver","39/88/8":"America/Vancouver","40/88/8":"America/Los_Angeles","39/89/8":"America/Los_Angeles","39/90/8":"America/Los_Angeles","39/91/8":"America/Los_Angeles","39/92/8":"America/Los_Angeles","39/93/8":"America/Los_Angeles","39/94/8":"America/Los_Angeles","39/95/8":"America/Los_Angeles","39/96/8":"America/Los_Angeles","39/97/8":"America/Los_Angeles","39/98/8":"America/Los_Angeles","40/98/8":"America/Los_Angeles","40/99/8":"America/Los_Angeles","41/99/8":"America/Los_Angeles","41/100/8":"America/Los_Angeles","46/100/8":"America/Los_Angeles","41/101/8":"America/Los_Angeles","42/101/8":"America/Los_Angeles","46/101/8":"America/Los_Angeles","42/102/8":"America/Los_Angeles","43/102/8":"America/Los_Angeles","44/102/8":"America/Los_Angeles","46/102/8":"America/Los_Angeles","42/103/8":"America/Los_Angeles","43/103/8":"America/Los_Angeles","44/103/8":"America/Los_Angeles","45/103/8":"America/Tijuana","101/134/8":"America/Recife","102/134/8":"America/Maceio","103/134/8":"America/Recife","102/135/8":"America/Maceio","66/117/8":"America/Tegucigalpa","67/117/8":"America/Tegucigalpa","68/117/8":"America/Managua","69/117/8":"America/Tegucigalpa","66/118/8":"America/Managua","67/118/8":"America/Managua","68/118/8":"America/Managua","65/119/8":"America/Managua","66/119/8":"America/Managua","68/119/8":"America/Managua","79/127/8":"America/Manaus","79/128/8":"America/Manaus","80/128/8":"America/Manaus","81/128/8":"America/Manaus","82/128/8":"America/Manaus","79/129/8":"America/Manaus","80/129/8":"America/Manaus","81/129/8":"America/Manaus","82/129/8":"America/Manaus","83/129/8":"America/Manaus","85/129/8":"America/Manaus","79/130/8":"America/Manaus","80/130/8":"America/Manaus","81/130/8":"America/Manaus","82/130/8":"America/Manaus","83/130/8":"America/Manaus","84/130/8":"America/Manaus","85/130/8":"America/Manaus","86/130/8":"America/Manaus","79/131/8":"America/Manaus","80/131/8":"America/Manaus","81/131/8":"America/Manaus","82/131/8":"America/Manaus","83/131/8":"America/Manaus","84/131/8":"America/Manaus","85/131/8":"America/Manaus","80/132/8":"America/Manaus","81/132/8":"America/Manaus","82/132/8":"America/Manaus","83/132/8":"America/Manaus","84/132/8":"America/Manaus","85/132/8":"America/Manaus","80/133/8":"America/Manaus","81/133/8":"America/Manaus","84/133/8":"America/Manaus","85/133/8":"America/Manaus","86/128/8":"America/Santarem","86/129/8":"America/Manaus","87/129/8":"America/Manaus","88/129/8":"America/Santarem","87/130/8":"America/Manaus","86/131/8":"America/Manaus","87/131/8":"America/Santarem","86/132/8":"America/Manaus","82/133/8":"America/Manaus","83/133/8":"America/Manaus","82/134/8":"America/Porto_Velho","83/134/8":"America/Porto_Velho","55/107/8":"America/Monterrey","55/108/8":"America/Monterrey","56/108/8":"America/Monterrey","57/109/8":"America/Monterrey","58/109/8":"America/Monterrey","59/109/8":"America/Matamoros","45/107/8":"America/Tijuana","46/107/8":"America/Mazatlan","46/108/8":"America/Mazatlan","47/108/8":"America/Mazatlan","48/108/8":"America/Mazatlan","45/109/8":"America/Mazatlan","47/109/8":"America/Mazatlan","48/109/8":"America/Mazatlan","49/109/8":"America/Mazatlan","50/109/8":"America/Mazatlan","48/110/8":"America/Mazatlan","49/110/8":"America/Mazatlan","50/110/8":"America/Mazatlan","51/110/8":"America/Mazatlan","52/110/8":"America/Mazatlan","49/111/8":"America/Mazatlan","50/111/8":"America/Mazatlan","52/111/8":"America/Mazatlan","53/111/8":"America/Mazatlan","51/112/8":"America/Mazatlan","54/112/8":"America/Mexico_City","87/89/8":"America/St_Johns","88/89/8":"America/St_Johns","87/90/8":"America/Miquelon","88/90/8":"America/St_Johns","62/111/8":"America/Merida","63/111/8":"America/Merida","64/111/8":"America/Merida","62/112/8":"America/Merida","63/112/8":"America/Merida","64/112/8":"America/Merida","62/113/8":"America/Merida","63/113/8":"America/Merida","62/114/8":"America/Merida","63/114/8":"America/Merida","34/80/8":"America/Sitka","55/111/8":"America/Mexico_City","55/112/8":"America/Mexico_City","56/112/8":"America/Mexico_City","57/112/8":"America/Mexico_City","54/113/8":"America/Mexico_City","55/113/8":"America/Mexico_City","56/113/8":"America/Mexico_City","57/113/8":"America/Mexico_City","58/113/8":"America/Mexico_City","55/114/8":"America/Mexico_City","56/114/8":"America/Mexico_City","57/114/8":"America/Mexico_City","58/114/8":"America/Mexico_City","57/115/8":"America/Mexico_City","58/115/8":"America/Mexico_City","59/115/8":"America/Mexico_City","60/115/8":"America/Mexico_City","61/115/8":"America/Mexico_City","54/109/8":"America/Monterrey","55/109/8":"America/Monterrey","56/109/8":"America/Monterrey","53/110/8":"America/Monterrey","54/110/8":"America/Mexico_City","55/110/8":"America/Mexico_City","56/110/8":"America/Mexico_City","54/111/8":"America/Mexico_City","56/111/8":"America/Mexico_City","57/111/8":"America/Monterrey","58/111/8":"America/Monterrey","58/112/8":"America/Mexico_City","59/112/8":"America/Mexico_City","49/113/8":"America/Mexico_City","59/113/8":"America/Mexico_City","46/114/8":"America/Mexico_City","48/114/8":"America/Mexico_City","49/114/8":"America/Mexico_City","53/114/8":"America/Mexico_City","54/114/8":"America/Mexico_City","59/114/8":"America/Mexico_City","60/114/8":"America/Mexico_City","61/114/8":"America/Mexico_City","54/115/8":"America/Mexico_City","55/115/8":"America/Mexico_City","56/115/8":"America/Mexico_City","56/116/8":"America/Mexico_City","57/116/8":"America/Mexico_City","58/116/8":"America/Mexico_City","59/116/8":"America/Mexico_City","60/116/8":"America/Mexico_City","61/116/8":"America/Mexico_City","61/117/8":"America/Mexico_City","80/90/8":"America/Moncton","81/90/8":"America/Moncton","79/88/8":"America/Montreal","80/88/8":"America/Montreal","81/88/8":"America/Montreal","82/88/8":"America/Montreal","78/89/8":"America/Montreal","79/89/8":"America/Moncton","80/89/8":"America/Moncton","81/89/8":"America/Moncton","79/90/8":"America/New_York","79/91/8":"America/New_York","80/91/8":"America/Moncton","53/109/8":"America/Monterrey","57/110/8":"America/Monterrey","58/110/8":"America/Monterrey","87/151/8":"America/Montevideo","87/152/8":"America/Montevideo","88/152/8":"America/Montevideo","87/153/8":"America/Montevideo","88/153/8":"America/Montevideo","88/150/8":"America/Sao_Paulo","88/151/8":"America/Montevideo","89/151/8":"America/Sao_Paulo","89/152/8":"America/Montevideo","90/152/8":"America/Sao_Paulo","89/153/8":"America/Montevideo","90/153/8":"America/Sao_Paulo","89/154/8":"America/Montevideo","90/154/8":"America/Montevideo","73/71/8":"America/Montreal","73/72/8":"America/Montreal","74/72/8":"America/Montreal","75/72/8":"America/Montreal","73/73/8":"America/Montreal","74/73/8":"America/Montreal","75/73/8":"America/Montreal","76/73/8":"America/Montreal","77/73/8":"America/Montreal","73/74/8":"America/Montreal","74/74/8":"America/Montreal","75/74/8":"America/Montreal","76/74/8":"America/Montreal","77/74/8":"America/Montreal","73/75/8":"America/Montreal","74/75/8":"America/Montreal","75/75/8":"America/Montreal","76/75/8":"America/Montreal","77/75/8":"America/Montreal","74/76/8":"America/Montreal","75/76/8":"America/Montreal","76/76/8":"America/Montreal","77/76/8":"America/Montreal","78/76/8":"America/Montreal","81/76/8":"America/Montreal","74/77/8":"America/Montreal","75/77/8":"America/Montreal","76/77/8":"America/Montreal","77/77/8":"America/Montreal","78/77/8":"America/Montreal","79/77/8":"America/Montreal","80/77/8":"America/Montreal","81/77/8":"America/Montreal","74/78/8":"America/Montreal","75/78/8":"America/Montreal","76/78/8":"America/Montreal","77/78/8":"America/Montreal","78/78/8":"America/Montreal","79/78/8":"America/Montreal","80/78/8":"America/Montreal","81/78/8":"America/Montreal","74/79/8":"America/Montreal","75/79/8":"America/Montreal","76/79/8":"America/Montreal","77/79/8":"America/Montreal","78/79/8":"America/Montreal","79/79/8":"America/Montreal","80/79/8":"America/Montreal","81/79/8":"America/Montreal","74/80/8":"America/Montreal","75/80/8":"America/Montreal","76/80/8":"America/Montreal","77/80/8":"America/Montreal","78/80/8":"America/Montreal","79/80/8":"America/Montreal","81/80/8":"America/Montreal","73/81/8":"America/Montreal","74/81/8":"America/Montreal","75/81/8":"America/Montreal","76/81/8":"America/Montreal","77/81/8":"America/Montreal","78/81/8":"America/Montreal","72/82/8":"America/Montreal","73/82/8":"America/Montreal","74/82/8":"America/Montreal","75/82/8":"America/Montreal","76/82/8":"America/Montreal","77/82/8":"America/Montreal","78/82/8":"America/Montreal","73/83/8":"America/Montreal","74/83/8":"America/Montreal","75/83/8":"America/Montreal","76/83/8":"America/Montreal","77/83/8":"America/Montreal","78/83/8":"America/Montreal","79/83/8":"America/Montreal","73/84/8":"America/Montreal","74/84/8":"America/Montreal","75/84/8":"America/Montreal","76/84/8":"America/Montreal","77/84/8":"America/Montreal","78/84/8":"America/Montreal","79/84/8":"America/Montreal","72/85/8":"America/Montreal","73/85/8":"America/Montreal","74/85/8":"America/Montreal","75/85/8":"America/Montreal","76/85/8":"America/Montreal","77/85/8":"America/Montreal","78/85/8":"America/Montreal","79/85/8":"America/Montreal","80/85/8":"America/Montreal","81/85/8":"America/Montreal","83/85/8":"America/Montreal","72/86/8":"America/Montreal","73/86/8":"America/Montreal","74/86/8":"America/Montreal","75/86/8":"America/Montreal","76/86/8":"America/Montreal","77/86/8":"America/Montreal","78/86/8":"America/Montreal","79/86/8":"America/Montreal","80/86/8":"America/Montreal","81/86/8":"America/Montreal","82/86/8":"America/Montreal","83/86/8":"America/Montreal","72/87/8":"America/Montreal","73/87/8":"America/Montreal","74/87/8":"America/Montreal","75/87/8":"America/Montreal","76/87/8":"America/Montreal","77/87/8":"America/Montreal","78/87/8":"America/Montreal","79/87/8":"America/Montreal","80/87/8":"America/Montreal","81/87/8":"America/Montreal","82/87/8":"America/Montreal","83/87/8":"America/Montreal","72/88/8":"America/Montreal","73/88/8":"America/Montreal","74/88/8":"America/Montreal","75/88/8":"America/Montreal","76/88/8":"America/Montreal","77/88/8":"America/Montreal","78/88/8":"America/Montreal","72/89/8":"America/Montreal","73/89/8":"America/Montreal","74/89/8":"America/Montreal","75/89/8":"America/Montreal","76/89/8":"America/Montreal","77/89/8":"America/Montreal","73/90/8":"America/Montreal","74/90/8":"America/Montreal","75/90/8":"America/Montreal","76/90/8":"America/Montreal","77/90/8":"America/Montreal","76/91/8":"America/Montreal","80/75/8":"America/Pangnirtung","80/76/8":"America/Montreal","71/86/8":"America/Montreal","71/87/8":"America/Montreal","71/88/8":"America/Montreal","71/89/8":"America/Montreal","71/90/8":"America/Toronto","72/90/8":"America/Montreal","78/90/8":"America/New_York","72/91/8":"America/Toronto","73/91/8":"America/Toronto","74/91/8":"America/Montreal","75/91/8":"America/Montreal","77/91/8":"America/Montreal","78/91/8":"America/New_York","74/92/8":"America/New_York","75/92/8":"America/New_York","76/92/8":"America/New_York","77/92/8":"America/New_York","72/108/8":"America/Nassau","72/109/8":"America/Nassau","72/110/8":"America/Nassau","73/110/8":"America/Nassau","74/111/8":"America/Nassau","71/107/8":"America/New_York","72/107/8":"America/Nassau","73/107/8":"America/Nassau","71/108/8":"America/Nassau","73/108/8":"America/Nassau","71/109/8":"America/Nassau","73/109/8":"America/Nassau","74/109/8":"America/Nassau","74/110/8":"America/Nassau","75/110/8":"America/Nassau","75/111/8":"America/Nassau","78/92/8":"America/New_York","74/93/8":"America/New_York","75/93/8":"America/New_York","76/93/8":"America/New_York","77/93/8":"America/New_York","72/94/8":"America/New_York","73/94/8":"America/New_York","74/94/8":"America/New_York","75/94/8":"America/New_York","76/94/8":"America/New_York","70/95/8":"America/New_York","71/95/8":"America/New_York","72/95/8":"America/New_York","73/95/8":"America/New_York","74/95/8":"America/New_York","75/95/8":"America/New_York","76/95/8":"America/New_York","68/96/8":"America/New_York","69/96/8":"America/New_York","70/96/8":"America/New_York","71/96/8":"America/New_York","72/96/8":"America/New_York","73/96/8":"America/New_York","74/96/8":"America/New_York","68/97/8":"America/New_York","69/97/8":"America/New_York","70/97/8":"America/New_York","71/97/8":"America/New_York","72/97/8":"America/New_York","73/97/8":"America/New_York","68/98/8":"America/New_York","69/98/8":"America/New_York","70/98/8":"America/New_York","71/98/8":"America/New_York","72/98/8":"America/New_York","73/98/8":"America/New_York","68/99/8":"America/New_York","69/99/8":"America/New_York","70/99/8":"America/New_York","71/99/8":"America/New_York","72/99/8":"America/New_York","73/99/8":"America/New_York","68/100/8":"America/New_York","69/100/8":"America/New_York","70/100/8":"America/New_York","71/100/8":"America/New_York","72/100/8":"America/New_York","73/100/8":"America/New_York","68/101/8":"America/New_York","69/101/8":"America/New_York","70/101/8":"America/New_York","71/101/8":"America/New_York","72/101/8":"America/New_York","68/102/8":"America/New_York","69/102/8":"America/New_York","70/102/8":"America/New_York","68/103/8":"America/New_York","69/103/8":"America/New_York","68/104/8":"America/New_York","69/104/8":"America/New_York","69/105/8":"America/New_York","70/108/8":"America/New_York","73/92/8":"America/Toronto","79/92/8":"America/New_York","71/93/8":"America/Toronto","72/93/8":"America/New_York","73/93/8":"America/New_York","78/93/8":"America/New_York","79/93/8":"America/New_York","70/94/8":"America/Toronto","71/94/8":"America/New_York","77/94/8":"America/New_York","78/94/8":"America/New_York","69/95/8":"America/New_York","77/95/8":"America/New_York","78/95/8":"America/New_York","75/96/8":"America/New_York","76/96/8":"America/New_York","77/96/8":"America/New_York","74/97/8":"America/New_York","75/97/8":"America/New_York","74/98/8":"America/New_York","74/99/8":"America/New_York","74/100/8":"America/New_York","73/101/8":"America/New_York","74/101/8":"America/New_York","71/102/8":"America/New_York","72/102/8":"America/New_York","73/102/8":"America/New_York","70/103/8":"America/New_York","71/103/8":"America/New_York","70/104/8":"America/New_York","68/105/8":"America/New_York","70/105/8":"America/New_York","67/106/8":"America/New_York","68/106/8":"America/New_York","69/106/8":"America/New_York","70/106/8":"America/New_York","68/107/8":"America/New_York","69/107/8":"America/New_York","70/107/8":"America/New_York","69/108/8":"America/New_York","68/109/8":"America/New_York","69/109/8":"America/New_York","70/109/8":"America/New_York","65/87/8":"America/Toronto","11/70/8":"America/Nome","10/71/8":"America/Nome","11/71/8":"America/Nome","11/72/8":"America/Nome","11/73/8":"America/Nome","10/60/8":"America/Nome","11/60/8":"America/Nome","11/61/8":"America/Nome","10/64/8":"America/Nome","9/65/8":"America/Nome","10/65/8":"America/Nome","11/65/8":"America/Nome","10/66/8":"America/Nome","11/66/8":"America/Nome","11/57/8":"America/Nome","11/58/8":"America/Nome","9/59/8":"America/Nome","10/59/8":"America/Nome","11/59/8":"America/Nome","8/60/8":"America/Nome","9/60/8":"America/Nome","9/61/8":"America/Nome","10/61/8":"America/Nome","10/62/8":"America/Nome","11/62/8":"America/Nome","9/63/8":"America/Nome","10/63/8":"America/Nome","11/63/8":"America/Nome","7/64/8":"Asia/Anadyr","8/64/8":"America/Nome","9/64/8":"America/Nome","11/64/8":"America/Nome","7/65/8":"Asia/Anadyr","8/65/8":"America/Nome","8/66/8":"America/Nome","9/66/8":"America/Nome","9/67/8":"America/Nome","10/67/8":"America/Nome","11/67/8":"America/Nome","5/68/8":"America/Nome","6/68/8":"America/Nome","7/68/8":"America/Nome","11/68/8":"America/Nome","5/69/8":"America/Nome","6/69/8":"America/Nome","7/69/8":"America/Nome","8/69/8":"America/Nome","10/69/8":"America/Nome","11/69/8":"America/Nome","6/70/8":"America/Nome","7/70/8":"America/Nome","8/70/8":"America/Nome","9/70/8":"America/Nome","10/70/8":"America/Nome","9/71/8":"America/Nome","9/72/8":"America/Nome","10/72/8":"America/Nome","4/73/8":"America/Nome","5/73/8":"America/Nome","8/73/8":"America/Nome","9/73/8":"America/Nome","10/73/8":"America/Nome","4/74/8":"America/Nome","5/74/8":"America/Nome","8/74/8":"America/Nome","9/74/8":"America/Nome","10/74/8":"America/Nome","11/74/8":"America/Nome","11/75/8":"America/Nome","6/77/8":"America/Nome","7/77/8":"America/Nome","6/78/8":"America/Nome","7/78/8":"America/Nome","7/79/8":"America/Nome","10/80/8":"America/Nome","11/80/8":"America/Nome","9/81/8":"America/Nome","10/81/8":"America/Nome","11/81/8":"America/Nome","7/82/8":"America/Nome","8/82/8":"America/Nome","9/82/8":"America/Nome","10/82/8":"America/Nome","11/82/8":"America/Nome","12/82/8":"America/Nome","8/83/8":"America/Nome","9/83/8":"America/Nome","104/130/8":"America/Noronha","105/130/8":"America/Noronha","71/120/8":"America/Panama","72/120/8":"America/Panama","70/121/8":"America/Panama","71/121/8":"America/Panama","70/122/8":"America/Panama","71/122/8":"America/Panama","80/60/8":"America/Pangnirtung","80/61/8":"America/Pangnirtung","81/61/8":"America/Pangnirtung","80/62/8":"America/Pangnirtung","81/62/8":"America/Pangnirtung","82/62/8":"America/Pangnirtung","80/63/8":"America/Pangnirtung","81/63/8":"America/Pangnirtung","82/63/8":"America/Pangnirtung","83/63/8":"America/Pangnirtung","80/64/8":"America/Pangnirtung","81/64/8":"America/Pangnirtung","82/64/8":"America/Pangnirtung","83/64/8":"America/Pangnirtung","80/65/8":"America/Pangnirtung","81/65/8":"America/Pangnirtung","82/65/8":"America/Pangnirtung","80/66/8":"America/Pangnirtung","81/66/8":"America/Pangnirtung","82/66/8":"America/Pangnirtung","80/67/8":"America/Pangnirtung","81/67/8":"America/Pangnirtung","80/68/8":"America/Pangnirtung","81/68/8":"America/Pangnirtung","80/69/8":"America/Pangnirtung","81/69/8":"America/Pangnirtung","80/70/8":"America/Pangnirtung","81/70/8":"America/Pangnirtung","80/71/8":"America/Pangnirtung","81/71/8":"America/Pangnirtung","80/72/8":"America/Pangnirtung","81/72/8":"America/Pangnirtung","80/73/8":"America/Pangnirtung","80/74/8":"America/Pangnirtung","80/14/8":"America/Pangnirtung","81/14/8":"America/Pangnirtung","82/14/8":"America/Pangnirtung","80/15/8":"America/Pangnirtung","81/15/8":"America/Pangnirtung","82/15/8":"America/Pangnirtung","83/15/8":"America/Pangnirtung","80/16/8":"America/Pangnirtung","81/16/8":"America/Pangnirtung","82/16/8":"America/Pangnirtung","83/16/8":"America/Pangnirtung","80/17/8":"America/Pangnirtung","81/17/8":"America/Pangnirtung","82/17/8":"America/Pangnirtung","83/17/8":"America/Pangnirtung","84/17/8":"America/Pangnirtung","80/18/8":"America/Pangnirtung","81/18/8":"America/Pangnirtung","82/18/8":"America/Pangnirtung","83/18/8":"America/Pangnirtung","80/19/8":"America/Pangnirtung","81/19/8":"America/Pangnirtung","82/19/8":"America/Pangnirtung","83/19/8":"America/Pangnirtung","80/20/8":"America/Pangnirtung","81/20/8":"America/Pangnirtung","82/20/8":"America/Pangnirtung","80/21/8":"America/Pangnirtung","81/21/8":"America/Pangnirtung","80/22/8":"America/Pangnirtung","81/22/8":"America/Pangnirtung","80/23/8":"America/Pangnirtung","80/12/8":"America/Pangnirtung","80/13/8":"America/Pangnirtung","81/13/8":"America/Pangnirtung","82/13/8":"America/Pangnirtung","83/13/8":"America/Pangnirtung","83/14/8":"America/Pangnirtung","84/14/8":"America/Pangnirtung","84/15/8":"America/Pangnirtung","84/16/8":"America/Pangnirtung","85/16/8":"America/Pangnirtung","80/56/8":"America/Pangnirtung","80/57/8":"America/Pangnirtung","80/58/8":"America/Pangnirtung","80/59/8":"America/Pangnirtung","81/59/8":"America/Pangnirtung","81/60/8":"America/Pangnirtung","82/60/8":"America/Pangnirtung","82/61/8":"America/Pangnirtung","83/61/8":"America/Pangnirtung","83/62/8":"America/Pangnirtung","84/62/8":"America/Pangnirtung","84/63/8":"America/Pangnirtung","84/64/8":"America/Pangnirtung","83/65/8":"America/Pangnirtung","84/65/8":"America/Pangnirtung","83/66/8":"America/Pangnirtung","82/67/8":"America/Pangnirtung","83/67/8":"America/Pangnirtung","82/68/8":"America/Pangnirtung","82/69/8":"America/Pangnirtung","83/69/8":"America/Pangnirtung","82/70/8":"America/Pangnirtung","83/70/8":"America/Pangnirtung","82/71/8":"America/Pangnirtung","82/72/8":"America/Pangnirtung","88/124/8":"America/Paramaribo","88/125/8":"America/Paramaribo","88/123/8":"America/Paramaribo","47/100/8":"America/Phoenix","47/101/8":"America/Phoenix","47/102/8":"America/Phoenix","48/102/8":"America/Phoenix","49/102/8":"America/Phoenix","48/103/8":"America/Phoenix","49/103/8":"America/Phoenix","76/113/8":"America/Port-au-Prince","77/113/8":"America/Santo_Domingo","74/114/8":"America/Port-au-Prince","75/114/8":"America/Port-au-Prince","76/114/8":"America/Port-au-Prince","77/114/8":"America/Santo_Domingo","75/115/8":"America/Port-au-Prince","76/115/8":"America/Santo_Domingo","85/119/8":"America/Port_of_Spain","85/120/8":"America/Port_of_Spain","82/135/8":"America/Porto_Velho","83/135/8":"America/Porto_Velho","83/136/8":"America/Porto_Velho","84/136/8":"America/Porto_Velho","79/114/8":"America/Santo_Domingo","80/114/8":"America/Puerto_Rico","81/114/8":"America/Puerto_Rico","79/115/8":"America/Puerto_Rico","80/115/8":"America/Puerto_Rico","81/115/8":"America/St_Thomas","66/17/8":"America/Rankin_Inlet","66/18/8":"America/Rankin_Inlet","64/19/8":"America/Rankin_Inlet","65/19/8":"America/Rankin_Inlet","66/19/8":"America/Rankin_Inlet","63/20/8":"America/Rankin_Inlet","64/20/8":"America/Rankin_Inlet","65/20/8":"America/Rankin_Inlet","66/20/8":"America/Rankin_Inlet","62/21/8":"America/Rankin_Inlet","63/21/8":"America/Rankin_Inlet","64/21/8":"America/Rankin_Inlet","65/21/8":"America/Rankin_Inlet","66/21/8":"America/Rankin_Inlet","61/22/8":"America/Rankin_Inlet","62/22/8":"America/Rankin_Inlet","63/22/8":"America/Rankin_Inlet","64/22/8":"America/Rankin_Inlet","65/22/8":"America/Rankin_Inlet","66/22/8":"America/Rankin_Inlet","60/23/8":"America/Rankin_Inlet","61/23/8":"America/Rankin_Inlet","62/23/8":"America/Rankin_Inlet","63/23/8":"America/Rankin_Inlet","64/23/8":"America/Rankin_Inlet","65/23/8":"America/Rankin_Inlet","66/23/8":"America/Rankin_Inlet","60/24/8":"America/Rankin_Inlet","61/24/8":"America/Rankin_Inlet","62/24/8":"America/Rankin_Inlet","63/24/8":"America/Rankin_Inlet","64/24/8":"America/Rankin_Inlet","65/24/8":"America/Rankin_Inlet","66/24/8":"America/Rankin_Inlet","60/25/8":"America/Rankin_Inlet","61/25/8":"America/Rankin_Inlet","62/25/8":"America/Rankin_Inlet","63/25/8":"America/Rankin_Inlet","64/25/8":"America/Rankin_Inlet","65/25/8":"America/Rankin_Inlet","66/25/8":"America/Rankin_Inlet","59/26/8":"America/Rankin_Inlet","60/26/8":"America/Rankin_Inlet","61/26/8":"America/Rankin_Inlet","62/26/8":"America/Rankin_Inlet","63/26/8":"America/Rankin_Inlet","64/26/8":"America/Rankin_Inlet","65/26/8":"America/Rankin_Inlet","66/26/8":"America/Rankin_Inlet","58/27/8":"America/Rankin_Inlet","59/27/8":"America/Rankin_Inlet","60/27/8":"America/Rankin_Inlet","61/27/8":"America/Rankin_Inlet","62/27/8":"America/Rankin_Inlet","63/27/8":"America/Rankin_Inlet","64/27/8":"America/Rankin_Inlet","65/27/8":"America/Rankin_Inlet","66/27/8":"America/Rankin_Inlet","56/28/8":"America/Rankin_Inlet","57/28/8":"America/Rankin_Inlet","58/28/8":"America/Rankin_Inlet","59/28/8":"America/Rankin_Inlet","60/28/8":"America/Rankin_Inlet","61/28/8":"America/Rankin_Inlet","62/28/8":"America/Rankin_Inlet","63/28/8":"America/Rankin_Inlet","64/28/8":"America/Rankin_Inlet","65/28/8":"America/Rankin_Inlet","66/28/8":"America/Rankin_Inlet","56/29/8":"America/Rankin_Inlet","57/29/8":"America/Rankin_Inlet","58/29/8":"America/Rankin_Inlet","59/29/8":"America/Rankin_Inlet","60/29/8":"America/Rankin_Inlet","61/29/8":"America/Rankin_Inlet","62/29/8":"America/Rankin_Inlet","63/29/8":"America/Rankin_Inlet","64/29/8":"America/Rankin_Inlet","65/29/8":"America/Rankin_Inlet","66/29/8":"America/Rankin_Inlet","56/30/8":"America/Rankin_Inlet","57/30/8":"America/Rankin_Inlet","58/30/8":"America/Rankin_Inlet","59/30/8":"America/Rankin_Inlet","60/30/8":"America/Rankin_Inlet","61/30/8":"America/Rankin_Inlet","62/30/8":"America/Rankin_Inlet","63/30/8":"America/Rankin_Inlet","64/30/8":"America/Rankin_Inlet","65/30/8":"America/Rankin_Inlet","66/30/8":"America/Rankin_Inlet","56/31/8":"America/Rankin_Inlet","57/31/8":"America/Rankin_Inlet","58/31/8":"America/Rankin_Inlet","59/31/8":"America/Rankin_Inlet","60/31/8":"America/Rankin_Inlet","61/31/8":"America/Rankin_Inlet","62/31/8":"America/Rankin_Inlet","63/31/8":"America/Rankin_Inlet","64/31/8":"America/Rankin_Inlet","65/31/8":"America/Rankin_Inlet","66/31/8":"America/Rankin_Inlet","56/32/8":"America/Rankin_Inlet","57/32/8":"America/Rankin_Inlet","58/32/8":"America/Rankin_Inlet","59/32/8":"America/Rankin_Inlet","60/32/8":"America/Rankin_Inlet","61/32/8":"America/Rankin_Inlet","62/32/8":"America/Rankin_Inlet","63/32/8":"America/Rankin_Inlet","64/32/8":"America/Rankin_Inlet","65/32/8":"America/Rankin_Inlet","66/32/8":"America/Rankin_Inlet","56/33/8":"America/Rankin_Inlet","57/33/8":"America/Rankin_Inlet","58/33/8":"America/Rankin_Inlet","59/33/8":"America/Rankin_Inlet","60/33/8":"America/Rankin_Inlet","61/33/8":"America/Rankin_Inlet","62/33/8":"America/Rankin_Inlet","63/33/8":"America/Rankin_Inlet","64/33/8":"America/Rankin_Inlet","65/33/8":"America/Rankin_Inlet","66/33/8":"America/Rankin_Inlet","56/34/8":"America/Rankin_Inlet","57/34/8":"America/Rankin_Inlet","58/34/8":"America/Rankin_Inlet","59/34/8":"America/Rankin_Inlet","60/34/8":"America/Rankin_Inlet","61/34/8":"America/Rankin_Inlet","62/34/8":"America/Rankin_Inlet","63/34/8":"America/Rankin_Inlet","64/34/8":"America/Rankin_Inlet","65/34/8":"America/Rankin_Inlet","66/34/8":"America/Rankin_Inlet","56/35/8":"America/Rankin_Inlet","57/35/8":"America/Rankin_Inlet","58/35/8":"America/Rankin_Inlet","59/35/8":"America/Rankin_Inlet","60/35/8":"America/Rankin_Inlet","61/35/8":"America/Rankin_Inlet","62/35/8":"America/Rankin_Inlet","63/35/8":"America/Rankin_Inlet","64/35/8":"America/Rankin_Inlet","65/35/8":"America/Rankin_Inlet","66/35/8":"America/Rankin_Inlet","56/36/8":"America/Rankin_Inlet","57/36/8":"America/Rankin_Inlet","58/36/8":"America/Rankin_Inlet","59/36/8":"America/Rankin_Inlet","60/36/8":"America/Rankin_Inlet","61/36/8":"America/Rankin_Inlet","62/36/8":"America/Rankin_Inlet","63/36/8":"America/Rankin_Inlet","64/36/8":"America/Rankin_Inlet","65/36/8":"America/Rankin_Inlet","66/36/8":"America/Rankin_Inlet","56/37/8":"America/Rankin_Inlet","57/37/8":"America/Rankin_Inlet","58/37/8":"America/Rankin_Inlet","59/37/8":"America/Rankin_Inlet","60/37/8":"America/Rankin_Inlet","61/37/8":"America/Rankin_Inlet","62/37/8":"America/Rankin_Inlet","63/37/8":"America/Rankin_Inlet","64/37/8":"America/Rankin_Inlet","65/37/8":"America/Rankin_Inlet","66/37/8":"America/Rankin_Inlet","56/38/8":"America/Rankin_Inlet","57/38/8":"America/Rankin_Inlet","58/38/8":"America/Rankin_Inlet","59/38/8":"America/Rankin_Inlet","60/38/8":"America/Rankin_Inlet","61/38/8":"America/Rankin_Inlet","62/38/8":"America/Rankin_Inlet","63/38/8":"America/Rankin_Inlet","64/38/8":"America/Rankin_Inlet","65/38/8":"America/Rankin_Inlet","66/38/8":"America/Rankin_Inlet","56/39/8":"America/Rankin_Inlet","57/39/8":"America/Rankin_Inlet","58/39/8":"America/Rankin_Inlet","59/39/8":"America/Rankin_Inlet","60/39/8":"America/Rankin_Inlet","61/39/8":"America/Rankin_Inlet","62/39/8":"America/Rankin_Inlet","63/39/8":"America/Rankin_Inlet","64/39/8":"America/Rankin_Inlet","65/39/8":"America/Rankin_Inlet","66/39/8":"America/Rankin_Inlet","56/40/8":"America/Rankin_Inlet","57/40/8":"America/Rankin_Inlet","58/40/8":"America/Rankin_Inlet","59/40/8":"America/Rankin_Inlet","60/40/8":"America/Rankin_Inlet","61/40/8":"America/Rankin_Inlet","62/40/8":"America/Rankin_Inlet","63/40/8":"America/Rankin_Inlet","64/40/8":"America/Rankin_Inlet","65/40/8":"America/Rankin_Inlet","66/40/8":"America/Rankin_Inlet","56/41/8":"America/Rankin_Inlet","57/41/8":"America/Rankin_Inlet","58/41/8":"America/Rankin_Inlet","59/41/8":"America/Rankin_Inlet","60/41/8":"America/Rankin_Inlet","61/41/8":"America/Rankin_Inlet","62/41/8":"America/Rankin_Inlet","63/41/8":"America/Rankin_Inlet","64/41/8":"America/Rankin_Inlet","65/41/8":"America/Rankin_Inlet","66/41/8":"America/Rankin_Inlet","56/42/8":"America/Rankin_Inlet","57/42/8":"America/Rankin_Inlet","58/42/8":"America/Rankin_Inlet","59/42/8":"America/Rankin_Inlet","60/42/8":"America/Rankin_Inlet","61/42/8":"America/Rankin_Inlet","62/42/8":"America/Rankin_Inlet","63/42/8":"America/Rankin_Inlet","64/42/8":"America/Rankin_Inlet","65/42/8":"America/Rankin_Inlet","66/42/8":"America/Rankin_Inlet","56/43/8":"America/Rankin_Inlet","57/43/8":"America/Rankin_Inlet","58/43/8":"America/Rankin_Inlet","62/43/8":"America/Rankin_Inlet","63/43/8":"America/Rankin_Inlet","64/43/8":"America/Rankin_Inlet","65/43/8":"America/Rankin_Inlet","66/43/8":"America/Rankin_Inlet","56/44/8":"America/Rankin_Inlet","57/44/8":"America/Rankin_Inlet","58/44/8":"America/Rankin_Inlet","62/44/8":"America/Rankin_Inlet","63/44/8":"America/Rankin_Inlet","64/44/8":"America/Rankin_Inlet","65/44/8":"America/Rankin_Inlet","66/44/8":"America/Rankin_Inlet","56/45/8":"America/Rankin_Inlet","57/45/8":"America/Rankin_Inlet","58/45/8":"America/Rankin_Inlet","62/45/8":"America/Rankin_Inlet","63/45/8":"America/Rankin_Inlet","64/45/8":"America/Rankin_Inlet","65/45/8":"America/Rankin_Inlet","66/45/8":"America/Rankin_Inlet","56/46/8":"America/Rankin_Inlet","57/46/8":"America/Rankin_Inlet","58/46/8":"America/Rankin_Inlet","62/46/8":"America/Rankin_Inlet","63/46/8":"America/Rankin_Inlet","64/46/8":"America/Rankin_Inlet","65/46/8":"America/Rankin_Inlet","66/46/8":"America/Rankin_Inlet","56/47/8":"America/Rankin_Inlet","57/47/8":"America/Rankin_Inlet","58/47/8":"America/Rankin_Inlet","59/47/8":"America/Rankin_Inlet","60/47/8":"America/Rankin_Inlet","61/47/8":"America/Rankin_Inlet","62/47/8":"America/Rankin_Inlet","63/47/8":"America/Rankin_Inlet","64/47/8":"America/Rankin_Inlet","65/47/8":"America/Rankin_Inlet","66/47/8":"America/Rankin_Inlet","56/48/8":"America/Rankin_Inlet","57/48/8":"America/Rankin_Inlet","58/48/8":"America/Rankin_Inlet","59/48/8":"America/Rankin_Inlet","60/48/8":"America/Rankin_Inlet","61/48/8":"America/Rankin_Inlet","62/48/8":"America/Rankin_Inlet","63/48/8":"America/Rankin_Inlet","64/48/8":"America/Rankin_Inlet","65/48/8":"America/Rankin_Inlet","66/48/8":"America/Rankin_Inlet","57/49/8":"America/Rankin_Inlet","58/49/8":"America/Rankin_Inlet","59/49/8":"America/Rankin_Inlet","60/49/8":"America/Rankin_Inlet","61/49/8":"America/Rankin_Inlet","62/49/8":"America/Rankin_Inlet","63/49/8":"America/Rankin_Inlet","64/49/8":"America/Rankin_Inlet","65/49/8":"America/Rankin_Inlet","66/49/8":"America/Rankin_Inlet","59/50/8":"America/Rankin_Inlet","60/50/8":"America/Rankin_Inlet","61/50/8":"America/Rankin_Inlet","62/50/8":"America/Rankin_Inlet","63/50/8":"America/Rankin_Inlet","64/50/8":"America/Rankin_Inlet","65/50/8":"America/Rankin_Inlet","66/50/8":"America/Rankin_Inlet","61/51/8":"America/Rankin_Inlet","62/51/8":"America/Rankin_Inlet","63/51/8":"America/Rankin_Inlet","64/51/8":"America/Rankin_Inlet","65/51/8":"America/Rankin_Inlet","66/51/8":"America/Rankin_Inlet","63/52/8":"America/Rankin_Inlet","64/52/8":"America/Rankin_Inlet","65/52/8":"America/Rankin_Inlet","66/52/8":"America/Rankin_Inlet","63/53/8":"America/Rankin_Inlet","64/53/8":"America/Rankin_Inlet","65/53/8":"America/Rankin_Inlet","66/53/8":"America/Rankin_Inlet","64/54/8":"America/Rankin_Inlet","65/54/8":"America/Rankin_Inlet","66/54/8":"America/Rankin_Inlet","64/55/8":"America/Rankin_Inlet","65/55/8":"America/Rankin_Inlet","66/55/8":"America/Rankin_Inlet","65/56/8":"America/Rankin_Inlet","66/56/8":"America/Rankin_Inlet","65/57/8":"America/Rankin_Inlet","66/57/8":"America/Rankin_Inlet","65/58/8":"America/Rankin_Inlet","66/58/8":"America/Rankin_Inlet","65/59/8":"America/Rankin_Inlet","66/59/8":"America/Rankin_Inlet","65/60/8":"America/Rankin_Inlet","66/60/8":"America/Rankin_Inlet","65/61/8":"America/Rankin_Inlet","66/61/8":"America/Rankin_Inlet","65/62/8":"America/Rankin_Inlet","66/62/8":"America/Rankin_Inlet","65/63/8":"America/Rankin_Inlet","66/63/8":"America/Rankin_Inlet","56/64/8":"America/Rankin_Inlet","57/64/8":"America/Rankin_Inlet","58/64/8":"America/Rankin_Inlet","59/64/8":"America/Rankin_Inlet","60/64/8":"America/Rankin_Inlet","61/64/8":"America/Rankin_Inlet","62/64/8":"America/Rankin_Inlet","63/64/8":"America/Rankin_Inlet","64/64/8":"America/Rankin_Inlet","65/64/8":"America/Rankin_Inlet","66/64/8":"America/Rankin_Inlet","56/65/8":"America/Rankin_Inlet","57/65/8":"America/Rankin_Inlet","58/65/8":"America/Rankin_Inlet","59/65/8":"America/Rankin_Inlet","60/65/8":"America/Rankin_Inlet","61/65/8":"America/Rankin_Inlet","62/65/8":"America/Rankin_Inlet","63/65/8":"America/Rankin_Inlet","64/65/8":"America/Rankin_Inlet","65/65/8":"America/Rankin_Inlet","56/66/8":"America/Rankin_Inlet","57/66/8":"America/Rankin_Inlet","58/66/8":"America/Rankin_Inlet","59/66/8":"America/Rankin_Inlet","60/66/8":"America/Rankin_Inlet","61/66/8":"America/Rankin_Inlet","62/66/8":"America/Rankin_Inlet","63/66/8":"America/Rankin_Inlet","64/66/8":"America/Rankin_Inlet","65/66/8":"America/Rankin_Inlet","56/67/8":"America/Rankin_Inlet","57/67/8":"America/Rankin_Inlet","58/67/8":"America/Rankin_Inlet","59/67/8":"America/Rankin_Inlet","60/67/8":"America/Rankin_Inlet","61/67/8":"America/Rankin_Inlet","62/67/8":"America/Rankin_Inlet","63/67/8":"America/Rankin_Inlet","64/67/8":"America/Rankin_Inlet","65/67/8":"America/Rankin_Inlet","56/68/8":"America/Rankin_Inlet","57/68/8":"America/Rankin_Inlet","58/68/8":"America/Rankin_Inlet","59/68/8":"America/Rankin_Inlet","60/68/8":"America/Rankin_Inlet","61/68/8":"America/Rankin_Inlet","62/68/8":"America/Rankin_Inlet","63/68/8":"America/Rankin_Inlet","64/68/8":"America/Rankin_Inlet","56/69/8":"America/Rankin_Inlet","57/69/8":"America/Rankin_Inlet","58/69/8":"America/Rankin_Inlet","59/69/8":"America/Rankin_Inlet","60/69/8":"America/Rankin_Inlet","61/69/8":"America/Rankin_Inlet","62/69/8":"America/Rankin_Inlet","63/69/8":"America/Rankin_Inlet","64/69/8":"America/Rankin_Inlet","65/69/8":"America/Rankin_Inlet","56/70/8":"America/Rankin_Inlet","57/70/8":"America/Rankin_Inlet","58/70/8":"America/Rankin_Inlet","59/70/8":"America/Rankin_Inlet","60/70/8":"America/Rankin_Inlet","61/70/8":"America/Rankin_Inlet","62/70/8":"America/Rankin_Inlet","63/70/8":"America/Rankin_Inlet","64/70/8":"America/Rankin_Inlet","65/70/8":"America/Rankin_Inlet","66/70/8":"America/Rankin_Inlet","56/71/8":"America/Rankin_Inlet","57/71/8":"America/Rankin_Inlet","58/71/8":"America/Rankin_Inlet","59/71/8":"America/Rankin_Inlet","60/71/8":"America/Rankin_Inlet","61/71/8":"America/Rankin_Inlet","62/71/8":"America/Rankin_Inlet","63/71/8":"America/Rankin_Inlet","64/71/8":"America/Rankin_Inlet","65/71/8":"America/Rankin_Inlet","66/71/8":"America/Rankin_Inlet","56/72/8":"America/Rankin_Inlet","57/72/8":"America/Rankin_Inlet","58/72/8":"America/Rankin_Inlet","59/72/8":"America/Rankin_Inlet","60/72/8":"America/Rankin_Inlet","61/72/8":"America/Rankin_Inlet","62/72/8":"America/Rankin_Inlet","63/72/8":"America/Rankin_Inlet","64/72/8":"America/Rankin_Inlet","65/72/8":"America/Rankin_Inlet","66/72/8":"America/Rankin_Inlet","56/73/8":"America/Rankin_Inlet","57/73/8":"America/Rankin_Inlet","58/73/8":"America/Rankin_Inlet","59/73/8":"America/Rankin_Inlet","60/73/8":"America/Rankin_Inlet","61/73/8":"America/Rankin_Inlet","62/73/8":"America/Rankin_Inlet","63/73/8":"America/Rankin_Inlet","64/73/8":"America/Rankin_Inlet","65/73/8":"America/Rankin_Inlet","66/73/8":"America/Rankin_Inlet","61/74/8":"America/Rankin_Inlet","62/74/8":"America/Rankin_Inlet","63/74/8":"America/Rankin_Inlet","64/74/8":"America/Rankin_Inlet","65/74/8":"America/Rankin_Inlet","66/74/8":"America/Rankin_Inlet","62/75/8":"America/Rankin_Inlet","63/75/8":"America/Rankin_Inlet","64/75/8":"America/Rankin_Inlet","65/75/8":"America/Rankin_Inlet","66/75/8":"America/Rankin_Inlet","62/76/8":"America/Rankin_Inlet","63/76/8":"America/Rankin_Inlet","64/76/8":"America/Rankin_Inlet","65/76/8":"America/Rankin_Inlet","66/76/8":"America/Rankin_Inlet","63/77/8":"America/Rankin_Inlet","64/77/8":"America/Rankin_Inlet","65/77/8":"America/Rankin_Inlet","66/77/8":"America/Rankin_Inlet","66/78/8":"America/Rankin_Inlet","66/15/8":"America/Rankin_Inlet","65/16/8":"America/Rankin_Inlet","66/16/8":"America/Rankin_Inlet","65/17/8":"America/Rankin_Inlet","63/18/8":"America/Rankin_Inlet","64/18/8":"America/Rankin_Inlet","65/18/8":"America/Rankin_Inlet","62/19/8":"America/Rankin_Inlet","63/19/8":"America/Rankin_Inlet","61/20/8":"America/Rankin_Inlet","62/20/8":"America/Rankin_Inlet","60/21/8":"America/Rankin_Inlet","61/21/8":"America/Rankin_Inlet","59/22/8":"America/Rankin_Inlet","60/22/8":"America/Rankin_Inlet","59/23/8":"America/Rankin_Inlet","59/24/8":"America/Rankin_Inlet","58/25/8":"America/Rankin_Inlet","59/25/8":"America/Rankin_Inlet","57/26/8":"America/Rankin_Inlet","58/26/8":"America/Rankin_Inlet","55/27/8":"America/Rankin_Inlet","56/27/8":"America/Rankin_Inlet","57/27/8":"America/Rankin_Inlet","59/43/8":"America/Rankin_Inlet","60/43/8":"America/Rankin_Inlet","61/43/8":"America/Rankin_Inlet","59/44/8":"America/Rankin_Inlet","61/44/8":"America/Rankin_Inlet","59/45/8":"America/Resolute","61/45/8":"America/Resolute","59/46/8":"America/Rankin_Inlet","60/46/8":"America/Rankin_Inlet","61/46/8":"America/Rankin_Inlet","55/68/8":"America/Rankin_Inlet","55/69/8":"America/Rankin_Inlet","55/70/8":"America/Rankin_Inlet","55/71/8":"America/Rankin_Inlet","55/72/8":"America/Rankin_Inlet","55/73/8":"America/Rankin_Inlet","55/74/8":"America/Winnipeg","56/74/8":"America/Winnipeg","57/74/8":"America/Winnipeg","58/74/8":"America/Winnipeg","59/74/8":"America/Winnipeg","60/74/8":"America/Rankin_Inlet","60/75/8":"America/Winnipeg","61/75/8":"America/Rankin_Inlet","60/76/8":"America/Winnipeg","61/76/8":"America/Winnipeg","61/77/8":"America/Winnipeg","62/77/8":"America/Rankin_Inlet","62/78/8":"America/Winnipeg","63/78/8":"America/Winnipeg","64/78/8":"America/Rankin_Inlet","65/78/8":"America/Rankin_Inlet","65/79/8":"America/Toronto","66/79/8":"America/Rankin_Inlet","66/80/8":"America/Toronto","50/75/8":"America/Regina","51/75/8":"America/Regina","52/75/8":"America/Regina","53/75/8":"America/Regina","54/75/8":"America/Regina","50/76/8":"America/Regina","51/76/8":"America/Regina","52/76/8":"America/Regina","53/76/8":"America/Regina","54/76/8":"America/Regina","50/77/8":"America/Regina","51/77/8":"America/Regina","52/77/8":"America/Regina","53/77/8":"America/Regina","54/77/8":"America/Regina","50/78/8":"America/Regina","51/78/8":"America/Regina","52/78/8":"America/Regina","53/78/8":"America/Regina","54/78/8":"America/Regina","50/79/8":"America/Regina","51/79/8":"America/Regina","52/79/8":"America/Regina","53/79/8":"America/Regina","54/79/8":"America/Regina","50/80/8":"America/Regina","51/80/8":"America/Regina","52/80/8":"America/Regina","53/80/8":"America/Regina","54/80/8":"America/Regina","50/81/8":"America/Regina","51/81/8":"America/Regina","52/81/8":"America/Regina","53/81/8":"America/Regina","54/81/8":"America/Regina","51/82/8":"America/Regina","52/82/8":"America/Regina","53/82/8":"America/Regina","54/82/8":"America/Regina","51/83/8":"America/Regina","52/83/8":"America/Regina","53/83/8":"America/Regina","54/83/8":"America/Regina","50/84/8":"America/Regina","51/84/8":"America/Regina","52/84/8":"America/Regina","53/84/8":"America/Regina","54/84/8":"America/Regina","50/85/8":"America/Regina","51/85/8":"America/Regina","52/85/8":"America/Regina","53/85/8":"America/Regina","54/85/8":"America/Regina","50/86/8":"America/Regina","52/86/8":"America/Regina","53/86/8":"America/Regina","54/86/8":"America/Regina","50/74/8":"America/Regina","51/74/8":"America/Regina","52/74/8":"America/Regina","53/74/8":"America/Regina","54/74/8":"America/Regina","55/75/8":"America/Winnipeg","55/76/8":"America/Winnipeg","55/77/8":"America/Winnipeg","55/78/8":"America/Winnipeg","55/79/8":"America/Winnipeg","55/80/8":"America/Winnipeg","55/81/8":"America/Winnipeg","55/82/8":"America/Regina","55/83/8":"America/Regina","55/84/8":"America/Regina","55/85/8":"America/Regina","51/86/8":"America/Regina","55/86/8":"America/Regina","60/44/8":"America/Resolute","60/45/8":"America/Resolute","87/127/8":"America/Santarem","88/127/8":"America/Santarem","87/128/8":"America/Santarem","88/128/8":"America/Santarem","89/128/8":"America/Santarem","89/129/8":"America/Santarem","88/130/8":"America/Santarem","89/130/8":"America/Santarem","88/131/8":"America/Santarem","89/131/8":"America/Santarem","87/132/8":"America/Santarem","88/132/8":"America/Santarem","89/132/8":"America/Santarem","88/133/8":"America/Santarem","89/133/8":"America/Santarem","78/142/8":"America/Santiago","78/144/8":"America/Santiago","78/145/8":"America/Santiago","78/146/8":"America/Santiago","78/147/8":"America/Santiago","77/153/8":"America/Santiago","76/156/8":"America/Santiago","76/157/8":"America/Santiago","76/158/8":"America/Santiago","75/162/8":"America/Santiago","75/163/8":"America/Santiago","75/164/8":"America/Santiago","75/165/8":"America/Santiago","75/166/8":"America/Santiago","77/142/8":"America/Santiago","77/143/8":"America/Santiago","78/143/8":"America/Santiago","77/144/8":"America/Santiago","77/145/8":"America/Santiago","77/146/8":"America/Santiago","70/147/8":"America/Santiago","71/147/8":"America/Santiago","77/147/8":"America/Santiago","77/148/8":"America/Santiago","76/149/8":"America/Santiago","77/149/8":"America/Santiago","76/150/8":"America/Santiago","77/150/8":"America/Santiago","76/151/8":"America/Santiago","76/152/8":"America/Santiago","70/153/8":"America/Santiago","71/153/8":"America/Santiago","72/153/8":"America/Santiago","76/153/8":"America/Santiago","76/154/8":"America/Santiago","75/155/8":"America/Santiago","76/155/8":"America/Santiago","75/156/8":"America/Santiago","75/157/8":"America/Santiago","75/158/8":"America/Santiago","75/159/8":"America/Santiago","75/160/8":"America/Santiago","74/161/8":"America/Santiago","75/161/8":"America/Santiago","74/162/8":"America/Santiago","74/163/8":"America/Santiago","74/164/8":"America/Santiago","74/165/8":"America/Santiago","73/166/8":"America/Santiago","74/166/8":"America/Santiago","73/167/8":"America/Santiago","74/167/8":"America/Santiago","75/167/8":"America/Santiago","78/112/8":"America/Santo_Domingo","78/113/8":"America/Santo_Domingo","79/113/8":"America/Santo_Domingo","78/114/8":"America/Santo_Domingo","77/115/8":"America/Santo_Domingo","78/115/8":"America/Santo_Domingo","92/138/8":"America/Sao_Paulo","93/138/8":"America/Sao_Paulo","94/138/8":"America/Sao_Paulo","92/139/8":"America/Sao_Paulo","93/139/8":"America/Sao_Paulo","94/139/8":"America/Sao_Paulo","95/139/8":"America/Sao_Paulo","96/139/8":"America/Sao_Paulo","97/139/8":"America/Sao_Paulo","91/140/8":"America/Sao_Paulo","92/140/8":"America/Sao_Paulo","93/140/8":"America/Sao_Paulo","94/140/8":"America/Sao_Paulo","95/140/8":"America/Sao_Paulo","96/140/8":"America/Sao_Paulo","97/140/8":"America/Sao_Paulo","98/140/8":"America/Sao_Paulo","92/141/8":"America/Sao_Paulo","93/141/8":"America/Sao_Paulo","94/141/8":"America/Sao_Paulo","95/141/8":"America/Sao_Paulo","96/141/8":"America/Sao_Paulo","97/141/8":"America/Sao_Paulo","98/141/8":"America/Sao_Paulo","92/142/8":"America/Sao_Paulo","93/142/8":"America/Sao_Paulo","94/142/8":"America/Sao_Paulo","95/142/8":"America/Sao_Paulo","96/142/8":"America/Sao_Paulo","97/142/8":"America/Sao_Paulo","98/142/8":"America/Sao_Paulo","92/143/8":"America/Sao_Paulo","93/143/8":"America/Sao_Paulo","94/143/8":"America/Sao_Paulo","95/143/8":"America/Sao_Paulo","96/143/8":"America/Sao_Paulo","97/143/8":"America/Sao_Paulo","91/144/8":"America/Sao_Paulo","92/144/8":"America/Sao_Paulo","93/144/8":"America/Sao_Paulo","94/144/8":"America/Sao_Paulo","95/144/8":"America/Sao_Paulo","96/144/8":"America/Sao_Paulo","90/145/8":"America/Sao_Paulo","91/145/8":"America/Sao_Paulo","92/145/8":"America/Sao_Paulo","93/145/8":"America/Sao_Paulo","94/145/8":"America/Sao_Paulo","90/146/8":"America/Sao_Paulo","91/146/8":"America/Sao_Paulo","92/146/8":"America/Sao_Paulo","90/147/8":"America/Sao_Paulo","91/147/8":"America/Sao_Paulo","92/147/8":"America/Sao_Paulo","90/148/8":"America/Sao_Paulo","91/148/8":"America/Sao_Paulo","92/148/8":"America/Sao_Paulo","89/149/8":"America/Sao_Paulo","90/149/8":"America/Sao_Paulo","91/149/8":"America/Sao_Paulo","89/150/8":"America/Sao_Paulo","90/150/8":"America/Sao_Paulo","91/150/8":"America/Sao_Paulo","90/151/8":"America/Sao_Paulo","99/142/8":"America/Sao_Paulo","98/143/8":"America/Sao_Paulo","99/143/8":"America/Sao_Paulo","97/144/8":"America/Sao_Paulo","98/144/8":"America/Sao_Paulo","99/144/8":"America/Sao_Paulo","95/145/8":"America/Sao_Paulo","96/145/8":"America/Sao_Paulo","97/145/8":"America/Sao_Paulo","93/146/8":"America/Sao_Paulo","94/146/8":"America/Sao_Paulo","95/146/8":"America/Sao_Paulo","93/147/8":"America/Sao_Paulo","93/148/8":"America/Sao_Paulo","92/149/8":"America/Sao_Paulo","93/149/8":"America/Sao_Paulo","92/150/8":"America/Sao_Paulo","91/151/8":"America/Sao_Paulo","92/151/8":"America/Sao_Paulo","91/152/8":"America/Sao_Paulo","114/46/8":"America/Scoresbysund","113/47/8":"America/Scoresbysund","112/48/8":"America/Scoresbysund","113/48/8":"America/Scoresbysund","112/49/8":"America/Scoresbysund","115/44/8":"America/Scoresbysund","116/44/8":"America/Scoresbysund","115/45/8":"America/Scoresbysund","116/45/8":"America/Scoresbysund","115/46/8":"America/Scoresbysund","114/47/8":"America/Scoresbysund","115/47/8":"America/Scoresbysund","114/48/8":"America/Scoresbysund","113/49/8":"America/Scoresbysund","114/49/8":"America/Scoresbysund","33/79/8":"America/Sitka","33/80/8":"America/Sitka","31/78/8":"America/Sitka","34/78/8":"America/Vancouver","31/79/8":"America/Sitka","32/79/8":"America/Sitka","34/79/8":"America/Sitka","35/79/8":"America/Vancouver","32/80/8":"America/Sitka","35/80/8":"America/Vancouver","32/81/8":"America/Sitka","33/81/8":"America/Sitka","34/81/8":"America/Vancouver","35/81/8":"America/Vancouver","87/86/8":"America/St_Johns","86/87/8":"America/St_Johns","87/87/8":"America/St_Johns","86/88/8":"America/St_Johns","87/88/8":"America/St_Johns","88/88/8":"America/St_Johns","89/88/8":"America/St_Johns","88/84/8":"America/St_Johns","88/85/8":"America/St_Johns","88/86/8":"America/St_Johns","89/86/8":"America/St_Johns","88/87/8":"America/St_Johns","89/87/8":"America/St_Johns","90/87/8":"America/St_Johns","90/88/8":"America/St_Johns","86/89/8":"America/St_Johns","89/89/8":"America/St_Johns","90/89/8":"America/St_Johns","89/90/8":"America/St_Johns","90/90/8":"America/St_Johns","66/115/8":"America/Tegucigalpa","67/115/8":"America/Tegucigalpa","68/115/8":"America/Tegucigalpa","66/116/8":"America/Tegucigalpa","67/116/8":"America/Tegucigalpa","68/116/8":"America/Tegucigalpa","69/116/8":"America/Tegucigalpa","79/31/8":"America/Thule","79/32/8":"America/Thule","80/32/8":"America/Thule","78/33/8":"America/Thule","79/33/8":"America/Thule","80/33/8":"America/Thule","81/33/8":"America/Thule","76/34/8":"America/Thule","77/34/8":"America/Thule","78/34/8":"America/Thule","79/34/8":"America/Thule","80/34/8":"America/Thule","81/34/8":"America/Thule","82/34/8":"America/Thule","76/35/8":"America/Thule","77/35/8":"America/Thule","78/35/8":"America/Thule","79/35/8":"America/Thule","80/35/8":"America/Thule","81/35/8":"America/Thule","82/35/8":"America/Thule","83/35/8":"America/Thule","76/36/8":"America/Thule","77/36/8":"America/Thule","78/36/8":"America/Thule","79/36/8":"America/Thule","80/36/8":"America/Thule","81/36/8":"America/Thule","82/36/8":"America/Thule","83/36/8":"America/Thule","84/36/8":"America/Thule","76/37/8":"America/Thule","77/37/8":"America/Thule","78/37/8":"America/Thule","79/37/8":"America/Thule","80/37/8":"America/Thule","81/37/8":"America/Thule","82/37/8":"America/Thule","83/37/8":"America/Thule","77/38/8":"America/Thule","78/38/8":"America/Thule","79/38/8":"America/Thule","80/38/8":"America/Thule","81/38/8":"America/Thule","82/38/8":"America/Thule","83/38/8":"America/Thule","77/39/8":"America/Thule","78/39/8":"America/Thule","79/39/8":"America/Thule","80/39/8":"America/Thule","81/39/8":"America/Thule","82/39/8":"America/Thule","83/39/8":"America/Thule","78/40/8":"America/Thule","79/40/8":"America/Thule","80/40/8":"America/Thule","81/40/8":"America/Thule","82/40/8":"America/Thule","83/40/8":"America/Thule","78/41/8":"America/Thule","79/41/8":"America/Thule","80/41/8":"America/Thule","81/41/8":"America/Thule","82/41/8":"America/Thule","80/42/8":"America/Thule","81/42/8":"America/Thule","82/42/8":"America/Thule","78/31/8":"America/Thule","77/32/8":"America/Thule","78/32/8":"America/Thule","77/33/8":"America/Thule","75/36/8":"America/Thule","75/37/8":"America/Thule","75/38/8":"America/Thule","76/38/8":"America/Thule","75/39/8":"America/Thule","76/39/8":"America/Thule","75/40/8":"America/Thule","76/40/8":"America/Thule","77/40/8":"America/Thule","75/41/8":"America/Thule","76/41/8":"America/Thule","77/41/8":"America/Thule","77/42/8":"America/Thule","78/42/8":"America/Thule","79/42/8":"America/Thule","79/43/8":"America/Thule","80/43/8":"America/Thule","81/43/8":"America/Thule","82/43/8":"America/Thule","46/105/8":"America/Tijuana","44/104/8":"America/Tijuana","45/104/8":"America/Tijuana","45/105/8":"America/Tijuana","43/106/8":"America/Tijuana","44/106/8":"America/Tijuana","45/106/8":"America/Tijuana","46/106/8":"America/Tijuana","65/80/8":"America/Toronto","65/81/8":"America/Toronto","66/81/8":"America/Toronto","67/81/8":"America/Toronto","68/81/8":"America/Toronto","66/82/8":"America/Toronto","67/82/8":"America/Toronto","68/82/8":"America/Toronto","66/83/8":"America/Toronto","67/83/8":"America/Toronto","68/83/8":"America/Toronto","65/84/8":"America/Toronto","66/84/8":"America/Toronto","67/84/8":"America/Toronto","68/84/8":"America/Toronto","65/85/8":"America/Toronto","66/85/8":"America/Toronto","67/85/8":"America/Toronto","68/85/8":"America/Toronto","69/85/8":"America/Toronto","65/86/8":"America/Toronto","66/86/8":"America/Toronto","67/86/8":"America/Toronto","68/86/8":"America/Toronto","69/86/8":"America/Toronto","70/86/8":"America/Toronto","66/87/8":"America/Toronto","67/87/8":"America/Toronto","68/87/8":"America/Toronto","69/87/8":"America/Toronto","70/87/8":"America/Toronto","66/88/8":"America/Toronto","67/88/8":"America/Toronto","68/88/8":"America/Toronto","69/88/8":"America/Toronto","70/88/8":"America/Toronto","68/89/8":"America/Toronto","69/89/8":"America/Toronto","70/89/8":"America/Toronto","69/90/8":"America/Toronto","70/90/8":"America/Toronto","70/91/8":"America/Toronto","71/91/8":"America/Toronto","70/92/8":"America/Toronto","71/92/8":"America/Toronto","72/92/8":"America/Toronto","70/93/8":"America/Toronto","64/79/8":"America/Toronto","64/80/8":"America/Toronto","64/81/8":"America/Toronto","64/82/8":"America/Winnipeg","65/82/8":"America/Toronto","64/83/8":"America/Winnipeg","65/83/8":"America/Toronto","63/84/8":"America/Winnipeg","64/84/8":"America/Toronto","63/85/8":"America/Winnipeg","64/85/8":"America/Toronto","64/86/8":"America/Toronto","64/87/8":"America/Toronto","33/75/8":"America/Vancouver","34/75/8":"America/Vancouver","35/75/8":"America/Vancouver","36/75/8":"America/Vancouver","34/76/8":"America/Vancouver","35/76/8":"America/Vancouver","36/76/8":"America/Vancouver","34/77/8":"America/Vancouver","35/77/8":"America/Vancouver","36/77/8":"America/Vancouver","37/77/8":"America/Vancouver","38/77/8":"America/Vancouver","35/78/8":"America/Vancouver","36/78/8":"America/Vancouver","37/78/8":"America/Vancouver","38/78/8":"America/Vancouver","36/79/8":"America/Vancouver","37/79/8":"America/Vancouver","38/79/8":"America/Vancouver","39/79/8":"America/Vancouver","36/80/8":"America/Vancouver","37/80/8":"America/Vancouver","38/80/8":"America/Vancouver","39/80/8":"America/Vancouver","36/81/8":"America/Vancouver","37/81/8":"America/Vancouver","38/81/8":"America/Vancouver","39/81/8":"America/Vancouver","40/81/8":"America/Vancouver","35/82/8":"America/Vancouver","36/82/8":"America/Vancouver","37/82/8":"America/Vancouver","38/82/8":"America/Vancouver","39/82/8":"America/Vancouver","40/82/8":"America/Vancouver","41/82/8":"America/Vancouver","36/83/8":"America/Vancouver","37/83/8":"America/Vancouver","38/83/8":"America/Vancouver","39/83/8":"America/Vancouver","40/83/8":"America/Vancouver","41/83/8":"America/Vancouver","42/83/8":"America/Vancouver","37/84/8":"America/Vancouver","38/84/8":"America/Vancouver","39/84/8":"America/Vancouver","40/84/8":"America/Vancouver","41/84/8":"America/Vancouver","42/84/8":"America/Vancouver","37/85/8":"America/Vancouver","38/85/8":"America/Vancouver","39/85/8":"America/Vancouver","40/85/8":"America/Vancouver","41/85/8":"America/Vancouver","42/85/8":"America/Vancouver","43/85/8":"America/Vancouver","38/86/8":"America/Vancouver","39/86/8":"America/Vancouver","40/86/8":"America/Vancouver","41/86/8":"America/Vancouver","42/86/8":"America/Vancouver","43/86/8":"America/Vancouver","39/87/8":"America/Vancouver","29/74/8":"America/Vancouver","30/74/8":"America/Vancouver","32/74/8":"America/Vancouver","33/74/8":"America/Vancouver","34/74/8":"America/Vancouver","35/74/8":"America/Vancouver","36/74/8":"America/Vancouver","33/82/8":"America/Vancouver","34/82/8":"America/Vancouver","33/83/8":"America/Vancouver","34/83/8":"America/Vancouver","35/83/8":"America/Vancouver","34/84/8":"America/Vancouver","35/84/8":"America/Vancouver","36/84/8":"America/Vancouver","35/85/8":"America/Vancouver","36/85/8":"America/Vancouver","36/86/8":"America/Vancouver","37/86/8":"America/Vancouver","37/87/8":"America/Vancouver","38/87/8":"America/Vancouver","38/88/8":"America/Vancouver","28/58/8":"America/Whitehorse","28/59/8":"America/Whitehorse","29/59/8":"America/Whitehorse","28/60/8":"America/Whitehorse","29/60/8":"America/Whitehorse","28/61/8":"America/Whitehorse","29/61/8":"America/Whitehorse","28/62/8":"America/Whitehorse","29/62/8":"America/Whitehorse","30/62/8":"America/Whitehorse","28/63/8":"America/Whitehorse","29/63/8":"America/Whitehorse","30/63/8":"America/Whitehorse","28/64/8":"America/Whitehorse","29/64/8":"America/Whitehorse","30/64/8":"America/Whitehorse","31/64/8":"America/Whitehorse","28/65/8":"America/Whitehorse","29/65/8":"America/Whitehorse","30/65/8":"America/Whitehorse","31/65/8":"America/Whitehorse","32/65/8":"America/Whitehorse","28/66/8":"America/Whitehorse","29/66/8":"America/Whitehorse","30/66/8":"America/Whitehorse","31/66/8":"America/Whitehorse","32/66/8":"America/Whitehorse","28/67/8":"America/Whitehorse","29/67/8":"America/Whitehorse","30/67/8":"America/Whitehorse","31/67/8":"America/Whitehorse","32/67/8":"America/Whitehorse","29/68/8":"America/Whitehorse","30/68/8":"America/Whitehorse","31/68/8":"America/Whitehorse","32/68/8":"America/Whitehorse","33/68/8":"America/Whitehorse","28/69/8":"America/Whitehorse","29/69/8":"America/Whitehorse","30/69/8":"America/Whitehorse","31/69/8":"America/Whitehorse","32/69/8":"America/Whitehorse","33/69/8":"America/Whitehorse","34/69/8":"America/Whitehorse","28/70/8":"America/Whitehorse","29/70/8":"America/Whitehorse","30/70/8":"America/Whitehorse","31/70/8":"America/Whitehorse","32/70/8":"America/Whitehorse","33/70/8":"America/Whitehorse","34/70/8":"America/Whitehorse","28/71/8":"America/Whitehorse","29/71/8":"America/Whitehorse","30/71/8":"America/Whitehorse","31/71/8":"America/Whitehorse","32/71/8":"America/Whitehorse","33/71/8":"America/Whitehorse","34/71/8":"America/Whitehorse","35/71/8":"America/Whitehorse","28/72/8":"America/Whitehorse","29/72/8":"America/Whitehorse","30/72/8":"America/Whitehorse","31/72/8":"America/Whitehorse","32/72/8":"America/Whitehorse","33/72/8":"America/Whitehorse","34/72/8":"America/Whitehorse","35/72/8":"America/Whitehorse","36/72/8":"America/Whitehorse","30/73/8":"America/Whitehorse","31/73/8":"America/Whitehorse","32/73/8":"America/Whitehorse","33/73/8":"America/Whitehorse","34/73/8":"America/Whitehorse","35/73/8":"America/Whitehorse","36/73/8":"America/Whitehorse","28/57/8":"America/Whitehorse","29/57/8":"America/Whitehorse","29/58/8":"America/Whitehorse","30/58/8":"America/Whitehorse","30/59/8":"America/Whitehorse","30/60/8":"America/Whitehorse","30/61/8":"America/Whitehorse","31/61/8":"America/Yellowknife","31/62/8":"America/Yellowknife","31/63/8":"America/Whitehorse","32/63/8":"America/Whitehorse","33/63/8":"America/Yellowknife","32/64/8":"America/Whitehorse","33/64/8":"America/Yellowknife","33/65/8":"America/Whitehorse","34/65/8":"America/Yellowknife","33/66/8":"America/Whitehorse","33/67/8":"America/Whitehorse","34/67/8":"America/Yellowknife","34/68/8":"America/Whitehorse","35/68/8":"America/Yellowknife","35/69/8":"America/Whitehorse","35/70/8":"America/Whitehorse","36/70/8":"America/Yellowknife","36/71/8":"America/Whitehorse","37/71/8":"America/Yellowknife","37/72/8":"America/Whitehorse","39/72/8":"America/Yellowknife","28/73/8":"America/Whitehorse","29/73/8":"America/Whitehorse","37/73/8":"America/Whitehorse","38/73/8":"America/Whitehorse","39/73/8":"America/Whitehorse","28/74/8":"America/Yakutat","56/75/8":"America/Winnipeg","57/75/8":"America/Winnipeg","58/75/8":"America/Winnipeg","59/75/8":"America/Winnipeg","56/76/8":"America/Winnipeg","57/76/8":"America/Winnipeg","58/76/8":"America/Winnipeg","59/76/8":"America/Winnipeg","56/77/8":"America/Winnipeg","57/77/8":"America/Winnipeg","58/77/8":"America/Winnipeg","59/77/8":"America/Winnipeg","60/77/8":"America/Winnipeg","56/78/8":"America/Winnipeg","57/78/8":"America/Winnipeg","58/78/8":"America/Winnipeg","59/78/8":"America/Winnipeg","60/78/8":"America/Winnipeg","61/78/8":"America/Winnipeg","56/79/8":"America/Winnipeg","57/79/8":"America/Winnipeg","58/79/8":"America/Winnipeg","59/79/8":"America/Winnipeg","60/79/8":"America/Winnipeg","61/79/8":"America/Winnipeg","62/79/8":"America/Winnipeg","63/79/8":"America/Winnipeg","56/80/8":"America/Winnipeg","57/80/8":"America/Winnipeg","58/80/8":"America/Winnipeg","59/80/8":"America/Winnipeg","60/80/8":"America/Winnipeg","61/80/8":"America/Winnipeg","62/80/8":"America/Winnipeg","63/80/8":"America/Winnipeg","56/81/8":"America/Winnipeg","57/81/8":"America/Winnipeg","58/81/8":"America/Winnipeg","59/81/8":"America/Winnipeg","60/81/8":"America/Winnipeg","61/81/8":"America/Winnipeg","62/81/8":"America/Winnipeg","63/81/8":"America/Winnipeg","56/82/8":"America/Winnipeg","57/82/8":"America/Winnipeg","58/82/8":"America/Winnipeg","59/82/8":"America/Winnipeg","60/82/8":"America/Winnipeg","61/82/8":"America/Winnipeg","62/82/8":"America/Winnipeg","63/82/8":"America/Winnipeg","56/83/8":"America/Winnipeg","57/83/8":"America/Winnipeg","58/83/8":"America/Winnipeg","59/83/8":"America/Winnipeg","60/83/8":"America/Winnipeg","61/83/8":"America/Winnipeg","62/83/8":"America/Winnipeg","63/83/8":"America/Winnipeg","56/84/8":"America/Winnipeg","57/84/8":"America/Winnipeg","58/84/8":"America/Winnipeg","59/84/8":"America/Winnipeg","60/84/8":"America/Winnipeg","61/84/8":"America/Winnipeg","62/84/8":"America/Winnipeg","56/85/8":"America/Winnipeg","57/85/8":"America/Winnipeg","58/85/8":"America/Winnipeg","59/85/8":"America/Winnipeg","60/85/8":"America/Winnipeg","61/85/8":"America/Winnipeg","62/85/8":"America/Winnipeg","56/86/8":"America/Winnipeg","57/86/8":"America/Winnipeg","58/86/8":"America/Winnipeg","59/86/8":"America/Winnipeg","60/86/8":"America/Winnipeg","61/86/8":"America/Winnipeg","62/86/8":"America/Winnipeg","63/86/8":"America/Winnipeg","61/87/8":"America/Winnipeg","27/75/8":"America/Yakutat","28/75/8":"America/Yakutat","48/34/8":"America/Yellowknife","46/35/8":"America/Yellowknife","47/35/8":"America/Yellowknife","48/35/8":"America/Yellowknife","46/36/8":"America/Yellowknife","47/36/8":"America/Yellowknife","48/36/8":"America/Yellowknife","45/37/8":"America/Yellowknife","46/37/8":"America/Yellowknife","47/37/8":"America/Yellowknife","48/37/8":"America/Yellowknife","43/38/8":"America/Yellowknife","44/38/8":"America/Yellowknife","45/38/8":"America/Yellowknife","46/38/8":"America/Yellowknife","47/38/8":"America/Yellowknife","48/38/8":"America/Yellowknife","43/39/8":"America/Yellowknife","44/39/8":"America/Yellowknife","45/39/8":"America/Yellowknife","46/39/8":"America/Yellowknife","47/39/8":"America/Yellowknife","48/39/8":"America/Yellowknife","42/40/8":"America/Yellowknife","43/40/8":"America/Yellowknife","44/40/8":"America/Yellowknife","45/40/8":"America/Yellowknife","46/40/8":"America/Yellowknife","47/40/8":"America/Yellowknife","48/40/8":"America/Yellowknife","41/41/8":"America/Yellowknife","42/41/8":"America/Yellowknife","43/41/8":"America/Yellowknife","44/41/8":"America/Yellowknife","45/41/8":"America/Yellowknife","46/41/8":"America/Yellowknife","47/41/8":"America/Yellowknife","48/41/8":"America/Yellowknife","41/42/8":"America/Yellowknife","42/42/8":"America/Yellowknife","43/42/8":"America/Yellowknife","44/42/8":"America/Yellowknife","45/42/8":"America/Yellowknife","46/42/8":"America/Yellowknife","47/42/8":"America/Yellowknife","48/42/8":"America/Yellowknife","41/43/8":"America/Yellowknife","42/43/8":"America/Yellowknife","43/43/8":"America/Yellowknife","44/43/8":"America/Yellowknife","45/43/8":"America/Yellowknife","46/43/8":"America/Yellowknife","47/43/8":"America/Yellowknife","48/43/8":"America/Yellowknife","40/44/8":"America/Yellowknife","41/44/8":"America/Yellowknife","42/44/8":"America/Yellowknife","43/44/8":"America/Yellowknife","44/44/8":"America/Yellowknife","45/44/8":"America/Yellowknife","46/44/8":"America/Yellowknife","47/44/8":"America/Yellowknife","48/44/8":"America/Yellowknife","40/45/8":"America/Yellowknife","41/45/8":"America/Yellowknife","42/45/8":"America/Yellowknife","43/45/8":"America/Yellowknife","44/45/8":"America/Yellowknife","45/45/8":"America/Yellowknife","46/45/8":"America/Yellowknife","47/45/8":"America/Yellowknife","48/45/8":"America/Yellowknife","40/46/8":"America/Yellowknife","41/46/8":"America/Yellowknife","42/46/8":"America/Yellowknife","43/46/8":"America/Yellowknife","44/46/8":"America/Yellowknife","45/46/8":"America/Yellowknife","46/46/8":"America/Yellowknife","47/46/8":"America/Yellowknife","48/46/8":"America/Yellowknife","39/47/8":"America/Yellowknife","40/47/8":"America/Yellowknife","41/47/8":"America/Yellowknife","42/47/8":"America/Yellowknife","43/47/8":"America/Yellowknife","44/47/8":"America/Yellowknife","45/47/8":"America/Yellowknife","46/47/8":"America/Yellowknife","47/47/8":"America/Yellowknife","48/47/8":"America/Yellowknife","39/48/8":"America/Yellowknife","40/48/8":"America/Yellowknife","41/48/8":"America/Yellowknife","42/48/8":"America/Yellowknife","43/48/8":"America/Yellowknife","44/48/8":"America/Yellowknife","45/48/8":"America/Yellowknife","46/48/8":"America/Yellowknife","47/48/8":"America/Yellowknife","48/48/8":"America/Yellowknife","40/49/8":"America/Yellowknife","41/49/8":"America/Yellowknife","42/49/8":"America/Yellowknife","43/49/8":"America/Yellowknife","44/49/8":"America/Yellowknife","45/49/8":"America/Yellowknife","46/49/8":"America/Yellowknife","47/49/8":"America/Yellowknife","48/49/8":"America/Yellowknife","39/50/8":"America/Yellowknife","40/50/8":"America/Yellowknife","41/50/8":"America/Yellowknife","42/50/8":"America/Yellowknife","43/50/8":"America/Yellowknife","44/50/8":"America/Yellowknife","45/50/8":"America/Yellowknife","46/50/8":"America/Yellowknife","47/50/8":"America/Yellowknife","48/50/8":"America/Yellowknife","39/51/8":"America/Yellowknife","40/51/8":"America/Yellowknife","41/51/8":"America/Yellowknife","42/51/8":"America/Yellowknife","43/51/8":"America/Yellowknife","44/51/8":"America/Yellowknife","45/51/8":"America/Yellowknife","46/51/8":"America/Yellowknife","47/51/8":"America/Yellowknife","48/51/8":"America/Yellowknife","39/52/8":"America/Yellowknife","40/52/8":"America/Yellowknife","41/52/8":"America/Yellowknife","42/52/8":"America/Yellowknife","43/52/8":"America/Yellowknife","44/52/8":"America/Yellowknife","45/52/8":"America/Yellowknife","46/52/8":"America/Yellowknife","47/52/8":"America/Yellowknife","48/52/8":"America/Yellowknife","38/53/8":"America/Yellowknife","39/53/8":"America/Yellowknife","40/53/8":"America/Yellowknife","41/53/8":"America/Yellowknife","42/53/8":"America/Yellowknife","43/53/8":"America/Yellowknife","44/53/8":"America/Yellowknife","45/53/8":"America/Yellowknife","46/53/8":"America/Yellowknife","47/53/8":"America/Yellowknife","48/53/8":"America/Yellowknife","38/54/8":"America/Yellowknife","39/54/8":"America/Yellowknife","40/54/8":"America/Yellowknife","41/54/8":"America/Yellowknife","42/54/8":"America/Yellowknife","43/54/8":"America/Yellowknife","44/54/8":"America/Yellowknife","45/54/8":"America/Yellowknife","46/54/8":"America/Yellowknife","47/54/8":"America/Yellowknife","48/54/8":"America/Yellowknife","37/55/8":"America/Yellowknife","38/55/8":"America/Yellowknife","39/55/8":"America/Yellowknife","40/55/8":"America/Yellowknife","41/55/8":"America/Yellowknife","42/55/8":"America/Yellowknife","43/55/8":"America/Yellowknife","44/55/8":"America/Yellowknife","45/55/8":"America/Yellowknife","46/55/8":"America/Yellowknife","47/55/8":"America/Yellowknife","48/55/8":"America/Yellowknife","36/56/8":"America/Yellowknife","37/56/8":"America/Yellowknife","38/56/8":"America/Yellowknife","39/56/8":"America/Yellowknife","40/56/8":"America/Yellowknife","41/56/8":"America/Yellowknife","42/56/8":"America/Yellowknife","43/56/8":"America/Yellowknife","44/56/8":"America/Yellowknife","45/56/8":"America/Yellowknife","46/56/8":"America/Yellowknife","47/56/8":"America/Yellowknife","48/56/8":"America/Yellowknife","35/57/8":"America/Yellowknife","36/57/8":"America/Yellowknife","37/57/8":"America/Yellowknife","38/57/8":"America/Yellowknife","39/57/8":"America/Yellowknife","40/57/8":"America/Yellowknife","41/57/8":"America/Yellowknife","42/57/8":"America/Yellowknife","43/57/8":"America/Yellowknife","32/58/8":"America/Yellowknife","33/58/8":"America/Yellowknife","34/58/8":"America/Yellowknife","35/58/8":"America/Yellowknife","36/58/8":"America/Yellowknife","37/58/8":"America/Yellowknife","38/58/8":"America/Yellowknife","39/58/8":"America/Yellowknife","40/58/8":"America/Yellowknife","41/58/8":"America/Yellowknife","31/59/8":"America/Yellowknife","32/59/8":"America/Yellowknife","33/59/8":"America/Yellowknife","34/59/8":"America/Yellowknife","35/59/8":"America/Yellowknife","36/59/8":"America/Yellowknife","37/59/8":"America/Yellowknife","38/59/8":"America/Yellowknife","39/59/8":"America/Yellowknife","40/59/8":"America/Yellowknife","41/59/8":"America/Yellowknife","31/60/8":"America/Yellowknife","34/60/8":"America/Yellowknife","35/60/8":"America/Yellowknife","36/60/8":"America/Yellowknife","37/60/8":"America/Yellowknife","38/60/8":"America/Yellowknife","39/60/8":"America/Yellowknife","40/60/8":"America/Yellowknife","41/60/8":"America/Yellowknife","32/61/8":"America/Yellowknife","33/61/8":"America/Yellowknife","34/61/8":"America/Yellowknife","35/61/8":"America/Yellowknife","36/61/8":"America/Yellowknife","37/61/8":"America/Yellowknife","38/61/8":"America/Yellowknife","39/61/8":"America/Yellowknife","40/61/8":"America/Yellowknife","41/61/8":"America/Yellowknife","32/62/8":"America/Yellowknife","33/62/8":"America/Yellowknife","34/62/8":"America/Yellowknife","35/62/8":"America/Yellowknife","36/62/8":"America/Yellowknife","37/62/8":"America/Yellowknife","38/62/8":"America/Yellowknife","39/62/8":"America/Yellowknife","40/62/8":"America/Yellowknife","41/62/8":"America/Yellowknife","42/62/8":"America/Yellowknife","34/63/8":"America/Yellowknife","35/63/8":"America/Yellowknife","36/63/8":"America/Yellowknife","37/63/8":"America/Yellowknife","38/63/8":"America/Yellowknife","39/63/8":"America/Yellowknife","40/63/8":"America/Yellowknife","41/63/8":"America/Yellowknife","42/63/8":"America/Yellowknife","43/63/8":"America/Yellowknife","34/64/8":"America/Yellowknife","35/64/8":"America/Yellowknife","36/64/8":"America/Yellowknife","37/64/8":"America/Yellowknife","38/64/8":"America/Yellowknife","39/64/8":"America/Yellowknife","40/64/8":"America/Yellowknife","41/64/8":"America/Yellowknife","42/64/8":"America/Yellowknife","43/64/8":"America/Yellowknife","44/64/8":"America/Yellowknife","35/65/8":"America/Yellowknife","36/65/8":"America/Yellowknife","37/65/8":"America/Yellowknife","38/65/8":"America/Yellowknife","39/65/8":"America/Yellowknife","40/65/8":"America/Yellowknife","41/65/8":"America/Yellowknife","42/65/8":"America/Yellowknife","43/65/8":"America/Yellowknife","44/65/8":"America/Yellowknife","45/65/8":"America/Yellowknife","34/66/8":"America/Yellowknife","35/66/8":"America/Yellowknife","36/66/8":"America/Yellowknife","37/66/8":"America/Yellowknife","38/66/8":"America/Yellowknife","39/66/8":"America/Yellowknife","40/66/8":"America/Yellowknife","41/66/8":"America/Yellowknife","42/66/8":"America/Yellowknife","43/66/8":"America/Yellowknife","44/66/8":"America/Yellowknife","45/66/8":"America/Yellowknife","46/66/8":"America/Yellowknife","47/66/8":"America/Yellowknife","48/66/8":"America/Yellowknife","35/67/8":"America/Yellowknife","36/67/8":"America/Yellowknife","37/67/8":"America/Yellowknife","38/67/8":"America/Yellowknife","39/67/8":"America/Yellowknife","40/67/8":"America/Yellowknife","41/67/8":"America/Yellowknife","42/67/8":"America/Yellowknife","43/67/8":"America/Yellowknife","44/67/8":"America/Yellowknife","45/67/8":"America/Yellowknife","46/67/8":"America/Yellowknife","47/67/8":"America/Yellowknife","48/67/8":"America/Yellowknife","49/67/8":"America/Yellowknife","36/68/8":"America/Yellowknife","37/68/8":"America/Yellowknife","38/68/8":"America/Yellowknife","39/68/8":"America/Yellowknife","40/68/8":"America/Yellowknife","41/68/8":"America/Yellowknife","42/68/8":"America/Yellowknife","43/68/8":"America/Yellowknife","44/68/8":"America/Yellowknife","45/68/8":"America/Yellowknife","46/68/8":"America/Yellowknife","47/68/8":"America/Yellowknife","48/68/8":"America/Yellowknife","49/68/8":"America/Yellowknife","50/68/8":"America/Yellowknife","51/68/8":"America/Yellowknife","52/68/8":"America/Yellowknife","53/68/8":"America/Yellowknife","54/68/8":"America/Yellowknife","36/69/8":"America/Yellowknife","37/69/8":"America/Yellowknife","38/69/8":"America/Yellowknife","39/69/8":"America/Yellowknife","40/69/8":"America/Yellowknife","41/69/8":"America/Yellowknife","42/69/8":"America/Yellowknife","43/69/8":"America/Yellowknife","44/69/8":"America/Yellowknife","45/69/8":"America/Yellowknife","46/69/8":"America/Yellowknife","47/69/8":"America/Yellowknife","48/69/8":"America/Yellowknife","49/69/8":"America/Yellowknife","50/69/8":"America/Yellowknife","51/69/8":"America/Yellowknife","52/69/8":"America/Yellowknife","53/69/8":"America/Yellowknife","54/69/8":"America/Yellowknife","37/70/8":"America/Yellowknife","38/70/8":"America/Yellowknife","39/70/8":"America/Yellowknife","40/70/8":"America/Yellowknife","41/70/8":"America/Yellowknife","42/70/8":"America/Yellowknife","43/70/8":"America/Yellowknife","44/70/8":"America/Yellowknife","45/70/8":"America/Yellowknife","46/70/8":"America/Yellowknife","47/70/8":"America/Yellowknife","48/70/8":"America/Yellowknife","49/70/8":"America/Yellowknife","50/70/8":"America/Yellowknife","51/70/8":"America/Yellowknife","52/70/8":"America/Yellowknife","53/70/8":"America/Yellowknife","54/70/8":"America/Yellowknife","38/71/8":"America/Yellowknife","39/71/8":"America/Yellowknife","40/71/8":"America/Yellowknife","41/71/8":"America/Yellowknife","42/71/8":"America/Yellowknife","43/71/8":"America/Yellowknife","44/71/8":"America/Yellowknife","45/71/8":"America/Yellowknife","46/71/8":"America/Yellowknife","47/71/8":"America/Yellowknife","48/71/8":"America/Yellowknife","49/71/8":"America/Yellowknife","50/71/8":"America/Yellowknife","51/71/8":"America/Yellowknife","52/71/8":"America/Yellowknife","53/71/8":"America/Yellowknife","54/71/8":"America/Yellowknife","38/72/8":"America/Yellowknife","40/72/8":"America/Yellowknife","41/72/8":"America/Yellowknife","42/72/8":"America/Yellowknife","43/72/8":"America/Yellowknife","44/72/8":"America/Yellowknife","45/72/8":"America/Yellowknife","46/72/8":"America/Yellowknife","47/72/8":"America/Yellowknife","48/72/8":"America/Yellowknife","49/72/8":"America/Yellowknife","50/72/8":"America/Yellowknife","51/72/8":"America/Yellowknife","52/72/8":"America/Yellowknife","53/72/8":"America/Yellowknife","54/72/8":"America/Yellowknife","40/73/8":"America/Yellowknife","41/73/8":"America/Yellowknife","42/73/8":"America/Yellowknife","43/73/8":"America/Yellowknife","44/73/8":"America/Yellowknife","45/73/8":"America/Yellowknife","46/73/8":"America/Yellowknife","47/73/8":"America/Yellowknife","48/73/8":"America/Yellowknife","49/73/8":"America/Yellowknife","50/73/8":"America/Yellowknife","51/73/8":"America/Yellowknife","52/73/8":"America/Yellowknife","53/73/8":"America/Yellowknife","54/73/8":"America/Yellowknife","48/32/8":"America/Yellowknife","47/33/8":"America/Yellowknife","48/33/8":"America/Yellowknife","45/34/8":"America/Yellowknife","46/34/8":"America/Yellowknife","47/34/8":"America/Yellowknife","45/35/8":"America/Yellowknife","44/36/8":"America/Yellowknife","45/36/8":"America/Yellowknife","42/37/8":"America/Yellowknife","43/37/8":"America/Yellowknife","44/37/8":"America/Yellowknife","42/38/8":"America/Yellowknife","41/39/8":"America/Yellowknife","42/39/8":"America/Yellowknife","40/40/8":"America/Yellowknife","41/40/8":"America/Yellowknife","39/41/8":"America/Yellowknife","40/41/8":"America/Yellowknife","39/42/8":"America/Yellowknife","40/42/8":"America/Yellowknife","39/43/8":"America/Yellowknife","40/43/8":"America/Yellowknife","39/44/8":"America/Yellowknife","39/45/8":"America/Yellowknife","38/46/8":"America/Yellowknife","39/46/8":"America/Yellowknife","38/47/8":"America/Yellowknife","38/48/8":"America/Yellowknife","38/49/8":"America/Yellowknife","39/49/8":"America/Yellowknife","38/50/8":"America/Yellowknife","38/51/8":"America/Yellowknife","37/52/8":"America/Yellowknife","38/52/8":"America/Yellowknife","37/53/8":"America/Yellowknife","36/54/8":"America/Yellowknife","37/54/8":"America/Yellowknife","35/55/8":"America/Yellowknife","36/55/8":"America/Yellowknife","34/56/8":"America/Yellowknife","35/56/8":"America/Yellowknife","31/57/8":"America/Yellowknife","32/57/8":"America/Yellowknife","33/57/8":"America/Yellowknife","34/57/8":"America/Yellowknife","31/58/8":"America/Yellowknife","241/173/8":"Antarctica/Macquarie","240/174/8":"Antarctica/Macquarie","241/174/8":"Antarctica/Macquarie","240/175/8":"Antarctica/Macquarie","241/175/8":"Antarctica/Macquarie","151/27/8":"Arctic/Longyearbyen","150/28/8":"Arctic/Longyearbyen","149/32/8":"Arctic/Longyearbyen","147/33/8":"Arctic/Longyearbyen","148/33/8":"Arctic/Longyearbyen","142/25/8":"Arctic/Longyearbyen","141/26/8":"Arctic/Longyearbyen","142/26/8":"Arctic/Longyearbyen","143/26/8":"Arctic/Longyearbyen","144/26/8":"Arctic/Longyearbyen","145/26/8":"Arctic/Longyearbyen","146/26/8":"Arctic/Longyearbyen","141/27/8":"Arctic/Longyearbyen","142/27/8":"Arctic/Longyearbyen","143/27/8":"Arctic/Longyearbyen","144/27/8":"Arctic/Longyearbyen","145/27/8":"Arctic/Longyearbyen","146/27/8":"Arctic/Longyearbyen","138/28/8":"Arctic/Longyearbyen","139/28/8":"Arctic/Longyearbyen","140/28/8":"Arctic/Longyearbyen","141/28/8":"Arctic/Longyearbyen","142/28/8":"Arctic/Longyearbyen","143/28/8":"Arctic/Longyearbyen","144/28/8":"Arctic/Longyearbyen","145/28/8":"Arctic/Longyearbyen","146/28/8":"Arctic/Longyearbyen","147/28/8":"Arctic/Longyearbyen","136/29/8":"Arctic/Longyearbyen","137/29/8":"Arctic/Longyearbyen","138/29/8":"Arctic/Longyearbyen","139/29/8":"Arctic/Longyearbyen","140/29/8":"Arctic/Longyearbyen","141/29/8":"Arctic/Longyearbyen","142/29/8":"Arctic/Longyearbyen","143/29/8":"Arctic/Longyearbyen","144/29/8":"Arctic/Longyearbyen","145/29/8":"Arctic/Longyearbyen","146/29/8":"Arctic/Longyearbyen","135/30/8":"Arctic/Longyearbyen","136/30/8":"Arctic/Longyearbyen","137/30/8":"Arctic/Longyearbyen","138/30/8":"Arctic/Longyearbyen","139/30/8":"Arctic/Longyearbyen","140/30/8":"Arctic/Longyearbyen","141/30/8":"Arctic/Longyearbyen","142/30/8":"Arctic/Longyearbyen","143/30/8":"Arctic/Longyearbyen","144/30/8":"Arctic/Longyearbyen","145/30/8":"Arctic/Longyearbyen","146/30/8":"Arctic/Longyearbyen","136/31/8":"Arctic/Longyearbyen","137/31/8":"Arctic/Longyearbyen","138/31/8":"Arctic/Longyearbyen","139/31/8":"Arctic/Longyearbyen","140/31/8":"Arctic/Longyearbyen","141/31/8":"Arctic/Longyearbyen","142/31/8":"Arctic/Longyearbyen","143/31/8":"Arctic/Longyearbyen","144/31/8":"Arctic/Longyearbyen","145/31/8":"Arctic/Longyearbyen","136/32/8":"Arctic/Longyearbyen","137/32/8":"Arctic/Longyearbyen","138/32/8":"Arctic/Longyearbyen","139/32/8":"Arctic/Longyearbyen","140/32/8":"Arctic/Longyearbyen","141/32/8":"Arctic/Longyearbyen","142/32/8":"Arctic/Longyearbyen","143/32/8":"Arctic/Longyearbyen","135/33/8":"Arctic/Longyearbyen","136/33/8":"Arctic/Longyearbyen","137/33/8":"Arctic/Longyearbyen","138/33/8":"Arctic/Longyearbyen","139/33/8":"Arctic/Longyearbyen","140/33/8":"Arctic/Longyearbyen","141/33/8":"Arctic/Longyearbyen","142/33/8":"Arctic/Longyearbyen","143/33/8":"Arctic/Longyearbyen","136/34/8":"Arctic/Longyearbyen","137/34/8":"Arctic/Longyearbyen","138/34/8":"Arctic/Longyearbyen","139/34/8":"Arctic/Longyearbyen","140/34/8":"Arctic/Longyearbyen","141/34/8":"Arctic/Longyearbyen","142/34/8":"Arctic/Longyearbyen","143/34/8":"Arctic/Longyearbyen","137/35/8":"Arctic/Longyearbyen","138/35/8":"Arctic/Longyearbyen","139/35/8":"Arctic/Longyearbyen","140/35/8":"Arctic/Longyearbyen","141/35/8":"Arctic/Longyearbyen","142/35/8":"Arctic/Longyearbyen","143/35/8":"Arctic/Longyearbyen","138/36/8":"Arctic/Longyearbyen","139/36/8":"Arctic/Longyearbyen","140/36/8":"Arctic/Longyearbyen","141/36/8":"Arctic/Longyearbyen","142/36/8":"Arctic/Longyearbyen","143/36/8":"Arctic/Longyearbyen","144/36/8":"Arctic/Longyearbyen","138/37/8":"Arctic/Longyearbyen","139/37/8":"Arctic/Longyearbyen","140/37/8":"Arctic/Longyearbyen","141/37/8":"Arctic/Longyearbyen","142/37/8":"Arctic/Longyearbyen","143/37/8":"Arctic/Longyearbyen","144/37/8":"Arctic/Longyearbyen","138/38/8":"Arctic/Longyearbyen","139/38/8":"Arctic/Longyearbyen","140/38/8":"Arctic/Longyearbyen","143/38/8":"Arctic/Longyearbyen","144/38/8":"Arctic/Longyearbyen","139/39/8":"Arctic/Longyearbyen","143/39/8":"Arctic/Longyearbyen","139/40/8":"Arctic/Longyearbyen","141/24/8":"Arctic/Longyearbyen","142/24/8":"Arctic/Longyearbyen","143/24/8":"Arctic/Longyearbyen","140/25/8":"Arctic/Longyearbyen","141/25/8":"Arctic/Longyearbyen","143/25/8":"Arctic/Longyearbyen","144/25/8":"Arctic/Longyearbyen","145/25/8":"Arctic/Longyearbyen","146/25/8":"Arctic/Longyearbyen","147/25/8":"Arctic/Longyearbyen","140/26/8":"Arctic/Longyearbyen","147/26/8":"Arctic/Longyearbyen","150/26/8":"Arctic/Longyearbyen","151/26/8":"Arctic/Longyearbyen","152/26/8":"Arctic/Longyearbyen","137/27/8":"Arctic/Longyearbyen","138/27/8":"Arctic/Longyearbyen","139/27/8":"Arctic/Longyearbyen","140/27/8":"Arctic/Longyearbyen","147/27/8":"Arctic/Longyearbyen","148/27/8":"Arctic/Longyearbyen","149/27/8":"Arctic/Longyearbyen","150/27/8":"Arctic/Longyearbyen","152/27/8":"Arctic/Longyearbyen","135/28/8":"Arctic/Longyearbyen","136/28/8":"Arctic/Longyearbyen","137/28/8":"Arctic/Longyearbyen","148/28/8":"Arctic/Longyearbyen","149/28/8":"Arctic/Longyearbyen","151/28/8":"Arctic/Longyearbyen","152/28/8":"Arctic/Longyearbyen","134/29/8":"Arctic/Longyearbyen","135/29/8":"Arctic/Longyearbyen","147/29/8":"Arctic/Longyearbyen","148/29/8":"Arctic/Longyearbyen","149/29/8":"Arctic/Longyearbyen","150/29/8":"Arctic/Longyearbyen","151/29/8":"Arctic/Longyearbyen","134/30/8":"Arctic/Longyearbyen","147/30/8":"Arctic/Longyearbyen","134/31/8":"Arctic/Longyearbyen","135/31/8":"Arctic/Longyearbyen","146/31/8":"Arctic/Longyearbyen","147/31/8":"Arctic/Longyearbyen","148/31/8":"Arctic/Longyearbyen","149/31/8":"Arctic/Longyearbyen","150/31/8":"Arctic/Longyearbyen","134/32/8":"Arctic/Longyearbyen","135/32/8":"Arctic/Longyearbyen","144/32/8":"Arctic/Longyearbyen","145/32/8":"Arctic/Longyearbyen","146/32/8":"Arctic/Longyearbyen","147/32/8":"Arctic/Longyearbyen","148/32/8":"Arctic/Longyearbyen","150/32/8":"Arctic/Longyearbyen","134/33/8":"Arctic/Longyearbyen","144/33/8":"Arctic/Longyearbyen","146/33/8":"Arctic/Longyearbyen","149/33/8":"Arctic/Longyearbyen","150/33/8":"Arctic/Longyearbyen","134/34/8":"Arctic/Longyearbyen","135/34/8":"Arctic/Longyearbyen","144/34/8":"Arctic/Longyearbyen","146/34/8":"Arctic/Longyearbyen","147/34/8":"Arctic/Longyearbyen","148/34/8":"Arctic/Longyearbyen","149/34/8":"Arctic/Longyearbyen","135/35/8":"Arctic/Longyearbyen","136/35/8":"Arctic/Longyearbyen","144/35/8":"Arctic/Longyearbyen","145/35/8":"Arctic/Longyearbyen","136/36/8":"Arctic/Longyearbyen","137/36/8":"Arctic/Longyearbyen","145/36/8":"Arctic/Longyearbyen","146/36/8":"Arctic/Longyearbyen","137/37/8":"Arctic/Longyearbyen","145/37/8":"Arctic/Longyearbyen","146/37/8":"Arctic/Longyearbyen","137/38/8":"Arctic/Longyearbyen","141/38/8":"Arctic/Longyearbyen","142/38/8":"Arctic/Longyearbyen","145/38/8":"Arctic/Longyearbyen","137/39/8":"Arctic/Longyearbyen","138/39/8":"Arctic/Longyearbyen","140/39/8":"Arctic/Longyearbyen","141/39/8":"Arctic/Longyearbyen","142/39/8":"Arctic/Longyearbyen","144/39/8":"Arctic/Longyearbyen","145/39/8":"Arctic/Longyearbyen","146/39/8":"Arctic/Longyearbyen","138/40/8":"Arctic/Longyearbyen","140/40/8":"Arctic/Longyearbyen","142/40/8":"Arctic/Longyearbyen","143/40/8":"Arctic/Longyearbyen","144/40/8":"Arctic/Longyearbyen","145/40/8":"Arctic/Longyearbyen","146/40/8":"Arctic/Longyearbyen","138/41/8":"Arctic/Longyearbyen","139/41/8":"Arctic/Longyearbyen","140/41/8":"Arctic/Longyearbyen","145/41/8":"Arctic/Longyearbyen","146/41/8":"Arctic/Longyearbyen","140/46/8":"Arctic/Longyearbyen","141/46/8":"Arctic/Longyearbyen","142/46/8":"Arctic/Longyearbyen","140/47/8":"Arctic/Longyearbyen","141/47/8":"Arctic/Longyearbyen","142/47/8":"Arctic/Longyearbyen","121/54/8":"Arctic/Longyearbyen","122/54/8":"Arctic/Longyearbyen","121/55/8":"Arctic/Longyearbyen","122/55/8":"Arctic/Longyearbyen","163/115/8":"Asia/Aden","164/115/8":"Asia/Aden","159/116/8":"Asia/Aden","160/116/8":"Asia/Aden","161/116/8":"Asia/Aden","162/116/8":"Asia/Aden","163/116/8":"Asia/Aden","159/117/8":"Asia/Aden","160/117/8":"Asia/Aden","161/117/8":"Asia/Aden","162/114/8":"Asia/Riyadh","163/114/8":"Asia/Aden","164/114/8":"Asia/Aden","165/114/8":"Asia/Muscat","158/115/8":"Asia/Riyadh","159/115/8":"Asia/Aden","160/115/8":"Asia/Aden","161/115/8":"Asia/Riyadh","162/115/8":"Asia/Aden","165/115/8":"Asia/Aden","158/116/8":"Asia/Aden","164/116/8":"Asia/Aden","165/116/8":"Asia/Aden","162/117/8":"Asia/Aden","163/117/8":"Asia/Aden","164/117/8":"Asia/Aden","159/118/8":"Asia/Aden","160/118/8":"Asia/Aden","161/118/8":"Asia/Aden","162/118/8":"Asia/Aden","164/118/8":"Asia/Aden","165/118/8":"Asia/Aden","166/118/8":"Asia/Aden","160/119/8":"Asia/Aden","165/119/8":"Asia/Aden","166/119/8":"Asia/Aden","177/81/8":"Asia/Almaty","176/82/8":"Asia/Almaty","177/82/8":"Asia/Almaty","176/83/8":"Asia/Almaty","177/83/8":"Asia/Almaty","178/83/8":"Asia/Almaty","179/83/8":"Asia/Almaty","180/83/8":"Asia/Almaty","181/83/8":"Asia/Almaty","182/83/8":"Asia/Almaty","175/84/8":"Asia/Almaty","176/84/8":"Asia/Almaty","177/84/8":"Asia/Almaty","178/84/8":"Asia/Almaty","179/84/8":"Asia/Almaty","180/84/8":"Asia/Almaty","181/84/8":"Asia/Almaty","182/84/8":"Asia/Almaty","176/85/8":"Asia/Almaty","177/85/8":"Asia/Almaty","178/85/8":"Asia/Almaty","179/85/8":"Asia/Almaty","180/85/8":"Asia/Almaty","181/85/8":"Asia/Almaty","182/85/8":"Asia/Almaty","183/85/8":"Asia/Almaty","177/86/8":"Asia/Almaty","178/86/8":"Asia/Almaty","179/86/8":"Asia/Almaty","180/86/8":"Asia/Almaty","181/86/8":"Asia/Almaty","182/86/8":"Asia/Almaty","183/86/8":"Asia/Almaty","184/86/8":"Asia/Almaty","185/86/8":"Asia/Almaty","176/87/8":"Asia/Almaty","177/87/8":"Asia/Almaty","178/87/8":"Asia/Almaty","179/87/8":"Asia/Almaty","180/87/8":"Asia/Almaty","181/87/8":"Asia/Almaty","182/87/8":"Asia/Almaty","183/87/8":"Asia/Almaty","184/87/8":"Asia/Almaty","185/87/8":"Asia/Almaty","186/87/8":"Asia/Almaty","187/87/8":"Asia/Almaty","175/88/8":"Asia/Almaty","176/88/8":"Asia/Almaty","177/88/8":"Asia/Almaty","178/88/8":"Asia/Almaty","179/88/8":"Asia/Almaty","180/88/8":"Asia/Almaty","181/88/8":"Asia/Almaty","182/88/8":"Asia/Almaty","183/88/8":"Asia/Almaty","184/88/8":"Asia/Almaty","185/88/8":"Asia/Almaty","186/88/8":"Asia/Almaty","187/88/8":"Asia/Almaty","174/89/8":"Asia/Almaty","175/89/8":"Asia/Almaty","176/89/8":"Asia/Almaty","177/89/8":"Asia/Almaty","178/89/8":"Asia/Almaty","179/89/8":"Asia/Almaty","180/89/8":"Asia/Almaty","181/89/8":"Asia/Almaty","182/89/8":"Asia/Almaty","183/89/8":"Asia/Almaty","184/89/8":"Asia/Almaty","185/89/8":"Asia/Almaty","176/90/8":"Asia/Almaty","177/90/8":"Asia/Almaty","178/90/8":"Asia/Almaty","179/90/8":"Asia/Almaty","180/90/8":"Asia/Almaty","181/90/8":"Asia/Almaty","182/90/8":"Asia/Almaty","183/90/8":"Asia/Almaty","184/90/8":"Asia/Almaty","185/90/8":"Asia/Almaty","177/91/8":"Asia/Almaty","178/91/8":"Asia/Almaty","179/91/8":"Asia/Almaty","180/91/8":"Asia/Almaty","181/91/8":"Asia/Almaty","182/91/8":"Asia/Almaty","183/91/8":"Asia/Almaty","184/91/8":"Asia/Almaty","177/92/8":"Asia/Almaty","178/92/8":"Asia/Almaty","179/92/8":"Asia/Almaty","180/92/8":"Asia/Almaty","181/92/8":"Asia/Almaty","182/92/8":"Asia/Almaty","183/92/8":"Asia/Almaty","177/93/8":"Asia/Almaty","178/93/8":"Asia/Almaty","179/93/8":"Asia/Almaty","182/93/8":"Asia/Almaty","183/93/8":"Asia/Almaty","184/93/8":"Asia/Almaty","177/94/8":"Asia/Almaty","176/80/8":"Asia/Yekaterinburg","177/80/8":"Asia/Yekaterinburg","178/80/8":"Asia/Omsk","174/81/8":"Asia/Yekaterinburg","175/81/8":"Asia/Almaty","176/81/8":"Asia/Almaty","178/81/8":"Asia/Almaty","179/81/8":"Asia/Omsk","181/81/8":"Asia/Omsk","182/81/8":"Asia/Novosibirsk","174/82/8":"Asia/Qyzylorda","175/82/8":"Asia/Almaty","178/82/8":"Asia/Almaty","179/82/8":"Asia/Almaty","180/82/8":"Asia/Omsk","181/82/8":"Asia/Almaty","182/82/8":"Asia/Almaty","183/82/8":"Asia/Novosibirsk","174/83/8":"Asia/Qyzylorda","175/83/8":"Asia/Almaty","183/83/8":"Asia/Almaty","174/84/8":"Asia/Qyzylorda","183/84/8":"Asia/Almaty","184/84/8":"Asia/Barnaul","174/85/8":"Asia/Qyzylorda","175/85/8":"Asia/Almaty","184/85/8":"Asia/Almaty","185/85/8":"Asia/Barnaul","186/85/8":"Asia/Barnaul","187/85/8":"Asia/Barnaul","175/86/8":"Asia/Qyzylorda","176/86/8":"Asia/Almaty","186/86/8":"Asia/Almaty","187/86/8":"Asia/Almaty","188/86/8":"Asia/Barnaul","174/87/8":"Asia/Qyzylorda","175/87/8":"Asia/Almaty","188/87/8":"Asia/Almaty","189/87/8":"Asia/Almaty","190/87/8":"Asia/Barnaul","173/88/8":"Asia/Qyzylorda","174/88/8":"Asia/Almaty","188/88/8":"Asia/Almaty","189/88/8":"Asia/Urumqi","172/89/8":"Asia/Aqtobe","173/89/8":"Asia/Almaty","186/89/8":"Asia/Almaty","187/89/8":"Asia/Almaty","188/89/8":"Asia/Almaty","172/90/8":"Asia/Qyzylorda","173/90/8":"Asia/Qyzylorda","174/90/8":"Asia/Almaty","175/90/8":"Asia/Almaty","186/90/8":"Asia/Almaty","187/90/8":"Asia/Urumqi","188/90/8":"Asia/Urumqi","175/91/8":"Asia/Qyzylorda","176/91/8":"Asia/Almaty","185/91/8":"Asia/Almaty","186/91/8":"Asia/Almaty","175/92/8":"Asia/Qyzylorda","176/92/8":"Asia/Almaty","184/92/8":"Asia/Almaty","185/92/8":"Asia/Kashgar","176/93/8":"Asia/Almaty","180/93/8":"Asia/Almaty","181/93/8":"Asia/Almaty","185/93/8":"Asia/Kashgar","174/94/8":"Asia/Samarkand","175/94/8":"Asia/Almaty","176/94/8":"Asia/Almaty","178/94/8":"Asia/Almaty","179/94/8":"Asia/Bishkek","180/94/8":"Asia/Bishkek","181/94/8":"Asia/Bishkek","182/94/8":"Asia/Bishkek","183/94/8":"Asia/Bishkek","184/94/8":"Asia/Bishkek","185/94/8":"Asia/Kashgar","174/95/8":"Asia/Samarkand","175/95/8":"Asia/Almaty","176/95/8":"Asia/Almaty","177/95/8":"Asia/Tashkent","178/95/8":"Asia/Bishkek","176/96/8":"Asia/Tashkent","155/102/8":"Asia/Damascus","153/103/8":"Asia/Amman","154/103/8":"Asia/Amman","155/103/8":"Asia/Amman","153/104/8":"Asia/Amman","154/104/8":"Asia/Amman","155/104/8":"Asia/Riyadh","153/105/8":"Asia/Amman","154/105/8":"Asia/Amman","155/105/8":"Asia/Riyadh","153/106/8":"Asia/Riyadh","249/57/8":"Asia/Anadyr","250/57/8":"Asia/Anadyr","244/58/8":"Asia/Anadyr","245/58/8":"Asia/Anadyr","246/58/8":"Asia/Anadyr","247/58/8":"Asia/Anadyr","248/58/8":"Asia/Anadyr","249/58/8":"Asia/Anadyr","250/58/8":"Asia/Anadyr","251/58/8":"Asia/Anadyr","252/58/8":"Asia/Anadyr","253/58/8":"Asia/Anadyr","244/59/8":"Asia/Anadyr","245/59/8":"Asia/Anadyr","246/59/8":"Asia/Anadyr","247/59/8":"Asia/Anadyr","248/59/8":"Asia/Anadyr","249/59/8":"Asia/Anadyr","250/59/8":"Asia/Anadyr","251/59/8":"Asia/Anadyr","252/59/8":"Asia/Anadyr","253/59/8":"Asia/Anadyr","254/59/8":"Asia/Anadyr","255/59/8":"Asia/Anadyr","244/60/8":"Asia/Anadyr","245/60/8":"Asia/Anadyr","246/60/8":"Asia/Anadyr","247/60/8":"Asia/Anadyr","248/60/8":"Asia/Anadyr","249/60/8":"Asia/Anadyr","250/60/8":"Asia/Anadyr","251/60/8":"Asia/Anadyr","252/60/8":"Asia/Anadyr","253/60/8":"Asia/Anadyr","254/60/8":"Asia/Anadyr","255/60/8":"Asia/Anadyr","242/61/8":"Asia/Anadyr","243/61/8":"Asia/Anadyr","244/61/8":"Asia/Anadyr","245/61/8":"Asia/Anadyr","246/61/8":"Asia/Anadyr","247/61/8":"Asia/Anadyr","248/61/8":"Asia/Anadyr","249/61/8":"Asia/Anadyr","250/61/8":"Asia/Anadyr","251/61/8":"Asia/Anadyr","252/61/8":"Asia/Anadyr","253/61/8":"Asia/Anadyr","254/61/8":"Asia/Anadyr","255/61/8":"Asia/Anadyr","241/62/8":"Asia/Anadyr","242/62/8":"Asia/Anadyr","243/62/8":"Asia/Anadyr","244/62/8":"Asia/Anadyr","245/62/8":"Asia/Anadyr","246/62/8":"Asia/Anadyr","247/62/8":"Asia/Anadyr","248/62/8":"Asia/Anadyr","249/62/8":"Asia/Anadyr","250/62/8":"Asia/Anadyr","251/62/8":"Asia/Anadyr","252/62/8":"Asia/Anadyr","253/62/8":"Asia/Anadyr","254/62/8":"Asia/Anadyr","255/62/8":"Asia/Anadyr","242/63/8":"Asia/Anadyr","243/63/8":"Asia/Anadyr","244/63/8":"Asia/Anadyr","245/63/8":"Asia/Anadyr","246/63/8":"Asia/Anadyr","247/63/8":"Asia/Anadyr","248/63/8":"Asia/Anadyr","249/63/8":"Asia/Anadyr","250/63/8":"Asia/Anadyr","251/63/8":"Asia/Anadyr","252/63/8":"Asia/Anadyr","253/63/8":"Asia/Anadyr","254/63/8":"Asia/Anadyr","255/63/8":"Asia/Anadyr","242/64/8":"Asia/Anadyr","243/64/8":"Asia/Anadyr","244/64/8":"Asia/Anadyr","245/64/8":"Asia/Anadyr","246/64/8":"Asia/Anadyr","247/64/8":"Asia/Anadyr","248/64/8":"Asia/Anadyr","249/64/8":"Asia/Anadyr","250/64/8":"Asia/Anadyr","251/64/8":"Asia/Anadyr","252/64/8":"Asia/Anadyr","253/64/8":"Asia/Anadyr","254/64/8":"Asia/Anadyr","255/64/8":"Asia/Anadyr","242/65/8":"Asia/Anadyr","243/65/8":"Asia/Anadyr","244/65/8":"Asia/Anadyr","245/65/8":"Asia/Anadyr","246/65/8":"Asia/Anadyr","247/65/8":"Asia/Anadyr","248/65/8":"Asia/Anadyr","249/65/8":"Asia/Anadyr","250/65/8":"Asia/Anadyr","251/65/8":"Asia/Anadyr","252/65/8":"Asia/Anadyr","253/65/8":"Asia/Anadyr","254/65/8":"Asia/Anadyr","255/65/8":"Asia/Anadyr","246/66/8":"Asia/Anadyr","247/66/8":"Asia/Anadyr","248/66/8":"Asia/Anadyr","249/66/8":"Asia/Anadyr","250/66/8":"Asia/Anadyr","251/66/8":"Asia/Anadyr","252/66/8":"Asia/Anadyr","253/66/8":"Asia/Anadyr","254/66/8":"Asia/Anadyr","255/66/8":"Asia/Anadyr","249/67/8":"Asia/Anadyr","250/67/8":"Asia/Anadyr","251/67/8":"Asia/Anadyr","252/67/8":"Asia/Anadyr","253/67/8":"Asia/Anadyr","254/67/8":"Asia/Anadyr","249/68/8":"Asia/Anadyr","250/68/8":"Asia/Anadyr","251/68/8":"Asia/Anadyr","252/68/8":"Asia/Anadyr","253/68/8":"Asia/Anadyr","254/68/8":"Asia/Anadyr","249/69/8":"Asia/Anadyr","250/69/8":"Asia/Anadyr","251/69/8":"Asia/Anadyr","252/69/8":"Asia/Anadyr","253/69/8":"Asia/Anadyr","254/69/8":"Asia/Anadyr","252/70/8":"Asia/Anadyr","1/61/8":"Asia/Anadyr","1/62/8":"Asia/Anadyr","2/62/8":"Asia/Anadyr","3/62/8":"Asia/Anadyr","1/63/8":"Asia/Anadyr","2/63/8":"Asia/Anadyr","3/63/8":"Asia/Anadyr","4/63/8":"Asia/Anadyr","5/63/8":"Asia/Anadyr","1/64/8":"Asia/Anadyr","2/64/8":"Asia/Anadyr","3/64/8":"Asia/Anadyr","4/64/8":"Asia/Anadyr","5/64/8":"Asia/Anadyr","1/65/8":"Asia/Anadyr","2/65/8":"Asia/Anadyr","3/65/8":"Asia/Anadyr","4/65/8":"Asia/Anadyr","5/65/8":"Asia/Anadyr","3/66/8":"Asia/Anadyr","4/66/8":"Asia/Anadyr","0/53/8":"Asia/Anadyr","1/53/8":"Asia/Anadyr","2/53/8":"Asia/Anadyr","3/53/8":"Asia/Anadyr","255/53/8":"Asia/Anadyr","256/53/8":"Asia/Anadyr","0/54/8":"Asia/Anadyr","1/54/8":"Asia/Anadyr","2/54/8":"Asia/Anadyr","3/54/8":"Asia/Anadyr","254/54/8":"Asia/Anadyr","255/54/8":"Asia/Anadyr","256/54/8":"Asia/Anadyr","0/55/8":"Asia/Anadyr","1/55/8":"Asia/Anadyr","2/55/8":"Asia/Anadyr","254/55/8":"Asia/Anadyr","255/55/8":"Asia/Anadyr","256/55/8":"Asia/Anadyr","247/56/8":"Asia/Anadyr","248/56/8":"Asia/Anadyr","249/56/8":"Asia/Anadyr","250/56/8":"Asia/Anadyr","251/56/8":"Asia/Anadyr","254/56/8":"Asia/Anadyr","255/56/8":"Asia/Anadyr","243/57/8":"Asia/Srednekolymsk","244/57/8":"Asia/Anadyr","245/57/8":"Asia/Anadyr","246/57/8":"Asia/Anadyr","247/57/8":"Asia/Anadyr","248/57/8":"Asia/Anadyr","251/57/8":"Asia/Anadyr","252/57/8":"Asia/Anadyr","253/57/8":"Asia/Anadyr","254/57/8":"Asia/Anadyr","0/58/8":"Asia/Anadyr","243/58/8":"Asia/Srednekolymsk","254/58/8":"Asia/Anadyr","255/58/8":"Asia/Anadyr","256/58/8":"Asia/Anadyr","0/59/8":"Asia/Anadyr","1/59/8":"Asia/Anadyr","243/59/8":"Asia/Srednekolymsk","256/59/8":"Asia/Anadyr","0/60/8":"Asia/Anadyr","1/60/8":"Asia/Anadyr","2/60/8":"Asia/Anadyr","241/60/8":"Asia/Srednekolymsk","242/60/8":"Asia/Srednekolymsk","243/60/8":"Asia/Anadyr","256/60/8":"Asia/Anadyr","0/61/8":"Asia/Anadyr","2/61/8":"Asia/Anadyr","3/61/8":"Asia/Anadyr","4/61/8":"Asia/Anadyr","240/61/8":"Asia/Srednekolymsk","241/61/8":"Asia/Anadyr","256/61/8":"Asia/Anadyr","0/62/8":"Asia/Anadyr","4/62/8":"Asia/Anadyr","5/62/8":"Asia/Anadyr","6/62/8":"Asia/Anadyr","240/62/8":"Asia/Anadyr","256/62/8":"Asia/Anadyr","0/63/8":"Asia/Anadyr","6/63/8":"Asia/Anadyr","240/63/8":"Asia/Srednekolymsk","241/63/8":"Asia/Anadyr","256/63/8":"Asia/Anadyr","0/64/8":"Asia/Anadyr","6/64/8":"Asia/Anadyr","240/64/8":"Asia/Srednekolymsk","241/64/8":"Asia/Anadyr","256/64/8":"Asia/Anadyr","0/65/8":"Asia/Anadyr","6/65/8":"Asia/Anadyr","240/65/8":"Asia/Magadan","241/65/8":"Asia/Anadyr","256/65/8":"Asia/Anadyr","0/66/8":"Asia/Anadyr","1/66/8":"Asia/Anadyr","2/66/8":"Asia/Anadyr","5/66/8":"Asia/Anadyr","6/66/8":"Asia/Anadyr","241/66/8":"Asia/Magadan","242/66/8":"Asia/Magadan","243/66/8":"Asia/Anadyr","244/66/8":"Asia/Anadyr","245/66/8":"Asia/Anadyr","256/66/8":"Asia/Anadyr","0/67/8":"Asia/Anadyr","2/67/8":"Asia/Anadyr","3/67/8":"Asia/Anadyr","4/67/8":"Asia/Anadyr","5/67/8":"Asia/Anadyr","243/67/8":"Asia/Magadan","244/67/8":"Asia/Kamchatka","245/67/8":"Asia/Kamchatka","246/67/8":"Asia/Kamchatka","247/67/8":"Asia/Anadyr","248/67/8":"Asia/Anadyr","255/67/8":"Asia/Anadyr","256/67/8":"Asia/Anadyr","4/68/8":"Asia/Anadyr","248/68/8":"Asia/Anadyr","255/68/8":"Asia/Anadyr","247/69/8":"Asia/Kamchatka","248/69/8":"Asia/Anadyr","255/69/8":"Asia/Anadyr","0/70/8":"Asia/Anadyr","248/70/8":"Asia/Kamchatka","249/70/8":"Asia/Anadyr","250/70/8":"Asia/Anadyr","251/70/8":"Asia/Anadyr","253/70/8":"Asia/Anadyr","254/70/8":"Asia/Anadyr","255/70/8":"Asia/Anadyr","256/70/8":"Asia/Anadyr","249/71/8":"Asia/Kamchatka","251/71/8":"Asia/Kamchatka","252/71/8":"Asia/Anadyr","253/71/8":"Asia/Anadyr","254/71/8":"Asia/Anadyr","255/71/8":"Asia/Anadyr","167/91/8":"Asia/Aqtau","165/92/8":"Asia/Aqtau","166/92/8":"Asia/Aqtau","165/93/8":"Asia/Aqtau","166/93/8":"Asia/Aqtau","166/90/8":"Asia/Aqtau","167/90/8":"Asia/Aqtobe","168/90/8":"Asia/Aqtobe","163/91/8":"Europe/Astrakhan","164/91/8":"Asia/Aqtau","165/91/8":"Asia/Aqtau","166/91/8":"Asia/Aqtau","168/91/8":"Asia/Aqtobe","163/92/8":"Asia/Aqtau","164/92/8":"Asia/Aqtau","167/92/8":"Asia/Aqtau","168/92/8":"Asia/Samarkand","163/93/8":"Asia/Aqtau","164/93/8":"Asia/Aqtau","167/93/8":"Asia/Aqtau","164/94/8":"Asia/Aqtau","165/94/8":"Asia/Aqtau","166/94/8":"Asia/Aqtau","167/94/8":"Asia/Aqtau","165/95/8":"Asia/Ashgabat","166/95/8":"Asia/Ashgabat","167/95/8":"Asia/Aqtau","168/86/8":"Asia/Aqtobe","167/87/8":"Asia/Aqtobe","168/87/8":"Asia/Aqtobe","169/87/8":"Asia/Aqtobe","170/87/8":"Asia/Aqtobe","171/87/8":"Asia/Aqtobe","168/88/8":"Asia/Aqtobe","169/88/8":"Asia/Aqtobe","170/88/8":"Asia/Aqtobe","171/88/8":"Asia/Aqtobe","168/89/8":"Asia/Aqtobe","169/89/8":"Asia/Aqtobe","170/89/8":"Asia/Aqtobe","169/90/8":"Asia/Aqtobe","166/85/8":"Asia/Yekaterinburg","167/85/8":"Asia/Yekaterinburg","168/85/8":"Asia/Yekaterinburg","169/85/8":"Asia/Yekaterinburg","170/85/8":"Asia/Yekaterinburg","171/85/8":"Asia/Yekaterinburg","172/85/8":"Asia/Qyzylorda","166/86/8":"Asia/Oral","167/86/8":"Asia/Aqtobe","169/86/8":"Asia/Aqtobe","170/86/8":"Asia/Aqtobe","171/86/8":"Asia/Aqtobe","172/86/8":"Asia/Aqtobe","166/87/8":"Asia/Aqtobe","172/87/8":"Asia/Qyzylorda","166/88/8":"Asia/Aqtobe","167/88/8":"Asia/Aqtobe","172/88/8":"Asia/Aqtobe","167/89/8":"Asia/Aqtobe","171/89/8":"Asia/Aqtobe","170/90/8":"Asia/Qyzylorda","171/90/8":"Asia/Qyzylorda","169/91/8":"Asia/Aqtobe","170/91/8":"Asia/Qyzylorda","169/95/8":"Asia/Ashgabat","166/96/8":"Asia/Ashgabat","167/96/8":"Asia/Ashgabat","168/96/8":"Asia/Ashgabat","169/96/8":"Asia/Ashgabat","170/96/8":"Asia/Ashgabat","171/96/8":"Asia/Ashgabat","167/97/8":"Asia/Ashgabat","168/97/8":"Asia/Ashgabat","169/97/8":"Asia/Ashgabat","170/97/8":"Asia/Ashgabat","171/97/8":"Asia/Ashgabat","170/98/8":"Asia/Ashgabat","171/98/8":"Asia/Ashgabat","172/98/8":"Asia/Ashgabat","172/99/8":"Asia/Ashgabat","168/94/8":"Asia/Samarkand","169/94/8":"Asia/Samarkand","170/94/8":"Asia/Samarkand","168/95/8":"Asia/Ashgabat","170/95/8":"Asia/Ashgabat","171/95/8":"Asia/Samarkand","172/95/8":"Asia/Samarkand","165/96/8":"Asia/Ashgabat","172/96/8":"Asia/Samarkand","165/97/8":"Asia/Ashgabat","166/97/8":"Asia/Ashgabat","172/97/8":"Asia/Ashgabat","173/97/8":"Asia/Samarkand","165/98/8":"Asia/Ashgabat","166/98/8":"Asia/Ashgabat","167/98/8":"Asia/Ashgabat","168/98/8":"Asia/Ashgabat","169/98/8":"Asia/Ashgabat","173/98/8":"Asia/Ashgabat","174/98/8":"Asia/Ashgabat","175/98/8":"Asia/Samarkand","166/99/8":"Asia/Tehran","169/99/8":"Asia/Tehran","170/99/8":"Asia/Ashgabat","171/99/8":"Asia/Ashgabat","173/99/8":"Asia/Ashgabat","174/99/8":"Asia/Kabul","175/99/8":"Asia/Kabul","171/100/8":"Asia/Tehran","172/100/8":"Asia/Ashgabat","173/100/8":"Asia/Kabul","171/101/8":"Asia/Kabul","172/101/8":"Asia/Kabul","158/100/8":"Asia/Baghdad","159/100/8":"Asia/Baghdad","158/101/8":"Asia/Baghdad","159/101/8":"Asia/Baghdad","157/102/8":"Asia/Baghdad","158/102/8":"Asia/Baghdad","159/102/8":"Asia/Baghdad","157/103/8":"Asia/Baghdad","158/103/8":"Asia/Baghdad","159/103/8":"Asia/Baghdad","159/104/8":"Asia/Baghdad","160/104/8":"Asia/Baghdad","160/105/8":"Asia/Baghdad","157/99/8":"Europe/Istanbul","158/99/8":"Asia/Baghdad","159/99/8":"Asia/Baghdad","160/99/8":"Asia/Tehran","157/100/8":"Asia/Baghdad","160/100/8":"Asia/Tehran","156/101/8":"Asia/Damascus","157/101/8":"Asia/Baghdad","160/101/8":"Asia/Baghdad","156/102/8":"Asia/Baghdad","160/102/8":"Asia/Baghdad","156/103/8":"Asia/Baghdad","160/103/8":"Asia/Baghdad","161/103/8":"Asia/Tehran","156/104/8":"Asia/Riyadh","157/104/8":"Asia/Riyadh","158/104/8":"Asia/Baghdad","161/104/8":"Asia/Baghdad","162/104/8":"Asia/Tehran","158/105/8":"Asia/Riyadh","159/105/8":"Asia/Baghdad","161/105/8":"Asia/Baghdad","162/105/8":"Asia/Tehran","159/106/8":"Asia/Riyadh","160/106/8":"Asia/Riyadh","161/106/8":"Asia/Riyadh","163/108/8":"Asia/Riyadh","164/108/8":"Asia/Qatar","163/109/8":"Asia/Riyadh","164/109/8":"Asia/Qatar","161/96/8":"Asia/Baku","162/96/8":"Asia/Baku","159/95/8":"Asia/Tbilisi","160/95/8":"Asia/Tbilisi","161/95/8":"Europe/Moscow","162/95/8":"Asia/Baku","163/95/8":"Asia/Baku","160/96/8":"Asia/Baku","163/96/8":"Asia/Baku","164/96/8":"Asia/Baku","159/97/8":"Europe/Istanbul","160/97/8":"Asia/Baku","161/97/8":"Asia/Baku","162/97/8":"Asia/Baku","163/97/8":"Asia/Baku","162/98/8":"Asia/Tehran","163/98/8":"Asia/Baku","198/114/8":"Asia/Bangkok","199/116/8":"Asia/Bangkok","200/116/8":"Asia/Bangkok","201/116/8":"Asia/Bangkok","199/117/8":"Asia/Bangkok","200/117/8":"Asia/Bangkok","199/118/8":"Asia/Bangkok","198/121/8":"Asia/Bangkok","197/113/8":"Asia/Rangoon","198/113/8":"Asia/Bangkok","199/113/8":"Asia/Vientiane","200/113/8":"Asia/Vientiane","197/114/8":"Asia/Bangkok","199/114/8":"Asia/Bangkok","200/114/8":"Asia/Vientiane","201/114/8":"Asia/Vientiane","202/114/8":"Asia/Vientiane","197/115/8":"Asia/Rangoon","198/115/8":"Asia/Bangkok","199/115/8":"Asia/Bangkok","200/115/8":"Asia/Bangkok","201/115/8":"Asia/Bangkok","202/115/8":"Asia/Vientiane","197/116/8":"Asia/Rangoon","198/116/8":"Asia/Bangkok","202/116/8":"Asia/Bangkok","203/116/8":"Asia/Vientiane","197/117/8":"Asia/Rangoon","198/117/8":"Asia/Bangkok","201/117/8":"Asia/Bangkok","202/117/8":"Asia/Bangkok","203/117/8":"Asia/Vientiane","198/118/8":"Asia/Rangoon","200/118/8":"Asia/Bangkok","201/118/8":"Asia/Phnom_Penh","198/119/8":"Asia/Rangoon","199/119/8":"Asia/Bangkok","200/119/8":"Asia/Bangkok","201/119/8":"Asia/Phnom_Penh","197/120/8":"Asia/Rangoon","198/120/8":"Asia/Bangkok","199/120/8":"Asia/Bangkok","197/121/8":"Asia/Bangkok","199/121/8":"Asia/Bangkok","197/122/8":"Asia/Bangkok","198/122/8":"Asia/Bangkok","199/122/8":"Asia/Bangkok","200/122/8":"Asia/Bangkok","198/123/8":"Asia/Bangkok","199/123/8":"Asia/Kuala_Lumpur","200/123/8":"Asia/Bangkok","199/124/8":"Asia/Kuala_Lumpur","184/83/8":"Asia/Barnaul","185/83/8":"Asia/Barnaul","186/83/8":"Asia/Barnaul","187/83/8":"Asia/Barnaul","188/83/8":"Asia/Barnaul","185/84/8":"Asia/Barnaul","186/84/8":"Asia/Barnaul","187/84/8":"Asia/Barnaul","188/84/8":"Asia/Barnaul","189/84/8":"Asia/Barnaul","188/85/8":"Asia/Barnaul","189/85/8":"Asia/Barnaul","189/86/8":"Asia/Barnaul","190/86/8":"Asia/Barnaul","185/81/8":"Asia/Novosibirsk","187/81/8":"Asia/Novosibirsk","188/81/8":"Asia/Novokuznetsk","184/82/8":"Asia/Barnaul","185/82/8":"Asia/Barnaul","186/82/8":"Asia/Novosibirsk","187/82/8":"Asia/Barnaul","188/82/8":"Asia/Barnaul","189/82/8":"Asia/Novokuznetsk","189/83/8":"Asia/Barnaul","190/83/8":"Asia/Novokuznetsk","190/84/8":"Asia/Barnaul","190/85/8":"Asia/Barnaul","191/85/8":"Asia/Krasnoyarsk","191/86/8":"Asia/Barnaul","191/87/8":"Asia/Hovd","153/101/8":"Asia/Damascus","154/101/8":"Asia/Damascus","152/102/8":"Asia/Beirut","153/102/8":"Asia/Beirut","154/102/8":"Asia/Damascus","152/103/8":"Asia/Jerusalem","180/95/8":"Asia/Bishkek","181/95/8":"Asia/Bishkek","179/95/8":"Asia/Bishkek","182/95/8":"Asia/Bishkek","183/95/8":"Asia/Bishkek","184/95/8":"Asia/Kashgar","177/96/8":"Asia/Dushanbe","178/96/8":"Asia/Tashkent","179/96/8":"Asia/Bishkek","180/96/8":"Asia/Bishkek","181/96/8":"Asia/Bishkek","182/96/8":"Asia/Kashgar","177/97/8":"Asia/Dushanbe","178/97/8":"Asia/Dushanbe","179/97/8":"Asia/Bishkek","180/97/8":"Asia/Kashgar","209/124/8":"Asia/Brunei","210/124/8":"Asia/Kuching","209/125/8":"Asia/Kuching","212/78/8":"Asia/Chita","211/79/8":"Asia/Chita","212/79/8":"Asia/Chita","212/80/8":"Asia/Chita","213/80/8":"Asia/Chita","212/81/8":"Asia/Chita","213/81/8":"Asia/Chita","210/82/8":"Asia/Chita","211/82/8":"Asia/Chita","212/82/8":"Asia/Chita","213/82/8":"Asia/Chita","210/83/8":"Asia/Chita","211/83/8":"Asia/Chita","212/83/8":"Asia/Chita","209/84/8":"Asia/Chita","210/84/8":"Asia/Chita","211/84/8":"Asia/Chita","212/84/8":"Asia/Chita","207/85/8":"Asia/Chita","208/85/8":"Asia/Chita","209/85/8":"Asia/Chita","210/85/8":"Asia/Chita","211/85/8":"Asia/Chita","206/86/8":"Asia/Chita","207/86/8":"Asia/Chita","211/76/8":"Asia/Irkutsk","212/76/8":"Asia/Irkutsk","211/77/8":"Asia/Chita","212/77/8":"Asia/Chita","213/77/8":"Asia/Yakutsk","210/78/8":"Asia/Irkutsk","211/78/8":"Asia/Chita","213/78/8":"Asia/Yakutsk","210/79/8":"Asia/Chita","213/79/8":"Asia/Chita","214/79/8":"Asia/Yakutsk","210/80/8":"Asia/Irkutsk","211/80/8":"Asia/Chita","214/80/8":"Asia/Chita","209/81/8":"Asia/Irkutsk","210/81/8":"Asia/Irkutsk","211/81/8":"Asia/Chita","214/81/8":"Asia/Chita","208/82/8":"Asia/Irkutsk","209/82/8":"Asia/Chita","214/82/8":"Asia/Chita","208/83/8":"Asia/Irkutsk","209/83/8":"Asia/Chita","213/83/8":"Asia/Chita","214/83/8":"Asia/Harbin","206/84/8":"Asia/Irkutsk","207/84/8":"Asia/Chita","208/84/8":"Asia/Chita","213/84/8":"Asia/Chita","204/85/8":"Asia/Irkutsk","205/85/8":"Asia/Chita","206/85/8":"Asia/Chita","212/85/8":"Asia/Chita","213/85/8":"Asia/Shanghai","204/86/8":"Asia/Irkutsk","205/86/8":"Asia/Chita","208/86/8":"Asia/Chita","209/86/8":"Asia/Chita","210/86/8":"Asia/Chita","211/86/8":"Asia/Chita","212/86/8":"Asia/Chita","204/87/8":"Asia/Ulaanbaatar","205/87/8":"Asia/Chita","206/87/8":"Asia/Chita","207/87/8":"Asia/Chita","208/87/8":"Asia/Choibalsan","211/87/8":"Asia/Shanghai","212/87/8":"Asia/Shanghai","209/87/8":"Asia/Choibalsan","209/88/8":"Asia/Choibalsan","209/89/8":"Asia/Choibalsan","208/90/8":"Asia/Choibalsan","209/90/8":"Asia/Choibalsan","208/91/8":"Asia/Choibalsan","210/87/8":"Asia/Choibalsan","207/88/8":"Asia/Ulaanbaatar","208/88/8":"Asia/Choibalsan","210/88/8":"Asia/Shanghai","211/88/8":"Asia/Shanghai","212/88/8":"Asia/Shanghai","207/89/8":"Asia/Ulaanbaatar","208/89/8":"Asia/Choibalsan","210/89/8":"Asia/Choibalsan","211/89/8":"Asia/Choibalsan","212/89/8":"Asia/Choibalsan","213/89/8":"Asia/Shanghai","207/90/8":"Asia/Choibalsan","210/90/8":"Asia/Choibalsan","211/90/8":"Asia/Choibalsan","212/90/8":"Asia/Shanghai","213/90/8":"Asia/Shanghai","207/91/8":"Asia/Choibalsan","209/91/8":"Asia/Choibalsan","210/91/8":"Asia/Shanghai","207/92/8":"Asia/Shanghai","208/92/8":"Asia/Shanghai","209/92/8":"Asia/Shanghai","198/95/8":"Asia/Chongqing","199/95/8":"Asia/Chongqing","200/95/8":"Asia/Chongqing","204/95/8":"Asia/Chongqing","205/95/8":"Asia/Chongqing","206/95/8":"Asia/Chongqing","207/95/8":"Asia/Chongqing","200/96/8":"Asia/Chongqing","201/96/8":"Asia/Chongqing","202/96/8":"Asia/Chongqing","203/96/8":"Asia/Chongqing","204/96/8":"Asia/Chongqing","205/96/8":"Asia/Chongqing","206/96/8":"Asia/Chongqing","199/97/8":"Asia/Chongqing","200/97/8":"Asia/Chongqing","201/97/8":"Asia/Chongqing","202/97/8":"Asia/Chongqing","203/97/8":"Asia/Chongqing","204/97/8":"Asia/Chongqing","205/97/8":"Asia/Chongqing","199/98/8":"Asia/Chongqing","200/98/8":"Asia/Chongqing","201/98/8":"Asia/Chongqing","202/98/8":"Asia/Chongqing","203/98/8":"Asia/Chongqing","204/98/8":"Asia/Chongqing","205/98/8":"Asia/Chongqing","199/99/8":"Asia/Chongqing","200/99/8":"Asia/Chongqing","201/99/8":"Asia/Chongqing","202/99/8":"Asia/Chongqing","203/99/8":"Asia/Chongqing","204/99/8":"Asia/Chongqing","205/99/8":"Asia/Chongqing","199/100/8":"Asia/Chongqing","200/100/8":"Asia/Chongqing","201/100/8":"Asia/Chongqing","202/100/8":"Asia/Chongqing","203/100/8":"Asia/Chongqing","204/100/8":"Asia/Chongqing","205/100/8":"Asia/Chongqing","199/101/8":"Asia/Chongqing","200/101/8":"Asia/Chongqing","201/101/8":"Asia/Chongqing","202/101/8":"Asia/Chongqing","203/101/8":"Asia/Chongqing","204/101/8":"Asia/Chongqing","205/101/8":"Asia/Chongqing","199/102/8":"Asia/Chongqing","200/102/8":"Asia/Chongqing","201/102/8":"Asia/Chongqing","202/102/8":"Asia/Chongqing","203/102/8":"Asia/Chongqing","204/102/8":"Asia/Chongqing","198/103/8":"Asia/Chongqing","199/103/8":"Asia/Chongqing","200/103/8":"Asia/Chongqing","201/103/8":"Asia/Chongqing","202/103/8":"Asia/Chongqing","203/103/8":"Asia/Chongqing","204/103/8":"Asia/Chongqing","199/104/8":"Asia/Chongqing","200/104/8":"Asia/Chongqing","201/104/8":"Asia/Chongqing","202/104/8":"Asia/Chongqing","203/104/8":"Asia/Chongqing","204/104/8":"Asia/Chongqing","199/105/8":"Asia/Chongqing","200/105/8":"Asia/Chongqing","201/105/8":"Asia/Chongqing","202/105/8":"Asia/Chongqing","203/105/8":"Asia/Chongqing","204/105/8":"Asia/Chongqing","199/106/8":"Asia/Chongqing","200/106/8":"Asia/Chongqing","201/106/8":"Asia/Chongqing","202/106/8":"Asia/Chongqing","203/106/8":"Asia/Chongqing","204/106/8":"Asia/Chongqing","199/107/8":"Asia/Chongqing","200/107/8":"Asia/Chongqing","201/107/8":"Asia/Chongqing","202/107/8":"Asia/Chongqing","203/107/8":"Asia/Chongqing","204/107/8":"Asia/Chongqing","199/108/8":"Asia/Chongqing","200/108/8":"Asia/Chongqing","201/108/8":"Asia/Chongqing","202/108/8":"Asia/Chongqing","203/108/8":"Asia/Chongqing","204/108/8":"Asia/Chongqing","199/109/8":"Asia/Chongqing","200/109/8":"Asia/Chongqing","201/109/8":"Asia/Chongqing","202/109/8":"Asia/Chongqing","203/109/8":"Asia/Chongqing","204/109/8":"Asia/Chongqing","205/109/8":"Asia/Chongqing","199/110/8":"Asia/Chongqing","200/110/8":"Asia/Chongqing","201/110/8":"Asia/Chongqing","204/110/8":"Asia/Chongqing","205/110/8":"Asia/Chongqing","206/110/8":"Asia/Chongqing","205/111/8":"Asia/Chongqing","206/93/8":"Asia/Ulaanbaatar","207/93/8":"Asia/Shanghai","197/94/8":"Asia/Chongqing","198/94/8":"Asia/Chongqing","199/94/8":"Asia/Chongqing","200/94/8":"Asia/Ulaanbaatar","201/94/8":"Asia/Ulaanbaatar","203/94/8":"Asia/Ulaanbaatar","204/94/8":"Asia/Ulaanbaatar","205/94/8":"Asia/Ulaanbaatar","206/94/8":"Asia/Chongqing","207/94/8":"Asia/Chongqing","208/94/8":"Asia/Shanghai","209/94/8":"Asia/Shanghai","197/95/8":"Asia/Urumqi","201/95/8":"Asia/Chongqing","202/95/8":"Asia/Chongqing","203/95/8":"Asia/Chongqing","208/95/8":"Asia/Chongqing","209/95/8":"Asia/Shanghai","197/96/8":"Asia/Urumqi","198/96/8":"Asia/Urumqi","199/96/8":"Asia/Chongqing","207/96/8":"Asia/Chongqing","208/96/8":"Asia/Chongqing","209/96/8":"Asia/Shanghai","197/97/8":"Asia/Chongqing","198/97/8":"Asia/Chongqing","206/97/8":"Asia/Chongqing","207/97/8":"Asia/Shanghai","197/98/8":"Asia/Urumqi","198/98/8":"Asia/Chongqing","206/98/8":"Asia/Chongqing","198/99/8":"Asia/Urumqi","206/99/8":"Asia/Chongqing","198/100/8":"Asia/Chongqing","206/100/8":"Asia/Chongqing","198/101/8":"Asia/Chongqing","206/101/8":"Asia/Shanghai","197/102/8":"Asia/Chongqing","198/102/8":"Asia/Chongqing","205/102/8":"Asia/Chongqing","206/102/8":"Asia/Chongqing","197/103/8":"Asia/Urumqi","205/103/8":"Asia/Chongqing","206/103/8":"Asia/Shanghai","197/104/8":"Asia/Urumqi","198/104/8":"Asia/Chongqing","205/104/8":"Asia/Chongqing","206/104/8":"Asia/Shanghai","198/105/8":"Asia/Chongqing","205/105/8":"Asia/Shanghai","197/106/8":"Asia/Urumqi","198/106/8":"Asia/Chongqing","205/106/8":"Asia/Chongqing","197/107/8":"Asia/Rangoon","198/107/8":"Asia/Chongqing","205/107/8":"Asia/Chongqing","198/108/8":"Asia/Chongqing","205/108/8":"Asia/Chongqing","206/108/8":"Asia/Shanghai","207/108/8":"Asia/Shanghai","197/109/8":"Asia/Rangoon","198/109/8":"Asia/Chongqing","206/109/8":"Asia/Chongqing","207/109/8":"Asia/Shanghai","197/110/8":"Asia/Rangoon","198/110/8":"Asia/Chongqing","202/110/8":"Asia/Chongqing","203/110/8":"Asia/Chongqing","207/110/8":"Asia/Chongqing","198/111/8":"Asia/Rangoon","199/111/8":"Asia/Chongqing","200/111/8":"Asia/Chongqing","201/111/8":"Asia/Ho_Chi_Minh","202/111/8":"Asia/Ho_Chi_Minh","203/111/8":"Asia/Ho_Chi_Minh","204/111/8":"Asia/Chongqing","206/111/8":"Asia/Chongqing","207/111/8":"Asia/Chongqing","208/111/8":"Asia/Shanghai","199/112/8":"Asia/Rangoon","200/112/8":"Asia/Vientiane","204/112/8":"Asia/Ho_Chi_Minh","205/112/8":"Asia/Chongqing","206/112/8":"Asia/Urumqi","207/112/8":"Asia/Chongqing","208/112/8":"Asia/Chongqing","205/113/8":"Asia/Chongqing","206/113/8":"Asia/Chongqing","207/113/8":"Asia/Chongqing","205/114/8":"Asia/Chongqing","206/114/8":"Asia/Chongqing","207/114/8":"Asia/Chongqing","205/115/8":"Asia/Chongqing","206/115/8":"Asia/Chongqing","207/115/8":"Asia/Chongqing","208/115/8":"Asia/Chongqing","206/116/8":"Asia/Chongqing","207/116/8":"Asia/Chongqing","208/116/8":"Asia/Chongqing","211/116/8":"Asia/Chongqing","211/117/8":"Asia/Chongqing","185/122/8":"Asia/Colombo","184/120/8":"Asia/Kolkata","185/120/8":"Asia/Colombo","184/121/8":"Asia/Colombo","185/121/8":"Asia/Colombo","186/121/8":"Asia/Colombo","184/122/8":"Asia/Colombo","186/122/8":"Asia/Colombo","184/123/8":"Asia/Colombo","185/123/8":"Asia/Colombo","186/123/8":"Asia/Colombo","155/100/8":"Asia/Damascus","156/100/8":"Asia/Damascus","155/101/8":"Asia/Damascus","154/99/8":"Europe/Istanbul","155/99/8":"Europe/Istanbul","156/99/8":"Europe/Istanbul","153/100/8":"Europe/Istanbul","154/100/8":"Asia/Damascus","190/108/8":"Asia/Kolkata","191/108/8":"Asia/Kolkata","190/109/8":"Asia/Kolkata","191/109/8":"Asia/Dhaka","192/109/8":"Asia/Dhaka","193/109/8":"Asia/Kolkata","190/110/8":"Asia/Kolkata","191/110/8":"Asia/Dhaka","192/110/8":"Asia/Dhaka","193/110/8":"Asia/Kolkata","191/111/8":"Asia/Dhaka","192/111/8":"Asia/Dhaka","193/111/8":"Asia/Dhaka","191/112/8":"Asia/Dhaka","192/112/8":"Asia/Dhaka","193/112/8":"Asia/Dhaka","193/113/8":"Asia/Rangoon","217/133/8":"Asia/Jayapura","218/133/8":"Asia/Jayapura","216/134/8":"Asia/Makassar","217/134/8":"Asia/Dili","218/134/8":"Asia/Dili","167/108/8":"Asia/Tehran","165/109/8":"Asia/Dubai","166/109/8":"Asia/Dubai","167/109/8":"Asia/Dubai","168/109/8":"Asia/Muscat","164/110/8":"Asia/Riyadh","165/110/8":"Asia/Dubai","166/110/8":"Asia/Dubai","167/110/8":"Asia/Dubai","165/111/8":"Asia/Riyadh","166/111/8":"Asia/Riyadh","167/111/8":"Asia/Muscat","179/98/8":"Asia/Dushanbe","175/97/8":"Asia/Samarkand","176/97/8":"Asia/Dushanbe","176/98/8":"Asia/Dushanbe","177/98/8":"Asia/Dushanbe","178/98/8":"Asia/Dushanbe","180/98/8":"Asia/Dushanbe","181/98/8":"Asia/Kashgar","176/99/8":"Asia/Kabul","177/99/8":"Asia/Kabul","178/99/8":"Asia/Kabul","179/99/8":"Asia/Dushanbe","180/99/8":"Asia/Kabul","181/99/8":"Asia/Kashgar","215/83/8":"Asia/Harbin","217/88/8":"Asia/Harbin","218/88/8":"Asia/Harbin","219/88/8":"Asia/Harbin","216/89/8":"Asia/Harbin","217/89/8":"Asia/Harbin","218/89/8":"Asia/Harbin","219/89/8":"Asia/Harbin","216/90/8":"Asia/Harbin","217/90/8":"Asia/Harbin","218/90/8":"Asia/Harbin","219/90/8":"Asia/Harbin","220/90/8":"Asia/Harbin","221/90/8":"Asia/Harbin","222/90/8":"Asia/Harbin","216/91/8":"Asia/Harbin","217/91/8":"Asia/Harbin","218/91/8":"Asia/Harbin","219/91/8":"Asia/Harbin","220/91/8":"Asia/Harbin","216/92/8":"Asia/Harbin","217/92/8":"Asia/Harbin","218/92/8":"Asia/Harbin","219/92/8":"Asia/Harbin","220/92/8":"Asia/Harbin","217/93/8":"Asia/Harbin","218/93/8":"Asia/Harbin","219/93/8":"Asia/Harbin","220/93/8":"Asia/Harbin","218/94/8":"Asia/Harbin","215/82/8":"Asia/Yakutsk","216/82/8":"Asia/Yakutsk","216/83/8":"Asia/Harbin","217/83/8":"Asia/Yakutsk","214/84/8":"Asia/Shanghai","215/84/8":"Asia/Harbin","216/84/8":"Asia/Harbin","217/84/8":"Asia/Harbin","218/84/8":"Asia/Yakutsk","215/85/8":"Asia/Shanghai","216/85/8":"Asia/Shanghai","217/85/8":"Asia/Harbin","218/85/8":"Asia/Yakutsk","217/86/8":"Asia/Harbin","218/86/8":"Asia/Harbin","216/87/8":"Asia/Shanghai","217/87/8":"Asia/Harbin","218/87/8":"Asia/Harbin","219/87/8":"Asia/Harbin","220/87/8":"Asia/Yakutsk","215/88/8":"Asia/Shanghai","216/88/8":"Asia/Harbin","220/88/8":"Asia/Harbin","221/88/8":"Asia/Vladivostok","222/88/8":"Asia/Vladivostok","223/88/8":"Asia/Vladivostok","215/89/8":"Asia/Harbin","220/89/8":"Asia/Harbin","221/89/8":"Asia/Harbin","222/89/8":"Asia/Harbin","223/89/8":"Asia/Harbin","215/90/8":"Asia/Shanghai","223/90/8":"Asia/Vladivostok","214/91/8":"Asia/Shanghai","215/91/8":"Asia/Harbin","221/91/8":"Asia/Harbin","222/91/8":"Asia/Harbin","223/91/8":"Asia/Vladivostok","214/92/8":"Asia/Shanghai","215/92/8":"Asia/Harbin","221/92/8":"Asia/Vladivostok","222/92/8":"Asia/Vladivostok","215/93/8":"Asia/Shanghai","216/93/8":"Asia/Harbin","221/93/8":"Asia/Vladivostok","216/94/8":"Asia/Shanghai","217/94/8":"Asia/Harbin","219/94/8":"Asia/Harbin","220/94/8":"Asia/Pyongyang","221/94/8":"Asia/Vladivostok","217/95/8":"Asia/Harbin","218/95/8":"Asia/Pyongyang","219/95/8":"Asia/Pyongyang","217/96/8":"Asia/Pyongyang","203/112/8":"Asia/Ho_Chi_Minh","204/120/8":"Asia/Ho_Chi_Minh","201/112/8":"Asia/Ho_Chi_Minh","202/112/8":"Asia/Ho_Chi_Minh","201/113/8":"Asia/Vientiane","202/113/8":"Asia/Ho_Chi_Minh","203/113/8":"Asia/Ho_Chi_Minh","204/113/8":"Asia/Ho_Chi_Minh","203/114/8":"Asia/Ho_Chi_Minh","203/115/8":"Asia/Ho_Chi_Minh","204/115/8":"Asia/Ho_Chi_Minh","204/116/8":"Asia/Ho_Chi_Minh","205/116/8":"Asia/Ho_Chi_Minh","204/117/8":"Asia/Ho_Chi_Minh","205/117/8":"Asia/Ho_Chi_Minh","204/118/8":"Asia/Ho_Chi_Minh","205/118/8":"Asia/Ho_Chi_Minh","203/119/8":"Asia/Phnom_Penh","204/119/8":"Asia/Ho_Chi_Minh","205/119/8":"Asia/Ho_Chi_Minh","209/119/8":"Asia/Ho_Chi_Minh","201/120/8":"Asia/Phnom_Penh","202/120/8":"Asia/Ho_Chi_Minh","203/120/8":"Asia/Ho_Chi_Minh","205/120/8":"Asia/Ho_Chi_Minh","201/121/8":"Asia/Ho_Chi_Minh","202/121/8":"Asia/Ho_Chi_Minh","203/121/8":"Asia/Ho_Chi_Minh","204/121/8":"Asia/Ho_Chi_Minh","205/121/8":"Asia/Ho_Chi_Minh","207/121/8":"Asia/Ho_Chi_Minh","202/122/8":"Asia/Ho_Chi_Minh","203/122/8":"Asia/Ho_Chi_Minh","209/111/8":"Asia/Shanghai","192/87/8":"Asia/Hovd","193/87/8":"Asia/Hovd","194/87/8":"Asia/Hovd","195/87/8":"Asia/Hovd","192/88/8":"Asia/Hovd","193/88/8":"Asia/Hovd","194/88/8":"Asia/Hovd","195/88/8":"Asia/Hovd","196/88/8":"Asia/Hovd","193/89/8":"Asia/Hovd","194/89/8":"Asia/Hovd","195/89/8":"Asia/Hovd","196/89/8":"Asia/Hovd","193/90/8":"Asia/Hovd","194/90/8":"Asia/Hovd","195/90/8":"Asia/Hovd","196/90/8":"Asia/Hovd","194/91/8":"Asia/Hovd","195/91/8":"Asia/Hovd","196/91/8":"Asia/Hovd","196/92/8":"Asia/Hovd","193/85/8":"Asia/Krasnoyarsk","194/85/8":"Asia/Krasnoyarsk","192/86/8":"Asia/Krasnoyarsk","193/86/8":"Asia/Hovd","194/86/8":"Asia/Hovd","195/86/8":"Asia/Krasnoyarsk","196/86/8":"Asia/Krasnoyarsk","196/87/8":"Asia/Hovd","197/87/8":"Asia/Ulaanbaatar","198/87/8":"Asia/Ulaanbaatar","190/88/8":"Asia/Urumqi","191/88/8":"Asia/Hovd","197/88/8":"Asia/Hovd","198/88/8":"Asia/Ulaanbaatar","191/89/8":"Asia/Urumqi","192/89/8":"Asia/Hovd","197/89/8":"Asia/Hovd","192/90/8":"Asia/Urumqi","197/90/8":"Asia/Hovd","192/91/8":"Asia/Urumqi","193/91/8":"Asia/Hovd","197/91/8":"Asia/Hovd","198/91/8":"Asia/Ulaanbaatar","193/92/8":"Asia/Urumqi","194/92/8":"Asia/Urumqi","195/92/8":"Asia/Hovd","197/92/8":"Asia/Hovd","195/93/8":"Asia/Urumqi","196/93/8":"Asia/Hovd","197/93/8":"Asia/Hovd","196/94/8":"Asia/Urumqi","204/69/8":"Asia/Irkutsk","204/70/8":"Asia/Irkutsk","204/71/8":"Asia/Irkutsk","204/72/8":"Asia/Irkutsk","205/72/8":"Asia/Irkutsk","204/73/8":"Asia/Irkutsk","205/73/8":"Asia/Irkutsk","204/74/8":"Asia/Irkutsk","210/74/8":"Asia/Irkutsk","203/75/8":"Asia/Irkutsk","204/75/8":"Asia/Irkutsk","209/75/8":"Asia/Irkutsk","210/75/8":"Asia/Irkutsk","203/76/8":"Asia/Irkutsk","204/76/8":"Asia/Irkutsk","205/76/8":"Asia/Irkutsk","206/76/8":"Asia/Irkutsk","207/76/8":"Asia/Irkutsk","208/76/8":"Asia/Irkutsk","209/76/8":"Asia/Irkutsk","210/76/8":"Asia/Irkutsk","200/77/8":"Asia/Irkutsk","201/77/8":"Asia/Irkutsk","202/77/8":"Asia/Irkutsk","203/77/8":"Asia/Irkutsk","204/77/8":"Asia/Irkutsk","205/77/8":"Asia/Irkutsk","206/77/8":"Asia/Irkutsk","207/77/8":"Asia/Irkutsk","208/77/8":"Asia/Irkutsk","209/77/8":"Asia/Irkutsk","210/77/8":"Asia/Irkutsk","198/78/8":"Asia/Irkutsk","199/78/8":"Asia/Irkutsk","200/78/8":"Asia/Irkutsk","201/78/8":"Asia/Irkutsk","202/78/8":"Asia/Irkutsk","203/78/8":"Asia/Irkutsk","204/78/8":"Asia/Irkutsk","205/78/8":"Asia/Irkutsk","206/78/8":"Asia/Irkutsk","207/78/8":"Asia/Irkutsk","208/78/8":"Asia/Irkutsk","209/78/8":"Asia/Irkutsk","198/79/8":"Asia/Irkutsk","199/79/8":"Asia/Irkutsk","200/79/8":"Asia/Irkutsk","201/79/8":"Asia/Irkutsk","202/79/8":"Asia/Irkutsk","203/79/8":"Asia/Irkutsk","204/79/8":"Asia/Irkutsk","205/79/8":"Asia/Irkutsk","206/79/8":"Asia/Irkutsk","207/79/8":"Asia/Irkutsk","208/79/8":"Asia/Irkutsk","209/79/8":"Asia/Irkutsk","197/80/8":"Asia/Irkutsk","198/80/8":"Asia/Irkutsk","199/80/8":"Asia/Irkutsk","200/80/8":"Asia/Irkutsk","201/80/8":"Asia/Irkutsk","202/80/8":"Asia/Irkutsk","203/80/8":"Asia/Irkutsk","204/80/8":"Asia/Irkutsk","205/80/8":"Asia/Irkutsk","206/80/8":"Asia/Irkutsk","207/80/8":"Asia/Irkutsk","208/80/8":"Asia/Irkutsk","209/80/8":"Asia/Irkutsk","197/81/8":"Asia/Irkutsk","198/81/8":"Asia/Irkutsk","199/81/8":"Asia/Irkutsk","200/81/8":"Asia/Irkutsk","201/81/8":"Asia/Irkutsk","202/81/8":"Asia/Irkutsk","203/81/8":"Asia/Irkutsk","204/81/8":"Asia/Irkutsk","205/81/8":"Asia/Irkutsk","206/81/8":"Asia/Irkutsk","207/81/8":"Asia/Irkutsk","208/81/8":"Asia/Irkutsk","198/82/8":"Asia/Irkutsk","199/82/8":"Asia/Irkutsk","200/82/8":"Asia/Irkutsk","201/82/8":"Asia/Irkutsk","202/82/8":"Asia/Irkutsk","203/82/8":"Asia/Irkutsk","204/82/8":"Asia/Irkutsk","205/82/8":"Asia/Irkutsk","206/82/8":"Asia/Irkutsk","207/82/8":"Asia/Irkutsk","199/83/8":"Asia/Irkutsk","200/83/8":"Asia/Irkutsk","201/83/8":"Asia/Irkutsk","202/83/8":"Asia/Irkutsk","203/83/8":"Asia/Irkutsk","204/83/8":"Asia/Irkutsk","205/83/8":"Asia/Irkutsk","206/83/8":"Asia/Irkutsk","207/83/8":"Asia/Irkutsk","200/84/8":"Asia/Irkutsk","201/84/8":"Asia/Irkutsk","202/84/8":"Asia/Irkutsk","203/84/8":"Asia/Irkutsk","204/84/8":"Asia/Irkutsk","205/84/8":"Asia/Irkutsk","201/85/8":"Asia/Irkutsk","202/85/8":"Asia/Irkutsk","203/85/8":"Asia/Irkutsk","204/67/8":"Asia/Yakutsk","205/67/8":"Asia/Yakutsk","203/68/8":"Asia/Krasnoyarsk","204/68/8":"Asia/Irkutsk","205/68/8":"Asia/Yakutsk","203/69/8":"Asia/Krasnoyarsk","205/69/8":"Asia/Irkutsk","203/70/8":"Asia/Krasnoyarsk","205/70/8":"Asia/Irkutsk","206/70/8":"Asia/Yakutsk","203/71/8":"Asia/Irkutsk","205/71/8":"Asia/Irkutsk","206/71/8":"Asia/Yakutsk","202/72/8":"Asia/Krasnoyarsk","203/72/8":"Asia/Irkutsk","206/72/8":"Asia/Yakutsk","202/73/8":"Asia/Irkutsk","203/73/8":"Asia/Irkutsk","206/73/8":"Asia/Yakutsk","209/73/8":"Asia/Yakutsk","210/73/8":"Asia/Yakutsk","211/73/8":"Asia/Yakutsk","202/74/8":"Asia/Krasnoyarsk","203/74/8":"Asia/Irkutsk","205/74/8":"Asia/Irkutsk","206/74/8":"Asia/Yakutsk","208/74/8":"Asia/Yakutsk","209/74/8":"Asia/Irkutsk","211/74/8":"Asia/Yakutsk","212/74/8":"Asia/Yakutsk","200/75/8":"Asia/Krasnoyarsk","201/75/8":"Asia/Krasnoyarsk","202/75/8":"Asia/Krasnoyarsk","205/75/8":"Asia/Irkutsk","206/75/8":"Asia/Yakutsk","207/75/8":"Asia/Irkutsk","208/75/8":"Asia/Irkutsk","211/75/8":"Asia/Irkutsk","212/75/8":"Asia/Yakutsk","198/76/8":"Asia/Krasnoyarsk","199/76/8":"Asia/Krasnoyarsk","200/76/8":"Asia/Irkutsk","201/76/8":"Asia/Irkutsk","202/76/8":"Asia/Irkutsk","197/77/8":"Asia/Krasnoyarsk","198/77/8":"Asia/Irkutsk","199/77/8":"Asia/Irkutsk","197/78/8":"Asia/Irkutsk","196/79/8":"Asia/Krasnoyarsk","197/79/8":"Asia/Irkutsk","196/80/8":"Asia/Krasnoyarsk","196/81/8":"Asia/Irkutsk","196/82/8":"Asia/Krasnoyarsk","197/82/8":"Asia/Irkutsk","197/83/8":"Asia/Krasnoyarsk","198/83/8":"Asia/Irkutsk","198/84/8":"Asia/Irkutsk","199/84/8":"Asia/Irkutsk","199/85/8":"Asia/Ulaanbaatar","200/85/8":"Asia/Ulaanbaatar","200/86/8":"Asia/Ulaanbaatar","201/86/8":"Asia/Irkutsk","202/86/8":"Asia/Ulaanbaatar","203/86/8":"Asia/Ulaanbaatar","196/125/8":"Asia/Jakarta","197/125/8":"Asia/Jakarta","197/126/8":"Asia/Jakarta","198/126/8":"Asia/Jakarta","203/126/8":"Asia/Jakarta","204/126/8":"Asia/Jakarta","198/127/8":"Asia/Jakarta","199/127/8":"Asia/Jakarta","200/127/8":"Asia/Jakarta","203/127/8":"Asia/Jakarta","199/128/8":"Asia/Jakarta","200/128/8":"Asia/Jakarta","201/128/8":"Asia/Jakarta","202/128/8":"Asia/Jakarta","203/128/8":"Asia/Jakarta","199/129/8":"Asia/Jakarta","200/129/8":"Asia/Jakarta","201/129/8":"Asia/Jakarta","202/129/8":"Asia/Jakarta","203/129/8":"Asia/Jakarta","204/129/8":"Asia/Jakarta","200/130/8":"Asia/Jakarta","201/130/8":"Asia/Jakarta","202/130/8":"Asia/Jakarta","203/130/8":"Asia/Jakarta","204/130/8":"Asia/Jakarta","202/131/8":"Asia/Jakarta","203/131/8":"Asia/Jakarta","204/131/8":"Asia/Jakarta","203/132/8":"Asia/Jakarta","204/132/8":"Asia/Jakarta","205/132/8":"Asia/Jakarta","206/132/8":"Asia/Jakarta","207/132/8":"Asia/Jakarta","208/132/8":"Asia/Jakarta","209/132/8":"Asia/Jakarta","207/133/8":"Asia/Jakarta","208/133/8":"Asia/Jakarta","195/123/8":"Asia/Jakarta","196/123/8":"Asia/Jakarta","195/124/8":"Asia/Jakarta","196/124/8":"Asia/Jakarta","197/124/8":"Asia/Jakarta","198/124/8":"Asia/Jakarta","204/124/8":"Asia/Jakarta","205/124/8":"Asia/Jakarta","195/125/8":"Asia/Jakarta","198/125/8":"Asia/Jakarta","199/125/8":"Asia/Kuala_Lumpur","202/125/8":"Asia/Kuala_Lumpur","203/125/8":"Asia/Jakarta","204/125/8":"Asia/Jakarta","205/125/8":"Asia/Jakarta","195/126/8":"Asia/Jakarta","196/126/8":"Asia/Jakarta","199/126/8":"Asia/Jakarta","200/126/8":"Asia/Jakarta","201/126/8":"Asia/Kuala_Lumpur","202/126/8":"Asia/Kuala_Lumpur","205/126/8":"Asia/Jakarta","206/126/8":"Asia/Kuching","196/127/8":"Asia/Jakarta","197/127/8":"Asia/Jakarta","201/127/8":"Asia/Jakarta","202/127/8":"Asia/Jakarta","204/127/8":"Asia/Jakarta","205/127/8":"Asia/Pontianak","197/128/8":"Asia/Jakarta","198/128/8":"Asia/Jakarta","204/128/8":"Asia/Jakarta","205/128/8":"Asia/Pontianak","207/128/8":"Asia/Pontianak","198/129/8":"Asia/Jakarta","205/129/8":"Asia/Jakarta","198/130/8":"Asia/Jakarta","199/130/8":"Asia/Jakarta","205/130/8":"Asia/Jakarta","199/131/8":"Asia/Jakarta","200/131/8":"Asia/Jakarta","201/131/8":"Asia/Jakarta","205/131/8":"Asia/Jakarta","206/131/8":"Asia/Jakarta","207/131/8":"Asia/Jakarta","208/131/8":"Asia/Pontianak","209/131/8":"Asia/Makassar","210/131/8":"Asia/Makassar","200/132/8":"Asia/Jakarta","201/132/8":"Asia/Jakarta","202/132/8":"Asia/Jakarta","210/132/8":"Asia/Jakarta","202/133/8":"Asia/Jakarta","203/133/8":"Asia/Jakarta","204/133/8":"Asia/Jakarta","205/133/8":"Asia/Jakarta","206/133/8":"Asia/Jakarta","209/133/8":"Asia/Jakarta","210/133/8":"Asia/Makassar","206/134/8":"Asia/Jakarta","207/134/8":"Asia/Jakarta","208/134/8":"Asia/Jakarta","209/134/8":"Asia/Jakarta","218/127/8":"Asia/Jayapura","218/128/8":"Asia/Jayapura","219/128/8":"Asia/Jayapura","220/128/8":"Asia/Jayapura","223/128/8":"Asia/Jayapura","217/129/8":"Asia/Jayapura","218/129/8":"Asia/Jayapura","219/129/8":"Asia/Jayapura","220/129/8":"Asia/Jayapura","221/129/8":"Asia/Jayapura","222/129/8":"Asia/Jayapura","223/129/8":"Asia/Jayapura","224/129/8":"Asia/Jayapura","225/129/8":"Asia/Jayapura","218/130/8":"Asia/Jayapura","219/130/8":"Asia/Jayapura","220/130/8":"Asia/Jayapura","221/130/8":"Asia/Jayapura","222/130/8":"Asia/Jayapura","223/130/8":"Asia/Jayapura","224/130/8":"Asia/Jayapura","225/130/8":"Asia/Jayapura","226/130/8":"Asia/Jayapura","227/130/8":"Asia/Jayapura","218/131/8":"Asia/Jayapura","219/131/8":"Asia/Jayapura","220/131/8":"Asia/Jayapura","221/131/8":"Asia/Jayapura","222/131/8":"Asia/Jayapura","223/131/8":"Asia/Jayapura","226/131/8":"Asia/Jayapura","227/131/8":"Asia/Jayapura","218/132/8":"Asia/Jayapura","219/132/8":"Asia/Jayapura","220/132/8":"Asia/Jayapura","221/132/8":"Asia/Jayapura","227/132/8":"Asia/Jayapura","219/133/8":"Asia/Jayapura","220/133/8":"Asia/Jayapura","227/133/8":"Asia/Jayapura","218/125/8":"Asia/Makassar","219/125/8":"Asia/Jayapura","217/126/8":"Asia/Makassar","218/126/8":"Asia/Jayapura","219/126/8":"Asia/Jayapura","217/127/8":"Asia/Jayapura","219/127/8":"Asia/Jayapura","220/127/8":"Asia/Jayapura","221/127/8":"Asia/Jayapura","222/127/8":"Asia/Jayapura","223/127/8":"Asia/Jayapura","224/127/8":"Asia/Jayapura","216/128/8":"Asia/Makassar","217/128/8":"Asia/Jayapura","221/128/8":"Asia/Jayapura","222/128/8":"Asia/Jayapura","224/128/8":"Asia/Jayapura","225/128/8":"Asia/Jayapura","226/128/8":"Asia/Jayapura","216/129/8":"Asia/Jayapura","226/129/8":"Asia/Jayapura","227/129/8":"Asia/Jayapura","228/129/8":"Pacific/Port_Moresby","216/130/8":"Asia/Makassar","217/130/8":"Asia/Jayapura","228/130/8":"Pacific/Port_Moresby","217/131/8":"Asia/Jayapura","224/131/8":"Asia/Jayapura","225/131/8":"Asia/Jayapura","228/131/8":"Pacific/Port_Moresby","217/132/8":"Asia/Jayapura","222/132/8":"Asia/Jayapura","223/132/8":"Asia/Jayapura","224/132/8":"Asia/Jayapura","225/132/8":"Asia/Jayapura","226/132/8":"Asia/Jayapura","228/132/8":"Pacific/Port_Moresby","221/133/8":"Asia/Jayapura","222/133/8":"Asia/Jayapura","223/133/8":"Asia/Jayapura","225/133/8":"Asia/Jayapura","226/133/8":"Asia/Jayapura","228/133/8":"Pacific/Port_Moresby","219/134/8":"Asia/Jayapura","220/134/8":"Asia/Jayapura","221/134/8":"Asia/Jayapura","225/134/8":"Asia/Jayapura","226/134/8":"Asia/Jayapura","227/134/8":"Asia/Jayapura","228/134/8":"Pacific/Port_Moresby","174/100/8":"Asia/Kabul","175/100/8":"Asia/Kabul","176/100/8":"Asia/Kabul","177/100/8":"Asia/Kabul","173/101/8":"Asia/Kabul","174/101/8":"Asia/Kabul","175/101/8":"Asia/Kabul","176/101/8":"Asia/Kabul","177/101/8":"Asia/Kabul","172/102/8":"Asia/Kabul","173/102/8":"Asia/Kabul","174/102/8":"Asia/Kabul","175/102/8":"Asia/Kabul","176/102/8":"Asia/Kabul","172/103/8":"Asia/Kabul","173/103/8":"Asia/Kabul","174/103/8":"Asia/Kabul","175/103/8":"Asia/Kabul","176/103/8":"Asia/Kabul","172/104/8":"Asia/Kabul","173/104/8":"Asia/Kabul","174/104/8":"Asia/Kabul","178/100/8":"Asia/Kabul","179/100/8":"Asia/Karachi","178/101/8":"Asia/Kabul","171/102/8":"Asia/Kabul","177/102/8":"Asia/Kabul","178/102/8":"Asia/Karachi","171/103/8":"Asia/Kabul","177/103/8":"Asia/Karachi","171/104/8":"Asia/Tehran","175/104/8":"Asia/Kabul","176/104/8":"Asia/Karachi","177/104/8":"Asia/Karachi","171/105/8":"Asia/Tehran","172/105/8":"Asia/Kabul","173/105/8":"Asia/Kabul","174/105/8":"Asia/Kabul","175/105/8":"Asia/Karachi","172/106/8":"Asia/Karachi","173/106/8":"Asia/Karachi","174/106/8":"Asia/Karachi","245/68/8":"Asia/Kamchatka","246/68/8":"Asia/Kamchatka","247/68/8":"Asia/Kamchatka","244/69/8":"Asia/Kamchatka","245/69/8":"Asia/Kamchatka","246/69/8":"Asia/Kamchatka","244/70/8":"Asia/Kamchatka","245/70/8":"Asia/Kamchatka","246/70/8":"Asia/Kamchatka","247/70/8":"Asia/Kamchatka","244/71/8":"Asia/Kamchatka","245/71/8":"Asia/Kamchatka","246/71/8":"Asia/Kamchatka","247/71/8":"Asia/Kamchatka","248/71/8":"Asia/Kamchatka","250/71/8":"Asia/Kamchatka","244/72/8":"Asia/Kamchatka","245/72/8":"Asia/Kamchatka","246/72/8":"Asia/Kamchatka","247/72/8":"Asia/Kamchatka","248/72/8":"Asia/Kamchatka","249/72/8":"Asia/Kamchatka","244/73/8":"Asia/Kamchatka","245/73/8":"Asia/Kamchatka","246/73/8":"Asia/Kamchatka","243/74/8":"Asia/Kamchatka","244/74/8":"Asia/Kamchatka","242/75/8":"Asia/Kamchatka","243/75/8":"Asia/Kamchatka","244/75/8":"Asia/Kamchatka","242/76/8":"Asia/Kamchatka","243/76/8":"Asia/Kamchatka","240/77/8":"Asia/Kamchatka","241/77/8":"Asia/Kamchatka","242/77/8":"Asia/Kamchatka","243/77/8":"Asia/Kamchatka","240/78/8":"Asia/Kamchatka","241/78/8":"Asia/Kamchatka","242/78/8":"Asia/Kamchatka","243/78/8":"Asia/Kamchatka","239/79/8":"Asia/Kamchatka","240/79/8":"Asia/Kamchatka","241/79/8":"Asia/Kamchatka","242/79/8":"Asia/Kamchatka","239/80/8":"Asia/Kamchatka","240/80/8":"Asia/Kamchatka","241/80/8":"Asia/Kamchatka","242/80/8":"Asia/Kamchatka","239/81/8":"Asia/Kamchatka","240/81/8":"Asia/Kamchatka","241/81/8":"Asia/Kamchatka","239/82/8":"Asia/Kamchatka","240/82/8":"Asia/Kamchatka","239/83/8":"Asia/Kamchatka","243/68/8":"Asia/Magadan","244/68/8":"Asia/Kamchatka","243/69/8":"Asia/Magadan","243/70/8":"Asia/Magadan","243/71/8":"Asia/Kamchatka","243/72/8":"Asia/Kamchatka","250/72/8":"Asia/Kamchatka","251/72/8":"Asia/Kamchatka","252/72/8":"Asia/Kamchatka","242/73/8":"Asia/Magadan","243/73/8":"Asia/Kamchatka","247/73/8":"Asia/Kamchatka","248/73/8":"Asia/Kamchatka","249/73/8":"Asia/Kamchatka","250/73/8":"Asia/Kamchatka","241/74/8":"Asia/Kamchatka","242/74/8":"Asia/Kamchatka","245/74/8":"Asia/Kamchatka","246/74/8":"Asia/Kamchatka","247/74/8":"Asia/Kamchatka","248/74/8":"Asia/Kamchatka","249/74/8":"Asia/Kamchatka","241/75/8":"Asia/Kamchatka","245/75/8":"Asia/Kamchatka","239/76/8":"Asia/Kamchatka","240/76/8":"Asia/Kamchatka","241/76/8":"Asia/Kamchatka","244/76/8":"Asia/Kamchatka","245/76/8":"Asia/Kamchatka","239/77/8":"Asia/Kamchatka","244/77/8":"Asia/Kamchatka","238/78/8":"Asia/Kamchatka","239/78/8":"Asia/Kamchatka","244/78/8":"Asia/Kamchatka","238/79/8":"Asia/Kamchatka","243/79/8":"Asia/Kamchatka","244/79/8":"Asia/Kamchatka","238/80/8":"Asia/Kamchatka","243/80/8":"Asia/Kamchatka","245/80/8":"Asia/Kamchatka","246/80/8":"Asia/Kamchatka","247/80/8":"Asia/Kamchatka","238/81/8":"Asia/Kamchatka","242/81/8":"Asia/Kamchatka","243/81/8":"Asia/Kamchatka","245/81/8":"Asia/Kamchatka","246/81/8":"Asia/Kamchatka","247/81/8":"Asia/Kamchatka","238/82/8":"Asia/Kamchatka","241/82/8":"Asia/Kamchatka","242/82/8":"Asia/Kamchatka","238/83/8":"Asia/Kamchatka","240/83/8":"Asia/Kamchatka","241/83/8":"Asia/Kamchatka","242/83/8":"Asia/Kamchatka","238/84/8":"Asia/Kamchatka","239/84/8":"Asia/Kamchatka","240/84/8":"Asia/Kamchatka","239/85/8":"Asia/Kamchatka","240/85/8":"Asia/Kamchatka","239/86/8":"Asia/Srednekolymsk","180/100/8":"Asia/Karachi","179/101/8":"Asia/Karachi","179/102/8":"Asia/Karachi","178/103/8":"Asia/Karachi","179/103/8":"Asia/Karachi","178/104/8":"Asia/Karachi","179/104/8":"Asia/Karachi","176/105/8":"Asia/Karachi","177/105/8":"Asia/Karachi","178/105/8":"Asia/Karachi","179/105/8":"Asia/Karachi","175/106/8":"Asia/Karachi","176/106/8":"Asia/Karachi","177/106/8":"Asia/Karachi","178/106/8":"Asia/Karachi","174/107/8":"Asia/Karachi","175/107/8":"Asia/Karachi","176/107/8":"Asia/Karachi","173/108/8":"Asia/Karachi","174/108/8":"Asia/Karachi","175/108/8":"Asia/Karachi","176/108/8":"Asia/Karachi","176/109/8":"Asia/Karachi","182/99/8":"Asia/Kashgar","181/100/8":"Asia/Karachi","182/100/8":"Asia/Kashgar","180/101/8":"Asia/Karachi","181/101/8":"Asia/Karachi","182/101/8":"Asia/Kolkata","180/102/8":"Asia/Karachi","180/103/8":"Asia/Karachi","181/103/8":"Asia/Kolkata","180/104/8":"Asia/Karachi","181/104/8":"Asia/Kolkata","180/105/8":"Asia/Kolkata","171/106/8":"Asia/Tehran","179/106/8":"Asia/Karachi","180/106/8":"Asia/Kolkata","172/107/8":"Asia/Tehran","173/107/8":"Asia/Karachi","177/107/8":"Asia/Karachi","178/107/8":"Asia/Kolkata","179/107/8":"Asia/Kolkata","171/108/8":"Asia/Tehran","172/108/8":"Asia/Karachi","177/108/8":"Asia/Karachi","171/109/8":"Asia/Tehran","172/109/8":"Asia/Karachi","173/109/8":"Asia/Karachi","174/109/8":"Asia/Karachi","175/109/8":"Asia/Karachi","177/109/8":"Asia/Karachi","178/109/8":"Asia/Kolkata","175/110/8":"Asia/Karachi","176/110/8":"Asia/Karachi","177/110/8":"Asia/Kolkata","178/110/8":"Asia/Kolkata","185/95/8":"Asia/Kashgar","183/96/8":"Asia/Kashgar","184/96/8":"Asia/Kashgar","185/96/8":"Asia/Kashgar","181/97/8":"Asia/Kashgar","182/97/8":"Asia/Kashgar","183/97/8":"Asia/Kashgar","184/97/8":"Asia/Kashgar","185/97/8":"Asia/Kashgar","182/98/8":"Asia/Kashgar","183/98/8":"Asia/Kashgar","184/98/8":"Asia/Kashgar","185/98/8":"Asia/Kashgar","183/99/8":"Asia/Kashgar","184/99/8":"Asia/Kashgar","185/99/8":"Asia/Kashgar","184/100/8":"Asia/Kashgar","185/100/8":"Asia/Kashgar","185/101/8":"Asia/Kashgar","185/102/8":"Asia/Kashgar","185/103/8":"Asia/Kashgar","186/92/8":"Asia/Kashgar","187/92/8":"Asia/Urumqi","186/93/8":"Asia/Kashgar","187/93/8":"Asia/Urumqi","188/93/8":"Asia/Urumqi","186/94/8":"Asia/Kashgar","187/94/8":"Asia/Urumqi","186/95/8":"Asia/Kashgar","187/95/8":"Asia/Urumqi","186/96/8":"Asia/Urumqi","186/97/8":"Asia/Kashgar","186/98/8":"Asia/Kashgar","186/99/8":"Asia/Kashgar","183/100/8":"Asia/Kashgar","186/100/8":"Asia/Kashgar","183/101/8":"Asia/Kolkata","184/101/8":"Asia/Kashgar","186/101/8":"Asia/Urumqi","183/102/8":"Asia/Kolkata","184/102/8":"Asia/Kashgar","186/102/8":"Asia/Kashgar","183/103/8":"Asia/Kolkata","184/103/8":"Asia/Kashgar","186/103/8":"Asia/Kashgar","187/103/8":"Asia/Urumqi","183/104/8":"Asia/Kolkata","184/104/8":"Asia/Kashgar","185/104/8":"Asia/Kashgar","186/104/8":"Asia/Kashgar","187/104/8":"Asia/Urumqi","185/105/8":"Asia/Kathmandu","186/105/8":"Asia/Kathmandu","187/105/8":"Asia/Urumqi","186/106/8":"Asia/Kathmandu","184/106/8":"Asia/Kolkata","185/106/8":"Asia/Kathmandu","187/106/8":"Asia/Kathmandu","188/106/8":"Asia/Urumqi","185/107/8":"Asia/Kolkata","186/107/8":"Asia/Kolkata","187/107/8":"Asia/Kathmandu","188/107/8":"Asia/Kathmandu","189/107/8":"Asia/Kathmandu","190/107/8":"Asia/Kathmandu","188/108/8":"Asia/Kolkata","189/108/8":"Asia/Kolkata","225/65/8":"Asia/Khandyga","224/66/8":"Asia/Khandyga","225/66/8":"Asia/Khandyga","226/66/8":"Asia/Khandyga","223/67/8":"Asia/Khandyga","224/67/8":"Asia/Khandyga","225/67/8":"Asia/Khandyga","226/67/8":"Asia/Khandyga","223/68/8":"Asia/Khandyga","224/68/8":"Asia/Khandyga","225/68/8":"Asia/Khandyga","226/68/8":"Asia/Khandyga","224/69/8":"Asia/Khandyga","225/69/8":"Asia/Khandyga","226/69/8":"Asia/Khandyga","225/70/8":"Asia/Khandyga","226/70/8":"Asia/Khandyga","225/71/8":"Asia/Khandyga","226/71/8":"Asia/Khandyga","225/72/8":"Asia/Khandyga","223/73/8":"Asia/Khandyga","224/73/8":"Asia/Khandyga","225/73/8":"Asia/Khandyga","222/74/8":"Asia/Khandyga","223/74/8":"Asia/Khandyga","224/74/8":"Asia/Khandyga","224/64/8":"Asia/Vladivostok","225/64/8":"Asia/Vladivostok","226/64/8":"Asia/Vladivostok","227/64/8":"Asia/Vladivostok","223/65/8":"Asia/Vladivostok","224/65/8":"Asia/Khandyga","226/65/8":"Asia/Khandyga","227/65/8":"Asia/Khandyga","222/66/8":"Asia/Vladivostok","223/66/8":"Asia/Khandyga","227/66/8":"Asia/Ust-Nera","222/67/8":"Asia/Khandyga","227/67/8":"Asia/Khandyga","228/67/8":"Asia/Ust-Nera","222/68/8":"Asia/Khandyga","227/68/8":"Asia/Khandyga","228/68/8":"Asia/Ust-Nera","222/69/8":"Asia/Yakutsk","223/69/8":"Asia/Khandyga","227/69/8":"Asia/Ust-Nera","228/69/8":"Asia/Ust-Nera","223/70/8":"Asia/Yakutsk","224/70/8":"Asia/Khandyga","227/70/8":"Asia/Khandyga","224/71/8":"Asia/Khandyga","227/71/8":"Asia/Khandyga","222/72/8":"Asia/Yakutsk","223/72/8":"Asia/Khandyga","224/72/8":"Asia/Khandyga","226/72/8":"Asia/Khandyga","227/72/8":"Asia/Vladivostok","221/73/8":"Asia/Yakutsk","222/73/8":"Asia/Khandyga","226/73/8":"Asia/Vladivostok","221/74/8":"Asia/Yakutsk","225/74/8":"Asia/Khandyga","226/74/8":"Asia/Vladivostok","221/75/8":"Asia/Yakutsk","222/75/8":"Asia/Khandyga","223/75/8":"Asia/Vladivostok","224/75/8":"Asia/Vladivostok","225/75/8":"Asia/Vladivostok","181/102/8":"Asia/Kolkata","182/102/8":"Asia/Kolkata","182/103/8":"Asia/Kolkata","182/104/8":"Asia/Kolkata","181/105/8":"Asia/Kolkata","182/105/8":"Asia/Kolkata","183/105/8":"Asia/Kolkata","184/105/8":"Asia/Kolkata","181/106/8":"Asia/Kolkata","182/106/8":"Asia/Kolkata","183/106/8":"Asia/Kolkata","180/107/8":"Asia/Kolkata","181/107/8":"Asia/Kolkata","182/107/8":"Asia/Kolkata","183/107/8":"Asia/Kolkata","184/107/8":"Asia/Kolkata","195/107/8":"Asia/Kolkata","178/108/8":"Asia/Kolkata","179/108/8":"Asia/Kolkata","180/108/8":"Asia/Kolkata","181/108/8":"Asia/Kolkata","182/108/8":"Asia/Kolkata","183/108/8":"Asia/Kolkata","184/108/8":"Asia/Kolkata","185/108/8":"Asia/Kolkata","186/108/8":"Asia/Kolkata","187/108/8":"Asia/Kolkata","194/108/8":"Asia/Kolkata","179/109/8":"Asia/Kolkata","180/109/8":"Asia/Kolkata","181/109/8":"Asia/Kolkata","182/109/8":"Asia/Kolkata","183/109/8":"Asia/Kolkata","184/109/8":"Asia/Kolkata","185/109/8":"Asia/Kolkata","186/109/8":"Asia/Kolkata","187/109/8":"Asia/Kolkata","188/109/8":"Asia/Kolkata","189/109/8":"Asia/Kolkata","194/109/8":"Asia/Kolkata","179/110/8":"Asia/Kolkata","180/110/8":"Asia/Kolkata","181/110/8":"Asia/Kolkata","182/110/8":"Asia/Kolkata","183/110/8":"Asia/Kolkata","184/110/8":"Asia/Kolkata","185/110/8":"Asia/Kolkata","186/110/8":"Asia/Kolkata","187/110/8":"Asia/Kolkata","188/110/8":"Asia/Kolkata","189/110/8":"Asia/Kolkata","178/111/8":"Asia/Kolkata","179/111/8":"Asia/Kolkata","180/111/8":"Asia/Kolkata","181/111/8":"Asia/Kolkata","182/111/8":"Asia/Kolkata","183/111/8":"Asia/Kolkata","184/111/8":"Asia/Kolkata","185/111/8":"Asia/Kolkata","186/111/8":"Asia/Kolkata","187/111/8":"Asia/Kolkata","188/111/8":"Asia/Kolkata","189/111/8":"Asia/Kolkata","190/111/8":"Asia/Kolkata","180/112/8":"Asia/Kolkata","181/112/8":"Asia/Kolkata","182/112/8":"Asia/Kolkata","183/112/8":"Asia/Kolkata","184/112/8":"Asia/Kolkata","185/112/8":"Asia/Kolkata","186/112/8":"Asia/Kolkata","187/112/8":"Asia/Kolkata","188/112/8":"Asia/Kolkata","189/112/8":"Asia/Kolkata","180/113/8":"Asia/Kolkata","181/113/8":"Asia/Kolkata","182/113/8":"Asia/Kolkata","183/113/8":"Asia/Kolkata","184/113/8":"Asia/Kolkata","185/113/8":"Asia/Kolkata","186/113/8":"Asia/Kolkata","187/113/8":"Asia/Kolkata","180/114/8":"Asia/Kolkata","181/114/8":"Asia/Kolkata","182/114/8":"Asia/Kolkata","183/114/8":"Asia/Kolkata","184/114/8":"Asia/Kolkata","185/114/8":"Asia/Kolkata","186/114/8":"Asia/Kolkata","180/115/8":"Asia/Kolkata","181/115/8":"Asia/Kolkata","182/115/8":"Asia/Kolkata","183/115/8":"Asia/Kolkata","184/115/8":"Asia/Kolkata","185/115/8":"Asia/Kolkata","181/116/8":"Asia/Kolkata","182/116/8":"Asia/Kolkata","183/116/8":"Asia/Kolkata","184/116/8":"Asia/Kolkata","181/117/8":"Asia/Kolkata","182/117/8":"Asia/Kolkata","183/117/8":"Asia/Kolkata","184/117/8":"Asia/Kolkata","182/118/8":"Asia/Kolkata","183/118/8":"Asia/Kolkata","184/118/8":"Asia/Kolkata","182/119/8":"Asia/Kolkata","183/119/8":"Asia/Kolkata","183/120/8":"Asia/Kolkata","194/106/8":"Asia/Urumqi","195/106/8":"Asia/Kolkata","196/106/8":"Asia/Kolkata","191/107/8":"Asia/Thimphu","193/107/8":"Asia/Kolkata","194/107/8":"Asia/Kolkata","196/107/8":"Asia/Kolkata","192/108/8":"Asia/Kolkata","193/108/8":"Asia/Kolkata","195/108/8":"Asia/Kolkata","196/108/8":"Asia/Rangoon","195/109/8":"Asia/Rangoon","194/110/8":"Asia/Kolkata","195/110/8":"Asia/Rangoon","176/111/8":"Asia/Kolkata","177/111/8":"Asia/Kolkata","194/111/8":"Asia/Rangoon","176/112/8":"Asia/Kolkata","177/112/8":"Asia/Kolkata","178/112/8":"Asia/Kolkata","179/112/8":"Asia/Kolkata","190/112/8":"Asia/Kolkata","177/113/8":"Asia/Kolkata","178/113/8":"Asia/Kolkata","179/113/8":"Asia/Kolkata","188/113/8":"Asia/Kolkata","189/113/8":"Asia/Kolkata","190/113/8":"Asia/Kolkata","179/114/8":"Asia/Kolkata","187/114/8":"Asia/Kolkata","188/114/8":"Asia/Kolkata","179/115/8":"Asia/Kolkata","186/115/8":"Asia/Kolkata","187/115/8":"Asia/Kolkata","179/116/8":"Asia/Kolkata","180/116/8":"Asia/Kolkata","185/116/8":"Asia/Kolkata","186/116/8":"Asia/Kolkata","180/117/8":"Asia/Kolkata","185/117/8":"Asia/Kolkata","179/118/8":"Asia/Kolkata","180/118/8":"Asia/Kolkata","181/118/8":"Asia/Kolkata","185/118/8":"Asia/Kolkata","193/118/8":"Asia/Kolkata","194/118/8":"Asia/Kolkata","195/118/8":"Asia/Kolkata","178/119/8":"Asia/Kolkata","179/119/8":"Asia/Kolkata","180/119/8":"Asia/Kolkata","181/119/8":"Asia/Kolkata","184/119/8":"Asia/Kolkata","185/119/8":"Asia/Kolkata","193/119/8":"Asia/Kolkata","194/119/8":"Asia/Kolkata","178/120/8":"Asia/Kolkata","179/120/8":"Asia/Kolkata","180/120/8":"Asia/Kolkata","181/120/8":"Asia/Kolkata","182/120/8":"Asia/Kolkata","193/120/8":"Asia/Kolkata","194/120/8":"Asia/Kolkata","179/121/8":"Asia/Kolkata","180/121/8":"Asia/Kolkata","182/121/8":"Asia/Kolkata","183/121/8":"Asia/Kolkata","193/121/8":"Asia/Kolkata","194/121/8":"Asia/Kolkata","179/122/8":"Asia/Kolkata","180/122/8":"Indian/Maldives","182/122/8":"Asia/Kolkata","183/122/8":"Asia/Kolkata","193/122/8":"Asia/Kolkata","194/122/8":"Asia/Kolkata","194/123/8":"Asia/Kolkata","192/38/8":"Asia/Krasnoyarsk","191/39/8":"Asia/Krasnoyarsk","184/25/8":"Asia/Krasnoyarsk","182/30/8":"Asia/Krasnoyarsk","192/23/8":"Asia/Krasnoyarsk","195/23/8":"Asia/Krasnoyarsk","196/23/8":"Asia/Krasnoyarsk","193/24/8":"Asia/Krasnoyarsk","194/24/8":"Asia/Krasnoyarsk","195/24/8":"Asia/Krasnoyarsk","196/24/8":"Asia/Krasnoyarsk","194/25/8":"Asia/Krasnoyarsk","195/25/8":"Asia/Krasnoyarsk","196/25/8":"Asia/Krasnoyarsk","197/25/8":"Asia/Krasnoyarsk","193/26/8":"Asia/Krasnoyarsk","194/26/8":"Asia/Krasnoyarsk","195/26/8":"Asia/Krasnoyarsk","196/26/8":"Asia/Krasnoyarsk","197/26/8":"Asia/Krasnoyarsk","193/27/8":"Asia/Krasnoyarsk","194/27/8":"Asia/Krasnoyarsk","195/27/8":"Asia/Krasnoyarsk","196/27/8":"Asia/Krasnoyarsk","197/27/8":"Asia/Krasnoyarsk","193/28/8":"Asia/Krasnoyarsk","194/28/8":"Asia/Krasnoyarsk","195/28/8":"Asia/Krasnoyarsk","196/28/8":"Asia/Krasnoyarsk","197/28/8":"Asia/Krasnoyarsk","198/28/8":"Asia/Krasnoyarsk","193/29/8":"Asia/Krasnoyarsk","194/29/8":"Asia/Krasnoyarsk","195/29/8":"Asia/Krasnoyarsk","196/29/8":"Asia/Krasnoyarsk","197/29/8":"Asia/Krasnoyarsk","198/29/8":"Asia/Krasnoyarsk","192/30/8":"Asia/Krasnoyarsk","193/30/8":"Asia/Krasnoyarsk","194/30/8":"Asia/Krasnoyarsk","195/30/8":"Asia/Krasnoyarsk","196/30/8":"Asia/Krasnoyarsk","197/30/8":"Asia/Krasnoyarsk","198/30/8":"Asia/Krasnoyarsk","199/30/8":"Asia/Krasnoyarsk","193/31/8":"Asia/Krasnoyarsk","194/31/8":"Asia/Krasnoyarsk","195/31/8":"Asia/Krasnoyarsk","196/31/8":"Asia/Krasnoyarsk","197/31/8":"Asia/Krasnoyarsk","198/31/8":"Asia/Krasnoyarsk","199/31/8":"Asia/Krasnoyarsk","200/31/8":"Asia/Krasnoyarsk","194/32/8":"Asia/Krasnoyarsk","195/32/8":"Asia/Krasnoyarsk","196/32/8":"Asia/Krasnoyarsk","197/32/8":"Asia/Krasnoyarsk","198/32/8":"Asia/Krasnoyarsk","199/32/8":"Asia/Krasnoyarsk","200/32/8":"Asia/Krasnoyarsk","201/32/8":"Asia/Krasnoyarsk","197/33/8":"Asia/Krasnoyarsk","198/33/8":"Asia/Krasnoyarsk","199/33/8":"Asia/Krasnoyarsk","200/33/8":"Asia/Krasnoyarsk","201/33/8":"Asia/Krasnoyarsk","202/33/8":"Asia/Krasnoyarsk","197/34/8":"Asia/Krasnoyarsk","198/34/8":"Asia/Krasnoyarsk","199/34/8":"Asia/Krasnoyarsk","200/34/8":"Asia/Krasnoyarsk","201/34/8":"Asia/Krasnoyarsk","202/34/8":"Asia/Krasnoyarsk","198/35/8":"Asia/Krasnoyarsk","199/35/8":"Asia/Krasnoyarsk","200/35/8":"Asia/Krasnoyarsk","201/35/8":"Asia/Krasnoyarsk","202/35/8":"Asia/Krasnoyarsk","203/35/8":"Asia/Krasnoyarsk","198/36/8":"Asia/Krasnoyarsk","199/36/8":"Asia/Krasnoyarsk","200/36/8":"Asia/Krasnoyarsk","201/36/8":"Asia/Krasnoyarsk","202/36/8":"Asia/Krasnoyarsk","203/36/8":"Asia/Krasnoyarsk","204/36/8":"Asia/Krasnoyarsk","198/37/8":"Asia/Krasnoyarsk","199/37/8":"Asia/Krasnoyarsk","200/37/8":"Asia/Krasnoyarsk","201/37/8":"Asia/Krasnoyarsk","202/37/8":"Asia/Krasnoyarsk","203/37/8":"Asia/Krasnoyarsk","204/37/8":"Asia/Krasnoyarsk","197/38/8":"Asia/Krasnoyarsk","198/38/8":"Asia/Krasnoyarsk","199/38/8":"Asia/Krasnoyarsk","200/38/8":"Asia/Krasnoyarsk","201/38/8":"Asia/Krasnoyarsk","202/38/8":"Asia/Krasnoyarsk","203/38/8":"Asia/Krasnoyarsk","204/38/8":"Asia/Krasnoyarsk","196/39/8":"Asia/Krasnoyarsk","197/39/8":"Asia/Krasnoyarsk","198/39/8":"Asia/Krasnoyarsk","199/39/8":"Asia/Krasnoyarsk","200/39/8":"Asia/Krasnoyarsk","201/39/8":"Asia/Krasnoyarsk","202/39/8":"Asia/Krasnoyarsk","203/39/8":"Asia/Krasnoyarsk","204/39/8":"Asia/Krasnoyarsk","195/40/8":"Asia/Krasnoyarsk","196/40/8":"Asia/Krasnoyarsk","197/40/8":"Asia/Krasnoyarsk","198/40/8":"Asia/Krasnoyarsk","199/40/8":"Asia/Krasnoyarsk","200/40/8":"Asia/Krasnoyarsk","201/40/8":"Asia/Krasnoyarsk","202/40/8":"Asia/Krasnoyarsk","203/40/8":"Asia/Krasnoyarsk","204/40/8":"Asia/Krasnoyarsk","205/40/8":"Asia/Krasnoyarsk","206/40/8":"Asia/Krasnoyarsk","194/41/8":"Asia/Krasnoyarsk","195/41/8":"Asia/Krasnoyarsk","196/41/8":"Asia/Krasnoyarsk","197/41/8":"Asia/Krasnoyarsk","198/41/8":"Asia/Krasnoyarsk","199/41/8":"Asia/Krasnoyarsk","200/41/8":"Asia/Krasnoyarsk","201/41/8":"Asia/Krasnoyarsk","202/41/8":"Asia/Krasnoyarsk","203/41/8":"Asia/Krasnoyarsk","204/41/8":"Asia/Krasnoyarsk","205/41/8":"Asia/Krasnoyarsk","206/41/8":"Asia/Krasnoyarsk","207/41/8":"Asia/Krasnoyarsk","208/41/8":"Asia/Krasnoyarsk","193/42/8":"Asia/Krasnoyarsk","194/42/8":"Asia/Krasnoyarsk","195/42/8":"Asia/Krasnoyarsk","196/42/8":"Asia/Krasnoyarsk","197/42/8":"Asia/Krasnoyarsk","198/42/8":"Asia/Krasnoyarsk","199/42/8":"Asia/Krasnoyarsk","200/42/8":"Asia/Krasnoyarsk","201/42/8":"Asia/Krasnoyarsk","202/42/8":"Asia/Krasnoyarsk","203/42/8":"Asia/Krasnoyarsk","204/42/8":"Asia/Krasnoyarsk","205/42/8":"Asia/Krasnoyarsk","206/42/8":"Asia/Krasnoyarsk","207/42/8":"Asia/Krasnoyarsk","208/42/8":"Asia/Krasnoyarsk","191/43/8":"Asia/Krasnoyarsk","192/43/8":"Asia/Krasnoyarsk","193/43/8":"Asia/Krasnoyarsk","194/43/8":"Asia/Krasnoyarsk","195/43/8":"Asia/Krasnoyarsk","196/43/8":"Asia/Krasnoyarsk","197/43/8":"Asia/Krasnoyarsk","198/43/8":"Asia/Krasnoyarsk","199/43/8":"Asia/Krasnoyarsk","200/43/8":"Asia/Krasnoyarsk","201/43/8":"Asia/Krasnoyarsk","202/43/8":"Asia/Krasnoyarsk","203/43/8":"Asia/Krasnoyarsk","204/43/8":"Asia/Krasnoyarsk","205/43/8":"Asia/Krasnoyarsk","206/43/8":"Asia/Krasnoyarsk","207/43/8":"Asia/Krasnoyarsk","208/43/8":"Asia/Krasnoyarsk","190/44/8":"Asia/Krasnoyarsk","191/44/8":"Asia/Krasnoyarsk","192/44/8":"Asia/Krasnoyarsk","193/44/8":"Asia/Krasnoyarsk","194/44/8":"Asia/Krasnoyarsk","195/44/8":"Asia/Krasnoyarsk","196/44/8":"Asia/Krasnoyarsk","197/44/8":"Asia/Krasnoyarsk","198/44/8":"Asia/Krasnoyarsk","199/44/8":"Asia/Krasnoyarsk","200/44/8":"Asia/Krasnoyarsk","201/44/8":"Asia/Krasnoyarsk","202/44/8":"Asia/Krasnoyarsk","203/44/8":"Asia/Krasnoyarsk","204/44/8":"Asia/Krasnoyarsk","205/44/8":"Asia/Krasnoyarsk","206/44/8":"Asia/Krasnoyarsk","207/44/8":"Asia/Krasnoyarsk","208/44/8":"Asia/Krasnoyarsk","189/45/8":"Asia/Krasnoyarsk","190/45/8":"Asia/Krasnoyarsk","191/45/8":"Asia/Krasnoyarsk","192/45/8":"Asia/Krasnoyarsk","193/45/8":"Asia/Krasnoyarsk","194/45/8":"Asia/Krasnoyarsk","195/45/8":"Asia/Krasnoyarsk","196/45/8":"Asia/Krasnoyarsk","197/45/8":"Asia/Krasnoyarsk","198/45/8":"Asia/Krasnoyarsk","199/45/8":"Asia/Krasnoyarsk","200/45/8":"Asia/Krasnoyarsk","201/45/8":"Asia/Krasnoyarsk","202/45/8":"Asia/Krasnoyarsk","203/45/8":"Asia/Krasnoyarsk","204/45/8":"Asia/Krasnoyarsk","205/45/8":"Asia/Krasnoyarsk","206/45/8":"Asia/Krasnoyarsk","207/45/8":"Asia/Krasnoyarsk","188/46/8":"Asia/Krasnoyarsk","189/46/8":"Asia/Krasnoyarsk","190/46/8":"Asia/Krasnoyarsk","191/46/8":"Asia/Krasnoyarsk","192/46/8":"Asia/Krasnoyarsk","193/46/8":"Asia/Krasnoyarsk","194/46/8":"Asia/Krasnoyarsk","195/46/8":"Asia/Krasnoyarsk","196/46/8":"Asia/Krasnoyarsk","197/46/8":"Asia/Krasnoyarsk","198/46/8":"Asia/Krasnoyarsk","199/46/8":"Asia/Krasnoyarsk","200/46/8":"Asia/Krasnoyarsk","201/46/8":"Asia/Krasnoyarsk","202/46/8":"Asia/Krasnoyarsk","203/46/8":"Asia/Krasnoyarsk","204/46/8":"Asia/Krasnoyarsk","205/46/8":"Asia/Krasnoyarsk","187/47/8":"Asia/Krasnoyarsk","188/47/8":"Asia/Krasnoyarsk","189/47/8":"Asia/Krasnoyarsk","190/47/8":"Asia/Krasnoyarsk","191/47/8":"Asia/Krasnoyarsk","192/47/8":"Asia/Krasnoyarsk","193/47/8":"Asia/Krasnoyarsk","194/47/8":"Asia/Krasnoyarsk","195/47/8":"Asia/Krasnoyarsk","196/47/8":"Asia/Krasnoyarsk","197/47/8":"Asia/Krasnoyarsk","198/47/8":"Asia/Krasnoyarsk","199/47/8":"Asia/Krasnoyarsk","200/47/8":"Asia/Krasnoyarsk","201/47/8":"Asia/Krasnoyarsk","202/47/8":"Asia/Krasnoyarsk","203/47/8":"Asia/Krasnoyarsk","204/47/8":"Asia/Krasnoyarsk","205/47/8":"Asia/Krasnoyarsk","186/48/8":"Asia/Krasnoyarsk","187/48/8":"Asia/Krasnoyarsk","188/48/8":"Asia/Krasnoyarsk","189/48/8":"Asia/Krasnoyarsk","190/48/8":"Asia/Krasnoyarsk","191/48/8":"Asia/Krasnoyarsk","192/48/8":"Asia/Krasnoyarsk","193/48/8":"Asia/Krasnoyarsk","194/48/8":"Asia/Krasnoyarsk","195/48/8":"Asia/Krasnoyarsk","196/48/8":"Asia/Krasnoyarsk","197/48/8":"Asia/Krasnoyarsk","198/48/8":"Asia/Krasnoyarsk","199/48/8":"Asia/Krasnoyarsk","200/48/8":"Asia/Krasnoyarsk","201/48/8":"Asia/Krasnoyarsk","202/48/8":"Asia/Krasnoyarsk","203/48/8":"Asia/Krasnoyarsk","204/48/8":"Asia/Krasnoyarsk","205/48/8":"Asia/Krasnoyarsk","184/49/8":"Asia/Krasnoyarsk","185/49/8":"Asia/Krasnoyarsk","186/49/8":"Asia/Krasnoyarsk","187/49/8":"Asia/Krasnoyarsk","188/49/8":"Asia/Krasnoyarsk","189/49/8":"Asia/Krasnoyarsk","190/49/8":"Asia/Krasnoyarsk","191/49/8":"Asia/Krasnoyarsk","192/49/8":"Asia/Krasnoyarsk","193/49/8":"Asia/Krasnoyarsk","194/49/8":"Asia/Krasnoyarsk","195/49/8":"Asia/Krasnoyarsk","196/49/8":"Asia/Krasnoyarsk","197/49/8":"Asia/Krasnoyarsk","198/49/8":"Asia/Krasnoyarsk","199/49/8":"Asia/Krasnoyarsk","200/49/8":"Asia/Krasnoyarsk","201/49/8":"Asia/Krasnoyarsk","202/49/8":"Asia/Krasnoyarsk","203/49/8":"Asia/Krasnoyarsk","204/49/8":"Asia/Krasnoyarsk","205/49/8":"Asia/Krasnoyarsk","184/50/8":"Asia/Krasnoyarsk","185/50/8":"Asia/Krasnoyarsk","186/50/8":"Asia/Krasnoyarsk","187/50/8":"Asia/Krasnoyarsk","188/50/8":"Asia/Krasnoyarsk","189/50/8":"Asia/Krasnoyarsk","190/50/8":"Asia/Krasnoyarsk","191/50/8":"Asia/Krasnoyarsk","192/50/8":"Asia/Krasnoyarsk","193/50/8":"Asia/Krasnoyarsk","194/50/8":"Asia/Krasnoyarsk","195/50/8":"Asia/Krasnoyarsk","196/50/8":"Asia/Krasnoyarsk","197/50/8":"Asia/Krasnoyarsk","198/50/8":"Asia/Krasnoyarsk","199/50/8":"Asia/Krasnoyarsk","200/50/8":"Asia/Krasnoyarsk","201/50/8":"Asia/Krasnoyarsk","202/50/8":"Asia/Krasnoyarsk","203/50/8":"Asia/Krasnoyarsk","204/50/8":"Asia/Krasnoyarsk","205/50/8":"Asia/Krasnoyarsk","184/51/8":"Asia/Krasnoyarsk","185/51/8":"Asia/Krasnoyarsk","186/51/8":"Asia/Krasnoyarsk","187/51/8":"Asia/Krasnoyarsk","188/51/8":"Asia/Krasnoyarsk","189/51/8":"Asia/Krasnoyarsk","190/51/8":"Asia/Krasnoyarsk","191/51/8":"Asia/Krasnoyarsk","192/51/8":"Asia/Krasnoyarsk","193/51/8":"Asia/Krasnoyarsk","194/51/8":"Asia/Krasnoyarsk","195/51/8":"Asia/Krasnoyarsk","196/51/8":"Asia/Krasnoyarsk","197/51/8":"Asia/Krasnoyarsk","198/51/8":"Asia/Krasnoyarsk","199/51/8":"Asia/Krasnoyarsk","200/51/8":"Asia/Krasnoyarsk","201/51/8":"Asia/Krasnoyarsk","202/51/8":"Asia/Krasnoyarsk","203/51/8":"Asia/Krasnoyarsk","204/51/8":"Asia/Krasnoyarsk","205/51/8":"Asia/Krasnoyarsk","185/52/8":"Asia/Krasnoyarsk","186/52/8":"Asia/Krasnoyarsk","187/52/8":"Asia/Krasnoyarsk","188/52/8":"Asia/Krasnoyarsk","189/52/8":"Asia/Krasnoyarsk","190/52/8":"Asia/Krasnoyarsk","191/52/8":"Asia/Krasnoyarsk","192/52/8":"Asia/Krasnoyarsk","193/52/8":"Asia/Krasnoyarsk","194/52/8":"Asia/Krasnoyarsk","195/52/8":"Asia/Krasnoyarsk","196/52/8":"Asia/Krasnoyarsk","197/52/8":"Asia/Krasnoyarsk","198/52/8":"Asia/Krasnoyarsk","199/52/8":"Asia/Krasnoyarsk","200/52/8":"Asia/Krasnoyarsk","201/52/8":"Asia/Krasnoyarsk","202/52/8":"Asia/Krasnoyarsk","203/52/8":"Asia/Krasnoyarsk","204/52/8":"Asia/Krasnoyarsk","205/52/8":"Asia/Krasnoyarsk","186/53/8":"Asia/Krasnoyarsk","187/53/8":"Asia/Krasnoyarsk","188/53/8":"Asia/Krasnoyarsk","189/53/8":"Asia/Krasnoyarsk","190/53/8":"Asia/Krasnoyarsk","191/53/8":"Asia/Krasnoyarsk","192/53/8":"Asia/Krasnoyarsk","193/53/8":"Asia/Krasnoyarsk","194/53/8":"Asia/Krasnoyarsk","195/53/8":"Asia/Krasnoyarsk","196/53/8":"Asia/Krasnoyarsk","197/53/8":"Asia/Krasnoyarsk","198/53/8":"Asia/Krasnoyarsk","199/53/8":"Asia/Krasnoyarsk","200/53/8":"Asia/Krasnoyarsk","201/53/8":"Asia/Krasnoyarsk","202/53/8":"Asia/Krasnoyarsk","203/53/8":"Asia/Krasnoyarsk","204/53/8":"Asia/Krasnoyarsk","205/53/8":"Asia/Krasnoyarsk","206/53/8":"Asia/Krasnoyarsk","186/54/8":"Asia/Krasnoyarsk","187/54/8":"Asia/Krasnoyarsk","188/54/8":"Asia/Krasnoyarsk","189/54/8":"Asia/Krasnoyarsk","190/54/8":"Asia/Krasnoyarsk","191/54/8":"Asia/Krasnoyarsk","192/54/8":"Asia/Krasnoyarsk","193/54/8":"Asia/Krasnoyarsk","194/54/8":"Asia/Krasnoyarsk","195/54/8":"Asia/Krasnoyarsk","196/54/8":"Asia/Krasnoyarsk","197/54/8":"Asia/Krasnoyarsk","198/54/8":"Asia/Krasnoyarsk","199/54/8":"Asia/Krasnoyarsk","200/54/8":"Asia/Krasnoyarsk","201/54/8":"Asia/Krasnoyarsk","202/54/8":"Asia/Krasnoyarsk","203/54/8":"Asia/Krasnoyarsk","204/54/8":"Asia/Krasnoyarsk","205/54/8":"Asia/Krasnoyarsk","206/54/8":"Asia/Krasnoyarsk","186/55/8":"Asia/Krasnoyarsk","187/55/8":"Asia/Krasnoyarsk","188/55/8":"Asia/Krasnoyarsk","189/55/8":"Asia/Krasnoyarsk","190/55/8":"Asia/Krasnoyarsk","191/55/8":"Asia/Krasnoyarsk","192/55/8":"Asia/Krasnoyarsk","193/55/8":"Asia/Krasnoyarsk","194/55/8":"Asia/Krasnoyarsk","195/55/8":"Asia/Krasnoyarsk","196/55/8":"Asia/Krasnoyarsk","197/55/8":"Asia/Krasnoyarsk","198/55/8":"Asia/Krasnoyarsk","199/55/8":"Asia/Krasnoyarsk","200/55/8":"Asia/Krasnoyarsk","201/55/8":"Asia/Krasnoyarsk","202/55/8":"Asia/Krasnoyarsk","203/55/8":"Asia/Krasnoyarsk","204/55/8":"Asia/Krasnoyarsk","205/55/8":"Asia/Krasnoyarsk","186/56/8":"Asia/Krasnoyarsk","187/56/8":"Asia/Krasnoyarsk","188/56/8":"Asia/Krasnoyarsk","189/56/8":"Asia/Krasnoyarsk","190/56/8":"Asia/Krasnoyarsk","191/56/8":"Asia/Krasnoyarsk","192/56/8":"Asia/Krasnoyarsk","193/56/8":"Asia/Krasnoyarsk","194/56/8":"Asia/Krasnoyarsk","195/56/8":"Asia/Krasnoyarsk","196/56/8":"Asia/Krasnoyarsk","197/56/8":"Asia/Krasnoyarsk","198/56/8":"Asia/Krasnoyarsk","199/56/8":"Asia/Krasnoyarsk","200/56/8":"Asia/Krasnoyarsk","201/56/8":"Asia/Krasnoyarsk","202/56/8":"Asia/Krasnoyarsk","203/56/8":"Asia/Krasnoyarsk","204/56/8":"Asia/Krasnoyarsk","185/57/8":"Asia/Krasnoyarsk","186/57/8":"Asia/Krasnoyarsk","187/57/8":"Asia/Krasnoyarsk","188/57/8":"Asia/Krasnoyarsk","189/57/8":"Asia/Krasnoyarsk","190/57/8":"Asia/Krasnoyarsk","191/57/8":"Asia/Krasnoyarsk","192/57/8":"Asia/Krasnoyarsk","193/57/8":"Asia/Krasnoyarsk","194/57/8":"Asia/Krasnoyarsk","195/57/8":"Asia/Krasnoyarsk","196/57/8":"Asia/Krasnoyarsk","197/57/8":"Asia/Krasnoyarsk","198/57/8":"Asia/Krasnoyarsk","199/57/8":"Asia/Krasnoyarsk","200/57/8":"Asia/Krasnoyarsk","201/57/8":"Asia/Krasnoyarsk","202/57/8":"Asia/Krasnoyarsk","203/57/8":"Asia/Krasnoyarsk","187/58/8":"Asia/Krasnoyarsk","188/58/8":"Asia/Krasnoyarsk","189/58/8":"Asia/Krasnoyarsk","190/58/8":"Asia/Krasnoyarsk","191/58/8":"Asia/Krasnoyarsk","192/58/8":"Asia/Krasnoyarsk","193/58/8":"Asia/Krasnoyarsk","194/58/8":"Asia/Krasnoyarsk","195/58/8":"Asia/Krasnoyarsk","196/58/8":"Asia/Krasnoyarsk","197/58/8":"Asia/Krasnoyarsk","198/58/8":"Asia/Krasnoyarsk","199/58/8":"Asia/Krasnoyarsk","200/58/8":"Asia/Krasnoyarsk","201/58/8":"Asia/Krasnoyarsk","202/58/8":"Asia/Krasnoyarsk","187/59/8":"Asia/Krasnoyarsk","188/59/8":"Asia/Krasnoyarsk","189/59/8":"Asia/Krasnoyarsk","190/59/8":"Asia/Krasnoyarsk","191/59/8":"Asia/Krasnoyarsk","192/59/8":"Asia/Krasnoyarsk","193/59/8":"Asia/Krasnoyarsk","194/59/8":"Asia/Krasnoyarsk","195/59/8":"Asia/Krasnoyarsk","196/59/8":"Asia/Krasnoyarsk","197/59/8":"Asia/Krasnoyarsk","198/59/8":"Asia/Krasnoyarsk","199/59/8":"Asia/Krasnoyarsk","200/59/8":"Asia/Krasnoyarsk","201/59/8":"Asia/Krasnoyarsk","202/59/8":"Asia/Krasnoyarsk","187/60/8":"Asia/Krasnoyarsk","188/60/8":"Asia/Krasnoyarsk","189/60/8":"Asia/Krasnoyarsk","190/60/8":"Asia/Krasnoyarsk","191/60/8":"Asia/Krasnoyarsk","192/60/8":"Asia/Krasnoyarsk","193/60/8":"Asia/Krasnoyarsk","194/60/8":"Asia/Krasnoyarsk","195/60/8":"Asia/Krasnoyarsk","196/60/8":"Asia/Krasnoyarsk","197/60/8":"Asia/Krasnoyarsk","198/60/8":"Asia/Krasnoyarsk","199/60/8":"Asia/Krasnoyarsk","200/60/8":"Asia/Krasnoyarsk","201/60/8":"Asia/Krasnoyarsk","202/60/8":"Asia/Krasnoyarsk","203/60/8":"Asia/Krasnoyarsk","187/61/8":"Asia/Krasnoyarsk","188/61/8":"Asia/Krasnoyarsk","189/61/8":"Asia/Krasnoyarsk","190/61/8":"Asia/Krasnoyarsk","191/61/8":"Asia/Krasnoyarsk","192/61/8":"Asia/Krasnoyarsk","193/61/8":"Asia/Krasnoyarsk","194/61/8":"Asia/Krasnoyarsk","195/61/8":"Asia/Krasnoyarsk","196/61/8":"Asia/Krasnoyarsk","197/61/8":"Asia/Krasnoyarsk","198/61/8":"Asia/Krasnoyarsk","199/61/8":"Asia/Krasnoyarsk","200/61/8":"Asia/Krasnoyarsk","201/61/8":"Asia/Krasnoyarsk","202/61/8":"Asia/Krasnoyarsk","187/62/8":"Asia/Krasnoyarsk","188/62/8":"Asia/Krasnoyarsk","189/62/8":"Asia/Krasnoyarsk","190/62/8":"Asia/Krasnoyarsk","191/62/8":"Asia/Krasnoyarsk","192/62/8":"Asia/Krasnoyarsk","193/62/8":"Asia/Krasnoyarsk","194/62/8":"Asia/Krasnoyarsk","195/62/8":"Asia/Krasnoyarsk","196/62/8":"Asia/Krasnoyarsk","197/62/8":"Asia/Krasnoyarsk","198/62/8":"Asia/Krasnoyarsk","199/62/8":"Asia/Krasnoyarsk","200/62/8":"Asia/Krasnoyarsk","201/62/8":"Asia/Krasnoyarsk","202/62/8":"Asia/Krasnoyarsk","188/63/8":"Asia/Krasnoyarsk","189/63/8":"Asia/Krasnoyarsk","190/63/8":"Asia/Krasnoyarsk","191/63/8":"Asia/Krasnoyarsk","192/63/8":"Asia/Krasnoyarsk","193/63/8":"Asia/Krasnoyarsk","194/63/8":"Asia/Krasnoyarsk","195/63/8":"Asia/Krasnoyarsk","196/63/8":"Asia/Krasnoyarsk","197/63/8":"Asia/Krasnoyarsk","198/63/8":"Asia/Krasnoyarsk","199/63/8":"Asia/Krasnoyarsk","200/63/8":"Asia/Krasnoyarsk","201/63/8":"Asia/Krasnoyarsk","202/63/8":"Asia/Krasnoyarsk","188/64/8":"Asia/Krasnoyarsk","189/64/8":"Asia/Krasnoyarsk","190/64/8":"Asia/Krasnoyarsk","191/64/8":"Asia/Krasnoyarsk","192/64/8":"Asia/Krasnoyarsk","193/64/8":"Asia/Krasnoyarsk","194/64/8":"Asia/Krasnoyarsk","195/64/8":"Asia/Krasnoyarsk","196/64/8":"Asia/Krasnoyarsk","197/64/8":"Asia/Krasnoyarsk","198/64/8":"Asia/Krasnoyarsk","199/64/8":"Asia/Krasnoyarsk","200/64/8":"Asia/Krasnoyarsk","201/64/8":"Asia/Krasnoyarsk","202/64/8":"Asia/Krasnoyarsk","189/65/8":"Asia/Krasnoyarsk","190/65/8":"Asia/Krasnoyarsk","191/65/8":"Asia/Krasnoyarsk","192/65/8":"Asia/Krasnoyarsk","193/65/8":"Asia/Krasnoyarsk","194/65/8":"Asia/Krasnoyarsk","195/65/8":"Asia/Krasnoyarsk","196/65/8":"Asia/Krasnoyarsk","197/65/8":"Asia/Krasnoyarsk","198/65/8":"Asia/Krasnoyarsk","199/65/8":"Asia/Krasnoyarsk","200/65/8":"Asia/Krasnoyarsk","201/65/8":"Asia/Krasnoyarsk","202/65/8":"Asia/Krasnoyarsk","190/66/8":"Asia/Krasnoyarsk","191/66/8":"Asia/Krasnoyarsk","192/66/8":"Asia/Krasnoyarsk","193/66/8":"Asia/Krasnoyarsk","194/66/8":"Asia/Krasnoyarsk","195/66/8":"Asia/Krasnoyarsk","196/66/8":"Asia/Krasnoyarsk","197/66/8":"Asia/Krasnoyarsk","198/66/8":"Asia/Krasnoyarsk","199/66/8":"Asia/Krasnoyarsk","200/66/8":"Asia/Krasnoyarsk","201/66/8":"Asia/Krasnoyarsk","202/66/8":"Asia/Krasnoyarsk","190/67/8":"Asia/Krasnoyarsk","191/67/8":"Asia/Krasnoyarsk","192/67/8":"Asia/Krasnoyarsk","193/67/8":"Asia/Krasnoyarsk","194/67/8":"Asia/Krasnoyarsk","195/67/8":"Asia/Krasnoyarsk","196/67/8":"Asia/Krasnoyarsk","197/67/8":"Asia/Krasnoyarsk","198/67/8":"Asia/Krasnoyarsk","199/67/8":"Asia/Krasnoyarsk","200/67/8":"Asia/Krasnoyarsk","201/67/8":"Asia/Krasnoyarsk","202/67/8":"Asia/Krasnoyarsk","190/68/8":"Asia/Krasnoyarsk","191/68/8":"Asia/Krasnoyarsk","192/68/8":"Asia/Krasnoyarsk","193/68/8":"Asia/Krasnoyarsk","194/68/8":"Asia/Krasnoyarsk","195/68/8":"Asia/Krasnoyarsk","196/68/8":"Asia/Krasnoyarsk","197/68/8":"Asia/Krasnoyarsk","198/68/8":"Asia/Krasnoyarsk","199/68/8":"Asia/Krasnoyarsk","200/68/8":"Asia/Krasnoyarsk","201/68/8":"Asia/Krasnoyarsk","202/68/8":"Asia/Krasnoyarsk","189/69/8":"Asia/Krasnoyarsk","190/69/8":"Asia/Krasnoyarsk","191/69/8":"Asia/Krasnoyarsk","192/69/8":"Asia/Krasnoyarsk","193/69/8":"Asia/Krasnoyarsk","194/69/8":"Asia/Krasnoyarsk","195/69/8":"Asia/Krasnoyarsk","196/69/8":"Asia/Krasnoyarsk","197/69/8":"Asia/Krasnoyarsk","198/69/8":"Asia/Krasnoyarsk","199/69/8":"Asia/Krasnoyarsk","200/69/8":"Asia/Krasnoyarsk","201/69/8":"Asia/Krasnoyarsk","202/69/8":"Asia/Krasnoyarsk","189/70/8":"Asia/Krasnoyarsk","190/70/8":"Asia/Krasnoyarsk","191/70/8":"Asia/Krasnoyarsk","192/70/8":"Asia/Krasnoyarsk","193/70/8":"Asia/Krasnoyarsk","194/70/8":"Asia/Krasnoyarsk","195/70/8":"Asia/Krasnoyarsk","196/70/8":"Asia/Krasnoyarsk","197/70/8":"Asia/Krasnoyarsk","198/70/8":"Asia/Krasnoyarsk","199/70/8":"Asia/Krasnoyarsk","200/70/8":"Asia/Krasnoyarsk","201/70/8":"Asia/Krasnoyarsk","202/70/8":"Asia/Krasnoyarsk","189/71/8":"Asia/Krasnoyarsk","190/71/8":"Asia/Krasnoyarsk","191/71/8":"Asia/Krasnoyarsk","192/71/8":"Asia/Krasnoyarsk","193/71/8":"Asia/Krasnoyarsk","194/71/8":"Asia/Krasnoyarsk","195/71/8":"Asia/Krasnoyarsk","196/71/8":"Asia/Krasnoyarsk","197/71/8":"Asia/Krasnoyarsk","198/71/8":"Asia/Krasnoyarsk","199/71/8":"Asia/Krasnoyarsk","200/71/8":"Asia/Krasnoyarsk","201/71/8":"Asia/Krasnoyarsk","202/71/8":"Asia/Krasnoyarsk","190/72/8":"Asia/Krasnoyarsk","191/72/8":"Asia/Krasnoyarsk","192/72/8":"Asia/Krasnoyarsk","193/72/8":"Asia/Krasnoyarsk","194/72/8":"Asia/Krasnoyarsk","195/72/8":"Asia/Krasnoyarsk","196/72/8":"Asia/Krasnoyarsk","197/72/8":"Asia/Krasnoyarsk","198/72/8":"Asia/Krasnoyarsk","199/72/8":"Asia/Krasnoyarsk","200/72/8":"Asia/Krasnoyarsk","201/72/8":"Asia/Krasnoyarsk","189/73/8":"Asia/Krasnoyarsk","190/73/8":"Asia/Krasnoyarsk","191/73/8":"Asia/Krasnoyarsk","192/73/8":"Asia/Krasnoyarsk","193/73/8":"Asia/Krasnoyarsk","194/73/8":"Asia/Krasnoyarsk","195/73/8":"Asia/Krasnoyarsk","196/73/8":"Asia/Krasnoyarsk","197/73/8":"Asia/Krasnoyarsk","198/73/8":"Asia/Krasnoyarsk","199/73/8":"Asia/Krasnoyarsk","200/73/8":"Asia/Krasnoyarsk","201/73/8":"Asia/Krasnoyarsk","191/74/8":"Asia/Krasnoyarsk","192/74/8":"Asia/Krasnoyarsk","193/74/8":"Asia/Krasnoyarsk","194/74/8":"Asia/Krasnoyarsk","195/74/8":"Asia/Krasnoyarsk","196/74/8":"Asia/Krasnoyarsk","197/74/8":"Asia/Krasnoyarsk","198/74/8":"Asia/Krasnoyarsk","199/74/8":"Asia/Krasnoyarsk","200/74/8":"Asia/Krasnoyarsk","201/74/8":"Asia/Krasnoyarsk","192/75/8":"Asia/Krasnoyarsk","193/75/8":"Asia/Krasnoyarsk","194/75/8":"Asia/Krasnoyarsk","195/75/8":"Asia/Krasnoyarsk","196/75/8":"Asia/Krasnoyarsk","197/75/8":"Asia/Krasnoyarsk","198/75/8":"Asia/Krasnoyarsk","199/75/8":"Asia/Krasnoyarsk","191/76/8":"Asia/Krasnoyarsk","192/76/8":"Asia/Krasnoyarsk","193/76/8":"Asia/Krasnoyarsk","194/76/8":"Asia/Krasnoyarsk","195/76/8":"Asia/Krasnoyarsk","196/76/8":"Asia/Krasnoyarsk","197/76/8":"Asia/Krasnoyarsk","192/77/8":"Asia/Krasnoyarsk","193/77/8":"Asia/Krasnoyarsk","194/77/8":"Asia/Krasnoyarsk","195/77/8":"Asia/Krasnoyarsk","196/77/8":"Asia/Krasnoyarsk","192/78/8":"Asia/Krasnoyarsk","193/78/8":"Asia/Krasnoyarsk","194/78/8":"Asia/Krasnoyarsk","195/78/8":"Asia/Krasnoyarsk","196/78/8":"Asia/Krasnoyarsk","192/79/8":"Asia/Krasnoyarsk","193/79/8":"Asia/Krasnoyarsk","194/79/8":"Asia/Krasnoyarsk","195/79/8":"Asia/Krasnoyarsk","192/80/8":"Asia/Krasnoyarsk","193/80/8":"Asia/Krasnoyarsk","194/80/8":"Asia/Krasnoyarsk","195/80/8":"Asia/Krasnoyarsk","192/81/8":"Asia/Krasnoyarsk","193/81/8":"Asia/Krasnoyarsk","194/81/8":"Asia/Krasnoyarsk","195/81/8":"Asia/Krasnoyarsk","192/82/8":"Asia/Krasnoyarsk","193/82/8":"Asia/Krasnoyarsk","194/82/8":"Asia/Krasnoyarsk","195/82/8":"Asia/Krasnoyarsk","192/83/8":"Asia/Krasnoyarsk","193/83/8":"Asia/Krasnoyarsk","194/83/8":"Asia/Krasnoyarsk","195/83/8":"Asia/Krasnoyarsk","196/83/8":"Asia/Krasnoyarsk","192/84/8":"Asia/Krasnoyarsk","193/84/8":"Asia/Krasnoyarsk","194/84/8":"Asia/Krasnoyarsk","195/84/8":"Asia/Krasnoyarsk","196/84/8":"Asia/Krasnoyarsk","192/85/8":"Asia/Krasnoyarsk","195/85/8":"Asia/Krasnoyarsk","196/85/8":"Asia/Krasnoyarsk","191/22/8":"Asia/Krasnoyarsk","192/22/8":"Asia/Krasnoyarsk","193/22/8":"Asia/Krasnoyarsk","194/22/8":"Asia/Krasnoyarsk","195/22/8":"Asia/Krasnoyarsk","196/22/8":"Asia/Krasnoyarsk","197/22/8":"Asia/Krasnoyarsk","184/23/8":"Asia/Krasnoyarsk","191/23/8":"Asia/Krasnoyarsk","193/23/8":"Asia/Krasnoyarsk","194/23/8":"Asia/Krasnoyarsk","197/23/8":"Asia/Krasnoyarsk","183/24/8":"Asia/Krasnoyarsk","184/24/8":"Asia/Krasnoyarsk","185/24/8":"Asia/Krasnoyarsk","191/24/8":"Asia/Krasnoyarsk","192/24/8":"Asia/Krasnoyarsk","197/24/8":"Asia/Krasnoyarsk","198/24/8":"Asia/Krasnoyarsk","183/25/8":"Asia/Krasnoyarsk","185/25/8":"Asia/Krasnoyarsk","192/25/8":"Asia/Krasnoyarsk","193/25/8":"Asia/Krasnoyarsk","198/25/8":"Asia/Krasnoyarsk","183/26/8":"Asia/Krasnoyarsk","184/26/8":"Asia/Krasnoyarsk","185/26/8":"Asia/Krasnoyarsk","192/26/8":"Asia/Krasnoyarsk","198/26/8":"Asia/Krasnoyarsk","192/27/8":"Asia/Krasnoyarsk","198/27/8":"Asia/Krasnoyarsk","199/27/8":"Asia/Krasnoyarsk","191/28/8":"Asia/Krasnoyarsk","192/28/8":"Asia/Krasnoyarsk","199/28/8":"Asia/Krasnoyarsk","181/29/8":"Asia/Krasnoyarsk","182/29/8":"Asia/Krasnoyarsk","183/29/8":"Asia/Krasnoyarsk","191/29/8":"Asia/Krasnoyarsk","192/29/8":"Asia/Krasnoyarsk","199/29/8":"Asia/Krasnoyarsk","200/29/8":"Asia/Krasnoyarsk","181/30/8":"Asia/Krasnoyarsk","183/30/8":"Asia/Krasnoyarsk","191/30/8":"Asia/Krasnoyarsk","200/30/8":"Asia/Krasnoyarsk","201/30/8":"Asia/Krasnoyarsk","181/31/8":"Asia/Krasnoyarsk","182/31/8":"Asia/Krasnoyarsk","183/31/8":"Asia/Krasnoyarsk","191/31/8":"Asia/Krasnoyarsk","192/31/8":"Asia/Krasnoyarsk","201/31/8":"Asia/Krasnoyarsk","202/31/8":"Asia/Krasnoyarsk","192/32/8":"Asia/Krasnoyarsk","193/32/8":"Asia/Krasnoyarsk","202/32/8":"Asia/Krasnoyarsk","203/32/8":"Asia/Krasnoyarsk","193/33/8":"Asia/Krasnoyarsk","194/33/8":"Asia/Krasnoyarsk","195/33/8":"Asia/Krasnoyarsk","196/33/8":"Asia/Krasnoyarsk","203/33/8":"Asia/Krasnoyarsk","194/34/8":"Asia/Krasnoyarsk","195/34/8":"Asia/Krasnoyarsk","196/34/8":"Asia/Krasnoyarsk","203/34/8":"Asia/Krasnoyarsk","204/34/8":"Asia/Krasnoyarsk","193/35/8":"Asia/Krasnoyarsk","194/35/8":"Asia/Krasnoyarsk","195/35/8":"Asia/Krasnoyarsk","196/35/8":"Asia/Krasnoyarsk","197/35/8":"Asia/Krasnoyarsk","204/35/8":"Asia/Krasnoyarsk","205/35/8":"Asia/Krasnoyarsk","192/36/8":"Asia/Krasnoyarsk","193/36/8":"Asia/Krasnoyarsk","194/36/8":"Asia/Krasnoyarsk","195/36/8":"Asia/Krasnoyarsk","197/36/8":"Asia/Krasnoyarsk","205/36/8":"Asia/Krasnoyarsk","185/37/8":"Asia/Krasnoyarsk","186/37/8":"Asia/Krasnoyarsk","187/37/8":"Asia/Krasnoyarsk","191/37/8":"Asia/Krasnoyarsk","192/37/8":"Asia/Krasnoyarsk","193/37/8":"Asia/Krasnoyarsk","194/37/8":"Asia/Krasnoyarsk","196/37/8":"Asia/Krasnoyarsk","197/37/8":"Asia/Krasnoyarsk","205/37/8":"Asia/Krasnoyarsk","185/38/8":"Asia/Krasnoyarsk","186/38/8":"Asia/Krasnoyarsk","187/38/8":"Asia/Krasnoyarsk","190/38/8":"Asia/Krasnoyarsk","191/38/8":"Asia/Krasnoyarsk","193/38/8":"Asia/Krasnoyarsk","195/38/8":"Asia/Krasnoyarsk","196/38/8":"Asia/Krasnoyarsk","205/38/8":"Asia/Krasnoyarsk","190/39/8":"Asia/Krasnoyarsk","192/39/8":"Asia/Krasnoyarsk","193/39/8":"Asia/Krasnoyarsk","194/39/8":"Asia/Krasnoyarsk","195/39/8":"Asia/Krasnoyarsk","205/39/8":"Asia/Krasnoyarsk","206/39/8":"Asia/Krasnoyarsk","207/39/8":"Asia/Krasnoyarsk","190/40/8":"Asia/Krasnoyarsk","191/40/8":"Asia/Krasnoyarsk","192/40/8":"Asia/Krasnoyarsk","193/40/8":"Asia/Krasnoyarsk","194/40/8":"Asia/Krasnoyarsk","207/40/8":"Asia/Krasnoyarsk","208/40/8":"Asia/Krasnoyarsk","209/40/8":"Asia/Krasnoyarsk","186/41/8":"Asia/Krasnoyarsk","192/41/8":"Asia/Krasnoyarsk","193/41/8":"Asia/Krasnoyarsk","209/41/8":"Asia/Krasnoyarsk","185/42/8":"Asia/Krasnoyarsk","186/42/8":"Asia/Krasnoyarsk","187/42/8":"Asia/Krasnoyarsk","190/42/8":"Asia/Krasnoyarsk","191/42/8":"Asia/Krasnoyarsk","192/42/8":"Asia/Krasnoyarsk","209/42/8":"Asia/Krasnoyarsk","185/43/8":"Asia/Krasnoyarsk","186/43/8":"Asia/Krasnoyarsk","187/43/8":"Asia/Krasnoyarsk","189/43/8":"Asia/Krasnoyarsk","190/43/8":"Asia/Krasnoyarsk","209/43/8":"Asia/Krasnoyarsk","185/44/8":"Asia/Krasnoyarsk","186/44/8":"Asia/Krasnoyarsk","187/44/8":"Asia/Krasnoyarsk","188/44/8":"Asia/Krasnoyarsk","189/44/8":"Asia/Krasnoyarsk","209/44/8":"Asia/Krasnoyarsk","183/45/8":"Asia/Krasnoyarsk","184/45/8":"Asia/Krasnoyarsk","185/45/8":"Asia/Krasnoyarsk","186/45/8":"Asia/Krasnoyarsk","187/45/8":"Asia/Krasnoyarsk","188/45/8":"Asia/Krasnoyarsk","208/45/8":"Asia/Krasnoyarsk","209/45/8":"Asia/Krasnoyarsk","183/46/8":"Asia/Krasnoyarsk","184/46/8":"Asia/Krasnoyarsk","185/46/8":"Asia/Krasnoyarsk","186/46/8":"Asia/Krasnoyarsk","187/46/8":"Asia/Krasnoyarsk","206/46/8":"Asia/Krasnoyarsk","207/46/8":"Asia/Krasnoyarsk","208/46/8":"Asia/Yakutsk","184/47/8":"Asia/Krasnoyarsk","185/47/8":"Asia/Krasnoyarsk","186/47/8":"Asia/Krasnoyarsk","206/47/8":"Asia/Krasnoyarsk","207/47/8":"Asia/Yakutsk","183/48/8":"Asia/Krasnoyarsk","184/48/8":"Asia/Krasnoyarsk","185/48/8":"Asia/Krasnoyarsk","206/48/8":"Asia/Krasnoyarsk","207/48/8":"Asia/Yakutsk","183/49/8":"Asia/Krasnoyarsk","206/49/8":"Asia/Krasnoyarsk","207/49/8":"Asia/Yakutsk","183/50/8":"Asia/Krasnoyarsk","206/50/8":"Asia/Krasnoyarsk","183/51/8":"Asia/Yekaterinburg","206/51/8":"Asia/Krasnoyarsk","207/51/8":"Asia/Yakutsk","183/52/8":"Asia/Yekaterinburg","184/52/8":"Asia/Krasnoyarsk","206/52/8":"Asia/Krasnoyarsk","207/52/8":"Asia/Yakutsk","184/53/8":"Asia/Yekaterinburg","185/53/8":"Asia/Krasnoyarsk","207/53/8":"Asia/Krasnoyarsk","184/54/8":"Asia/Yekaterinburg","185/54/8":"Asia/Krasnoyarsk","207/54/8":"Asia/Krasnoyarsk","208/54/8":"Asia/Yakutsk","185/55/8":"Asia/Krasnoyarsk","206/55/8":"Asia/Krasnoyarsk","207/55/8":"Asia/Yakutsk","184/56/8":"Asia/Yekaterinburg","185/56/8":"Asia/Krasnoyarsk","205/56/8":"Asia/Krasnoyarsk","206/56/8":"Asia/Yakutsk","184/57/8":"Asia/Krasnoyarsk","204/57/8":"Asia/Krasnoyarsk","205/57/8":"Asia/Krasnoyarsk","184/58/8":"Asia/Yekaterinburg","185/58/8":"Asia/Krasnoyarsk","186/58/8":"Asia/Krasnoyarsk","203/58/8":"Asia/Krasnoyarsk","204/58/8":"Asia/Yakutsk","186/59/8":"Asia/Yekaterinburg","203/59/8":"Asia/Krasnoyarsk","204/59/8":"Asia/Yakutsk","186/60/8":"Asia/Yekaterinburg","204/60/8":"Asia/Yakutsk","186/61/8":"Asia/Krasnoyarsk","203/61/8":"Asia/Krasnoyarsk","204/61/8":"Asia/Yakutsk","186/62/8":"Asia/Yekaterinburg","203/62/8":"Asia/Krasnoyarsk","186/63/8":"Asia/Yekaterinburg","187/63/8":"Asia/Krasnoyarsk","203/63/8":"Asia/Yakutsk","187/64/8":"Asia/Krasnoyarsk","203/64/8":"Asia/Krasnoyarsk","187/65/8":"Asia/Yekaterinburg","188/65/8":"Asia/Krasnoyarsk","203/65/8":"Asia/Krasnoyarsk","204/65/8":"Asia/Yakutsk","187/66/8":"Asia/Yekaterinburg","188/66/8":"Asia/Krasnoyarsk","189/66/8":"Asia/Krasnoyarsk","203/66/8":"Asia/Krasnoyarsk","188/67/8":"Asia/Yekaterinburg","189/67/8":"Asia/Krasnoyarsk","203/67/8":"Asia/Krasnoyarsk","188/68/8":"Asia/Yekaterinburg","189/68/8":"Asia/Krasnoyarsk","188/69/8":"Asia/Yekaterinburg","188/70/8":"Asia/Krasnoyarsk","188/71/8":"Asia/Krasnoyarsk","188/72/8":"Asia/Yekaterinburg","189/72/8":"Asia/Krasnoyarsk","187/73/8":"Asia/Tomsk","188/73/8":"Asia/Krasnoyarsk","188/74/8":"Asia/Tomsk","189/74/8":"Asia/Tomsk","190/74/8":"Asia/Krasnoyarsk","190/75/8":"Asia/Tomsk","191/75/8":"Asia/Krasnoyarsk","190/76/8":"Asia/Tomsk","190/77/8":"Asia/Tomsk","191/77/8":"Asia/Krasnoyarsk","190/78/8":"Asia/Tomsk","191/78/8":"Asia/Krasnoyarsk","190/79/8":"Asia/Novokuznetsk","191/79/8":"Asia/Krasnoyarsk","190/80/8":"Asia/Novokuznetsk","191/80/8":"Asia/Krasnoyarsk","190/81/8":"Asia/Novokuznetsk","191/81/8":"Asia/Krasnoyarsk","191/82/8":"Asia/Krasnoyarsk","191/83/8":"Asia/Krasnoyarsk","191/84/8":"Asia/Krasnoyarsk","197/84/8":"Asia/Krasnoyarsk","197/85/8":"Asia/Krasnoyarsk","197/86/8":"Asia/Krasnoyarsk","200/124/8":"Asia/Kuala_Lumpur","200/125/8":"Asia/Kuala_Lumpur","201/123/8":"Asia/Kuala_Lumpur","201/124/8":"Asia/Kuala_Lumpur","201/125/8":"Asia/Kuala_Lumpur","210/122/8":"Asia/Kuching","211/122/8":"Asia/Manila","210/123/8":"Asia/Kuching","211/123/8":"Asia/Kuching","212/123/8":"Asia/Manila","208/124/8":"Asia/Kuching","211/124/8":"Asia/Kuching","212/124/8":"Asia/Kuching","206/125/8":"Asia/Kuching","207/125/8":"Asia/Kuching","208/125/8":"Asia/Kuching","210/125/8":"Asia/Makassar","211/125/8":"Asia/Makassar","212/125/8":"Asia/Makassar","207/126/8":"Asia/Kuching","208/126/8":"Asia/Kuching","209/126/8":"Asia/Kuching","206/127/8":"Asia/Pontianak","207/127/8":"Asia/Pontianak","208/127/8":"Asia/Pontianak","162/106/8":"Asia/Kuwait","238/65/8":"Asia/Magadan","238/66/8":"Asia/Magadan","239/66/8":"Asia/Magadan","240/66/8":"Asia/Magadan","237/67/8":"Asia/Magadan","238/67/8":"Asia/Magadan","239/67/8":"Asia/Magadan","240/67/8":"Asia/Magadan","241/67/8":"Asia/Magadan","242/67/8":"Asia/Magadan","234/68/8":"Asia/Magadan","236/68/8":"Asia/Magadan","237/68/8":"Asia/Magadan","238/68/8":"Asia/Magadan","239/68/8":"Asia/Magadan","240/68/8":"Asia/Magadan","241/68/8":"Asia/Magadan","242/68/8":"Asia/Magadan","232/69/8":"Asia/Magadan","233/69/8":"Asia/Magadan","234/69/8":"Asia/Magadan","235/69/8":"Asia/Magadan","236/69/8":"Asia/Magadan","237/69/8":"Asia/Magadan","238/69/8":"Asia/Magadan","239/69/8":"Asia/Magadan","240/69/8":"Asia/Magadan","241/69/8":"Asia/Magadan","242/69/8":"Asia/Magadan","232/70/8":"Asia/Magadan","233/70/8":"Asia/Magadan","234/70/8":"Asia/Magadan","235/70/8":"Asia/Magadan","236/70/8":"Asia/Magadan","237/70/8":"Asia/Magadan","238/70/8":"Asia/Magadan","239/70/8":"Asia/Magadan","240/70/8":"Asia/Magadan","241/70/8":"Asia/Magadan","242/70/8":"Asia/Magadan","233/71/8":"Asia/Magadan","234/71/8":"Asia/Magadan","235/71/8":"Asia/Magadan","236/71/8":"Asia/Magadan","237/71/8":"Asia/Magadan","238/71/8":"Asia/Magadan","239/71/8":"Asia/Magadan","241/71/8":"Asia/Magadan","242/71/8":"Asia/Magadan","233/72/8":"Asia/Magadan","234/72/8":"Asia/Magadan","235/72/8":"Asia/Magadan","236/72/8":"Asia/Magadan","237/72/8":"Asia/Magadan","238/72/8":"Asia/Magadan","242/72/8":"Asia/Magadan","233/73/8":"Asia/Magadan","234/73/8":"Asia/Magadan","235/73/8":"Asia/Magadan","236/73/8":"Asia/Magadan","237/73/8":"Asia/Magadan","233/74/8":"Asia/Magadan","234/74/8":"Asia/Magadan","235/74/8":"Asia/Magadan","236/74/8":"Asia/Magadan","237/74/8":"Asia/Magadan","235/75/8":"Asia/Magadan","237/64/8":"Asia/Srednekolymsk","238/64/8":"Asia/Srednekolymsk","239/64/8":"Asia/Srednekolymsk","237/65/8":"Asia/Magadan","239/65/8":"Asia/Magadan","236/66/8":"Asia/Srednekolymsk","237/66/8":"Asia/Magadan","232/67/8":"Asia/Srednekolymsk","233/67/8":"Asia/Srednekolymsk","234/67/8":"Asia/Srednekolymsk","235/67/8":"Asia/Srednekolymsk","236/67/8":"Asia/Magadan","231/68/8":"Asia/Ust-Nera","232/68/8":"Asia/Magadan","233/68/8":"Asia/Magadan","235/68/8":"Asia/Magadan","231/69/8":"Asia/Magadan","231/70/8":"Asia/Magadan","230/71/8":"Asia/Ust-Nera","231/71/8":"Asia/Vladivostok","232/71/8":"Asia/Magadan","240/71/8":"Asia/Magadan","232/72/8":"Asia/Magadan","239/72/8":"Asia/Magadan","240/72/8":"Asia/Magadan","241/72/8":"Asia/Magadan","231/73/8":"Asia/Vladivostok","232/73/8":"Asia/Magadan","238/73/8":"Asia/Magadan","239/73/8":"Asia/Magadan","241/73/8":"Asia/Magadan","231/74/8":"Asia/Vladivostok","232/74/8":"Asia/Magadan","238/74/8":"Asia/Magadan","232/75/8":"Asia/Vladivostok","233/75/8":"Asia/Magadan","234/75/8":"Asia/Magadan","236/75/8":"Asia/Magadan","237/75/8":"Asia/Magadan","238/75/8":"Asia/Magadan","234/76/8":"Asia/Magadan","235/76/8":"Asia/Magadan","236/76/8":"Asia/Magadan","217/125/8":"Asia/Makassar","210/126/8":"Asia/Makassar","211/126/8":"Asia/Makassar","210/127/8":"Asia/Makassar","211/127/8":"Asia/Makassar","212/127/8":"Asia/Makassar","211/128/8":"Asia/Makassar","212/128/8":"Asia/Makassar","213/128/8":"Asia/Makassar","214/128/8":"Asia/Makassar","215/128/8":"Asia/Makassar","211/129/8":"Asia/Makassar","212/129/8":"Asia/Makassar","213/129/8":"Asia/Makassar","214/129/8":"Asia/Makassar","215/129/8":"Asia/Makassar","210/130/8":"Asia/Makassar","211/130/8":"Asia/Makassar","212/130/8":"Asia/Makassar","213/130/8":"Asia/Makassar","214/130/8":"Asia/Makassar","215/130/8":"Asia/Makassar","211/131/8":"Asia/Makassar","212/131/8":"Asia/Makassar","213/131/8":"Asia/Makassar","214/131/8":"Asia/Makassar","215/131/8":"Asia/Makassar","216/131/8":"Asia/Makassar","211/132/8":"Asia/Makassar","212/132/8":"Asia/Makassar","213/132/8":"Asia/Makassar","214/132/8":"Asia/Makassar","215/132/8":"Asia/Makassar","216/132/8":"Asia/Makassar","211/133/8":"Asia/Makassar","212/133/8":"Asia/Makassar","213/133/8":"Asia/Makassar","214/133/8":"Asia/Makassar","215/133/8":"Asia/Makassar","216/133/8":"Asia/Makassar","213/134/8":"Asia/Makassar","214/134/8":"Asia/Makassar","215/134/8":"Asia/Makassar","217/123/8":"Asia/Manila","218/123/8":"Asia/Manila","216/124/8":"Asia/Manila","217/124/8":"Asia/Makassar","218/124/8":"Asia/Makassar","216/125/8":"Asia/Makassar","212/126/8":"Asia/Makassar","213/126/8":"Asia/Makassar","214/126/8":"Asia/Makassar","216/126/8":"Asia/Makassar","209/127/8":"Asia/Makassar","213/127/8":"Asia/Makassar","214/127/8":"Asia/Makassar","215/127/8":"Asia/Makassar","216/127/8":"Asia/Makassar","209/128/8":"Asia/Pontianak","210/128/8":"Asia/Makassar","209/129/8":"Asia/Pontianak","210/129/8":"Asia/Makassar","209/130/8":"Asia/Makassar","210/134/8":"Asia/Makassar","211/134/8":"Asia/Makassar","212/134/8":"Asia/Makassar","212/135/8":"Asia/Makassar","213/135/8":"Asia/Makassar","214/135/8":"Asia/Makassar","215/135/8":"Asia/Makassar","216/135/8":"Asia/Makassar","215/136/8":"Asia/Makassar","214/115/8":"Asia/Manila","214/116/8":"Asia/Manila","214/117/8":"Asia/Manila","214/118/8":"Asia/Manila","215/118/8":"Asia/Manila","214/119/8":"Asia/Manila","215/119/8":"Asia/Manila","216/119/8":"Asia/Manila","213/120/8":"Asia/Manila","214/120/8":"Asia/Manila","215/120/8":"Asia/Manila","216/120/8":"Asia/Manila","212/121/8":"Asia/Manila","213/121/8":"Asia/Manila","214/121/8":"Asia/Manila","215/121/8":"Asia/Manila","216/121/8":"Asia/Manila","212/122/8":"Asia/Manila","213/122/8":"Asia/Manila","214/122/8":"Asia/Manila","215/122/8":"Asia/Manila","216/122/8":"Asia/Manila","217/122/8":"Asia/Manila","213/123/8":"Asia/Manila","214/112/8":"Asia/Manila","214/113/8":"Asia/Manila","215/113/8":"Asia/Manila","213/114/8":"Asia/Manila","214/114/8":"Asia/Manila","215/114/8":"Asia/Manila","213/115/8":"Asia/Manila","215/115/8":"Asia/Manila","213/116/8":"Asia/Manila","215/116/8":"Asia/Manila","213/117/8":"Asia/Manila","215/117/8":"Asia/Manila","216/117/8":"Asia/Manila","213/118/8":"Asia/Manila","216/118/8":"Asia/Manila","217/118/8":"Asia/Manila","212/119/8":"Asia/Manila","213/119/8":"Asia/Manila","217/119/8":"Asia/Manila","211/120/8":"Asia/Manila","212/120/8":"Asia/Manila","217/120/8":"Asia/Manila","211/121/8":"Asia/Manila","217/121/8":"Asia/Manila","218/121/8":"Asia/Manila","218/122/8":"Asia/Manila","214/123/8":"Asia/Manila","215/123/8":"Asia/Manila","216/123/8":"Asia/Manila","213/124/8":"Asia/Manila","214/124/8":"Asia/Manila","168/111/8":"Asia/Muscat","169/111/8":"Asia/Muscat","168/112/8":"Asia/Muscat","168/113/8":"Asia/Muscat","166/114/8":"Asia/Muscat","167/114/8":"Asia/Muscat","168/108/8":"Asia/Tehran","168/110/8":"Asia/Muscat","169/110/8":"Asia/Muscat","170/110/8":"Asia/Muscat","170/111/8":"Asia/Muscat","167/112/8":"Asia/Muscat","169/112/8":"Asia/Muscat","170/112/8":"Asia/Muscat","165/113/8":"Asia/Riyadh","166/113/8":"Asia/Riyadh","167/113/8":"Asia/Muscat","169/113/8":"Asia/Muscat","170/113/8":"Asia/Muscat","168/114/8":"Asia/Muscat","169/114/8":"Asia/Muscat","166/115/8":"Asia/Muscat","167/115/8":"Asia/Muscat","168/115/8":"Asia/Muscat","166/116/8":"Asia/Muscat","150/101/8":"Asia/Nicosia","151/101/8":"Asia/Nicosia","152/101/8":"Asia/Nicosia","189/80/8":"Asia/Novokuznetsk","189/81/8":"Asia/Novokuznetsk","190/82/8":"Asia/Novokuznetsk","189/78/8":"Asia/Tomsk","188/79/8":"Asia/Tomsk","189/79/8":"Asia/Novokuznetsk","188/80/8":"Asia/Novokuznetsk","183/79/8":"Asia/Novosibirsk","182/80/8":"Asia/Novosibirsk","183/80/8":"Asia/Novosibirsk","184/80/8":"Asia/Novosibirsk","185/80/8":"Asia/Novosibirsk","186/80/8":"Asia/Novosibirsk","183/81/8":"Asia/Novosibirsk","184/81/8":"Asia/Novosibirsk","186/81/8":"Asia/Novosibirsk","182/78/8":"Asia/Novosibirsk","183/78/8":"Asia/Novosibirsk","184/78/8":"Asia/Tomsk","181/79/8":"Asia/Omsk","182/79/8":"Asia/Novosibirsk","184/79/8":"Asia/Novosibirsk","185/79/8":"Asia/Novosibirsk","186/79/8":"Asia/Novosibirsk","187/79/8":"Asia/Tomsk","181/80/8":"Asia/Omsk","187/80/8":"Asia/Novosibirsk","180/77/8":"Asia/Omsk","179/78/8":"Asia/Omsk","180/78/8":"Asia/Omsk","181/78/8":"Asia/Omsk","179/79/8":"Asia/Omsk","180/79/8":"Asia/Omsk","179/80/8":"Asia/Omsk","180/80/8":"Asia/Omsk","180/81/8":"Asia/Omsk","178/76/8":"Asia/Yekaterinburg","179/76/8":"Asia/Yekaterinburg","180/76/8":"Asia/Yekaterinburg","181/76/8":"Asia/Tomsk","178/77/8":"Asia/Omsk","179/77/8":"Asia/Omsk","181/77/8":"Asia/Omsk","182/77/8":"Asia/Tomsk","178/78/8":"Asia/Yekaterinburg","178/79/8":"Asia/Omsk","163/86/8":"Asia/Oral","164/86/8":"Asia/Oral","165/86/8":"Asia/Oral","163/87/8":"Asia/Oral","164/87/8":"Asia/Oral","163/84/8":"Europe/Samara","164/84/8":"Asia/Yekaterinburg","165/84/8":"Asia/Yekaterinburg","162/85/8":"Asia/Oral","163/85/8":"Asia/Oral","164/85/8":"Asia/Oral","165/85/8":"Asia/Oral","161/86/8":"Europe/Volgograd","162/86/8":"Asia/Oral","161/87/8":"Asia/Oral","162/87/8":"Asia/Oral","165/87/8":"Asia/Oral","161/88/8":"Asia/Oral","162/88/8":"Asia/Oral","163/88/8":"Asia/Oral","164/88/8":"Asia/Oral","165/88/8":"Asia/Oral","162/89/8":"Europe/Astrakhan","163/89/8":"Asia/Oral","202/118/8":"Asia/Phnom_Penh","202/119/8":"Asia/Phnom_Penh","203/118/8":"Asia/Phnom_Penh","200/120/8":"Asia/Phnom_Penh","206/128/8":"Asia/Pontianak","208/128/8":"Asia/Pontianak","206/129/8":"Asia/Pontianak","207/129/8":"Asia/Pontianak","208/129/8":"Asia/Pontianak","206/130/8":"Asia/Pontianak","207/130/8":"Asia/Pontianak","208/130/8":"Asia/Pontianak","218/96/8":"Asia/Pyongyang","217/97/8":"Asia/Pyongyang","220/95/8":"Asia/Pyongyang","216/96/8":"Asia/Shanghai","219/96/8":"Asia/Pyongyang","220/96/8":"Asia/Pyongyang","216/97/8":"Asia/Pyongyang","218/97/8":"Asia/Pyongyang","219/97/8":"Asia/Pyongyang","216/98/8":"Asia/Pyongyang","217/98/8":"Asia/Pyongyang","218/98/8":"Asia/Pyongyang","219/98/8":"Asia/Seoul","216/99/8":"Asia/Seoul","217/99/8":"Asia/Seoul","165/108/8":"Asia/Tehran","173/82/8":"Asia/Qyzylorda","173/83/8":"Asia/Qyzylorda","172/84/8":"Asia/Qyzylorda","173/84/8":"Asia/Qyzylorda","173/85/8":"Asia/Qyzylorda","173/86/8":"Asia/Qyzylorda","174/86/8":"Asia/Qyzylorda","173/87/8":"Asia/Qyzylorda","171/91/8":"Asia/Qyzylorda","172/91/8":"Asia/Qyzylorda","173/91/8":"Asia/Qyzylorda","174/91/8":"Asia/Qyzylorda","172/92/8":"Asia/Qyzylorda","173/92/8":"Asia/Qyzylorda","174/92/8":"Asia/Qyzylorda","175/93/8":"Asia/Qyzylorda","172/81/8":"Asia/Yekaterinburg","173/81/8":"Asia/Yekaterinburg","171/82/8":"Asia/Yekaterinburg","172/82/8":"Asia/Qyzylorda","171/83/8":"Asia/Yekaterinburg","172/83/8":"Asia/Qyzylorda","170/84/8":"Asia/Yekaterinburg","171/84/8":"Asia/Qyzylorda","170/92/8":"Asia/Samarkand","171/92/8":"Asia/Qyzylorda","171/93/8":"Asia/Samarkand","172/93/8":"Asia/Qyzylorda","173/93/8":"Asia/Samarkand","174/93/8":"Asia/Qyzylorda","197/108/8":"Asia/Rangoon","196/109/8":"Asia/Rangoon","196/110/8":"Asia/Rangoon","195/111/8":"Asia/Rangoon","196/111/8":"Asia/Rangoon","197/111/8":"Asia/Rangoon","194/112/8":"Asia/Rangoon","195/112/8":"Asia/Rangoon","196/112/8":"Asia/Rangoon","197/112/8":"Asia/Rangoon","198/112/8":"Asia/Rangoon","195/113/8":"Asia/Rangoon","196/113/8":"Asia/Rangoon","195/114/8":"Asia/Rangoon","196/114/8":"Asia/Rangoon","195/115/8":"Asia/Rangoon","194/113/8":"Asia/Rangoon","194/114/8":"Asia/Rangoon","194/115/8":"Asia/Rangoon","196/115/8":"Asia/Rangoon","194/116/8":"Asia/Rangoon","195/116/8":"Asia/Rangoon","196/116/8":"Asia/Rangoon","194/117/8":"Asia/Rangoon","197/118/8":"Asia/Rangoon","197/119/8":"Asia/Rangoon","156/105/8":"Asia/Riyadh","157/105/8":"Asia/Riyadh","154/106/8":"Asia/Riyadh","155/106/8":"Asia/Riyadh","156/106/8":"Asia/Riyadh","157/106/8":"Asia/Riyadh","158/106/8":"Asia/Riyadh","154/107/8":"Asia/Riyadh","155/107/8":"Asia/Riyadh","156/107/8":"Asia/Riyadh","157/107/8":"Asia/Riyadh","158/107/8":"Asia/Riyadh","159/107/8":"Asia/Riyadh","160/107/8":"Asia/Riyadh","161/107/8":"Asia/Riyadh","154/108/8":"Asia/Riyadh","155/108/8":"Asia/Riyadh","156/108/8":"Asia/Riyadh","157/108/8":"Asia/Riyadh","158/108/8":"Asia/Riyadh","159/108/8":"Asia/Riyadh","160/108/8":"Asia/Riyadh","161/108/8":"Asia/Riyadh","162/108/8":"Asia/Riyadh","155/109/8":"Asia/Riyadh","156/109/8":"Asia/Riyadh","157/109/8":"Asia/Riyadh","158/109/8":"Asia/Riyadh","159/109/8":"Asia/Riyadh","160/109/8":"Asia/Riyadh","161/109/8":"Asia/Riyadh","162/109/8":"Asia/Riyadh","156/110/8":"Asia/Riyadh","157/110/8":"Asia/Riyadh","158/110/8":"Asia/Riyadh","159/110/8":"Asia/Riyadh","160/110/8":"Asia/Riyadh","161/110/8":"Asia/Riyadh","162/110/8":"Asia/Riyadh","163/110/8":"Asia/Riyadh","156/111/8":"Asia/Riyadh","157/111/8":"Asia/Riyadh","158/111/8":"Asia/Riyadh","159/111/8":"Asia/Riyadh","160/111/8":"Asia/Riyadh","161/111/8":"Asia/Riyadh","162/111/8":"Asia/Riyadh","163/111/8":"Asia/Riyadh","164/111/8":"Asia/Riyadh","156/112/8":"Asia/Riyadh","157/112/8":"Asia/Riyadh","158/112/8":"Asia/Riyadh","159/112/8":"Asia/Riyadh","160/112/8":"Asia/Riyadh","161/112/8":"Asia/Riyadh","162/112/8":"Asia/Riyadh","163/112/8":"Asia/Riyadh","164/112/8":"Asia/Riyadh","165/112/8":"Asia/Riyadh","166/112/8":"Asia/Riyadh","157/113/8":"Asia/Riyadh","158/113/8":"Asia/Riyadh","159/113/8":"Asia/Riyadh","160/113/8":"Asia/Riyadh","161/113/8":"Asia/Riyadh","162/113/8":"Asia/Riyadh","163/113/8":"Asia/Riyadh","164/113/8":"Asia/Riyadh","157/114/8":"Asia/Riyadh","158/114/8":"Asia/Riyadh","159/114/8":"Asia/Riyadh","160/114/8":"Asia/Riyadh","161/114/8":"Asia/Riyadh","153/107/8":"Asia/Riyadh","162/107/8":"Asia/Riyadh","163/107/8":"Asia/Riyadh","153/108/8":"Asia/Riyadh","154/109/8":"Asia/Riyadh","155/110/8":"Asia/Riyadh","155/111/8":"Asia/Riyadh","155/112/8":"Asia/Riyadh","156/113/8":"Asia/Riyadh","156/114/8":"Asia/Riyadh","157/115/8":"Asia/Riyadh","169/92/8":"Asia/Samarkand","168/93/8":"Asia/Samarkand","169/93/8":"Asia/Samarkand","170/93/8":"Asia/Samarkand","171/94/8":"Asia/Samarkand","172/94/8":"Asia/Samarkand","173/94/8":"Asia/Samarkand","173/95/8":"Asia/Samarkand","173/96/8":"Asia/Samarkand","174/96/8":"Asia/Samarkand","174/97/8":"Asia/Samarkand","175/96/8":"Asia/Samarkand","229/83/8":"Asia/Sakhalin","229/84/8":"Asia/Sakhalin","229/85/8":"Asia/Sakhalin","229/86/8":"Asia/Sakhalin","228/81/8":"Asia/Sakhalin","229/81/8":"Asia/Sakhalin","228/82/8":"Asia/Vladivostok","229/82/8":"Asia/Sakhalin","230/82/8":"Asia/Sakhalin","228/83/8":"Asia/Vladivostok","230/83/8":"Asia/Sakhalin","228/84/8":"Asia/Vladivostok","230/84/8":"Asia/Sakhalin","228/85/8":"Asia/Vladivostok","230/85/8":"Asia/Sakhalin","228/86/8":"Asia/Vladivostok","230/86/8":"Asia/Sakhalin","228/87/8":"Asia/Sakhalin","229/87/8":"Asia/Sakhalin","230/87/8":"Asia/Sakhalin","231/87/8":"Asia/Sakhalin","228/88/8":"Asia/Sakhalin","229/88/8":"Asia/Sakhalin","230/88/8":"Asia/Sakhalin","231/88/8":"Asia/Sakhalin","228/89/8":"Asia/Sakhalin","229/89/8":"Asia/Sakhalin","230/89/8":"Asia/Sakhalin","228/90/8":"Asia/Sakhalin","229/90/8":"Asia/Sakhalin","230/90/8":"Asia/Sakhalin","228/91/8":"Asia/Tokyo","229/91/8":"Asia/Tokyo","230/91/8":"Asia/Sakhalin","218/99/8":"Asia/Seoul","218/100/8":"Asia/Seoul","219/100/8":"Asia/Seoul","218/101/8":"Asia/Seoul","220/98/8":"Asia/Seoul","221/98/8":"Asia/Seoul","219/99/8":"Asia/Seoul","220/99/8":"Asia/Seoul","221/99/8":"Asia/Seoul","217/100/8":"Asia/Seoul","220/100/8":"Asia/Seoul","216/101/8":"Asia/Seoul","217/101/8":"Asia/Seoul","219/101/8":"Asia/Seoul","220/101/8":"Asia/Tokyo","216/102/8":"Asia/Seoul","217/102/8":"Asia/Seoul","218/102/8":"Asia/Seoul","219/102/8":"Asia/Tokyo","217/103/8":"Asia/Seoul","218/103/8":"Asia/Seoul","214/85/8":"Asia/Shanghai","213/86/8":"Asia/Shanghai","214/86/8":"Asia/Shanghai","215/86/8":"Asia/Shanghai","216/86/8":"Asia/Shanghai","213/87/8":"Asia/Shanghai","214/87/8":"Asia/Shanghai","215/87/8":"Asia/Shanghai","213/88/8":"Asia/Shanghai","214/88/8":"Asia/Shanghai","214/89/8":"Asia/Shanghai","214/90/8":"Asia/Shanghai","211/91/8":"Asia/Shanghai","212/91/8":"Asia/Shanghai","213/91/8":"Asia/Shanghai","210/92/8":"Asia/Shanghai","211/92/8":"Asia/Shanghai","212/92/8":"Asia/Shanghai","213/92/8":"Asia/Shanghai","208/93/8":"Asia/Shanghai","209/93/8":"Asia/Shanghai","210/93/8":"Asia/Shanghai","211/93/8":"Asia/Shanghai","212/93/8":"Asia/Shanghai","213/93/8":"Asia/Shanghai","214/93/8":"Asia/Shanghai","210/94/8":"Asia/Shanghai","211/94/8":"Asia/Shanghai","212/94/8":"Asia/Shanghai","213/94/8":"Asia/Shanghai","214/94/8":"Asia/Shanghai","215/94/8":"Asia/Shanghai","210/95/8":"Asia/Shanghai","211/95/8":"Asia/Shanghai","212/95/8":"Asia/Shanghai","213/95/8":"Asia/Shanghai","214/95/8":"Asia/Shanghai","215/95/8":"Asia/Shanghai","216/95/8":"Asia/Shanghai","210/96/8":"Asia/Shanghai","211/96/8":"Asia/Shanghai","212/96/8":"Asia/Shanghai","213/96/8":"Asia/Shanghai","214/96/8":"Asia/Shanghai","215/96/8":"Asia/Shanghai","208/97/8":"Asia/Shanghai","209/97/8":"Asia/Shanghai","210/97/8":"Asia/Shanghai","211/97/8":"Asia/Shanghai","212/97/8":"Asia/Shanghai","213/97/8":"Asia/Shanghai","207/98/8":"Asia/Shanghai","208/98/8":"Asia/Shanghai","209/98/8":"Asia/Shanghai","210/98/8":"Asia/Shanghai","211/98/8":"Asia/Shanghai","212/98/8":"Asia/Shanghai","213/98/8":"Asia/Shanghai","207/99/8":"Asia/Shanghai","208/99/8":"Asia/Shanghai","209/99/8":"Asia/Shanghai","210/99/8":"Asia/Shanghai","211/99/8":"Asia/Shanghai","212/99/8":"Asia/Shanghai","213/99/8":"Asia/Shanghai","207/100/8":"Asia/Shanghai","208/100/8":"Asia/Shanghai","209/100/8":"Asia/Shanghai","210/100/8":"Asia/Shanghai","211/100/8":"Asia/Shanghai","212/100/8":"Asia/Shanghai","207/101/8":"Asia/Shanghai","208/101/8":"Asia/Shanghai","209/101/8":"Asia/Shanghai","210/101/8":"Asia/Shanghai","211/101/8":"Asia/Shanghai","212/101/8":"Asia/Shanghai","207/102/8":"Asia/Shanghai","208/102/8":"Asia/Shanghai","209/102/8":"Asia/Shanghai","210/102/8":"Asia/Shanghai","211/102/8":"Asia/Shanghai","212/102/8":"Asia/Shanghai","213/102/8":"Asia/Shanghai","207/103/8":"Asia/Shanghai","208/103/8":"Asia/Shanghai","209/103/8":"Asia/Shanghai","210/103/8":"Asia/Shanghai","211/103/8":"Asia/Shanghai","212/103/8":"Asia/Shanghai","213/103/8":"Asia/Shanghai","207/104/8":"Asia/Shanghai","208/104/8":"Asia/Shanghai","209/104/8":"Asia/Shanghai","210/104/8":"Asia/Shanghai","211/104/8":"Asia/Shanghai","212/104/8":"Asia/Shanghai","213/104/8":"Asia/Shanghai","206/105/8":"Asia/Shanghai","207/105/8":"Asia/Shanghai","208/105/8":"Asia/Shanghai","209/105/8":"Asia/Shanghai","210/105/8":"Asia/Shanghai","211/105/8":"Asia/Shanghai","212/105/8":"Asia/Shanghai","213/105/8":"Asia/Shanghai","214/105/8":"Asia/Shanghai","206/106/8":"Asia/Shanghai","207/106/8":"Asia/Shanghai","208/106/8":"Asia/Shanghai","209/106/8":"Asia/Shanghai","210/106/8":"Asia/Shanghai","211/106/8":"Asia/Shanghai","212/106/8":"Asia/Shanghai","213/106/8":"Asia/Shanghai","206/107/8":"Asia/Shanghai","207/107/8":"Asia/Shanghai","208/107/8":"Asia/Shanghai","209/107/8":"Asia/Shanghai","210/107/8":"Asia/Shanghai","211/107/8":"Asia/Shanghai","212/107/8":"Asia/Shanghai","213/107/8":"Asia/Shanghai","208/108/8":"Asia/Shanghai","209/108/8":"Asia/Shanghai","210/108/8":"Asia/Shanghai","211/108/8":"Asia/Shanghai","212/108/8":"Asia/Shanghai","208/109/8":"Asia/Shanghai","209/109/8":"Asia/Shanghai","210/109/8":"Asia/Shanghai","211/109/8":"Asia/Shanghai","208/110/8":"Asia/Shanghai","209/110/8":"Asia/Shanghai","210/110/8":"Asia/Shanghai","214/97/8":"Asia/Shanghai","215/97/8":"Asia/Shanghai","214/98/8":"Asia/Shanghai","215/98/8":"Asia/Shanghai","214/99/8":"Asia/Shanghai","215/99/8":"Asia/Shanghai","213/100/8":"Asia/Shanghai","214/100/8":"Asia/Shanghai","215/100/8":"Asia/Shanghai","213/101/8":"Asia/Shanghai","214/101/8":"Asia/Shanghai","214/102/8":"Asia/Shanghai","214/103/8":"Asia/Shanghai","214/104/8":"Asia/Shanghai","215/104/8":"Asia/Shanghai","215/105/8":"Asia/Shanghai","214/106/8":"Asia/Shanghai","215/106/8":"Asia/Shanghai","214/107/8":"Asia/Shanghai","213/108/8":"Asia/Shanghai","214/108/8":"Asia/Shanghai","212/109/8":"Asia/Shanghai","213/109/8":"Asia/Shanghai","211/110/8":"Asia/Shanghai","212/110/8":"Asia/Shanghai","210/111/8":"Asia/Shanghai","211/111/8":"Asia/Shanghai","209/112/8":"Asia/Shanghai","231/52/8":"Asia/Srednekolymsk","232/52/8":"Asia/Srednekolymsk","233/52/8":"Asia/Srednekolymsk","230/53/8":"Asia/Srednekolymsk","231/53/8":"Asia/Srednekolymsk","232/53/8":"Asia/Srednekolymsk","233/53/8":"Asia/Srednekolymsk","234/53/8":"Asia/Srednekolymsk","230/54/8":"Asia/Srednekolymsk","231/54/8":"Asia/Srednekolymsk","232/54/8":"Asia/Srednekolymsk","233/54/8":"Asia/Srednekolymsk","234/54/8":"Asia/Srednekolymsk","235/54/8":"Asia/Srednekolymsk","230/55/8":"Asia/Srednekolymsk","231/55/8":"Asia/Srednekolymsk","232/55/8":"Asia/Srednekolymsk","233/55/8":"Asia/Srednekolymsk","234/55/8":"Asia/Srednekolymsk","235/55/8":"Asia/Srednekolymsk","238/55/8":"Asia/Srednekolymsk","239/55/8":"Asia/Srednekolymsk","240/55/8":"Asia/Srednekolymsk","229/56/8":"Asia/Srednekolymsk","230/56/8":"Asia/Srednekolymsk","231/56/8":"Asia/Srednekolymsk","232/56/8":"Asia/Srednekolymsk","233/56/8":"Asia/Srednekolymsk","234/56/8":"Asia/Srednekolymsk","235/56/8":"Asia/Srednekolymsk","236/56/8":"Asia/Srednekolymsk","237/56/8":"Asia/Srednekolymsk","238/56/8":"Asia/Srednekolymsk","239/56/8":"Asia/Srednekolymsk","240/56/8":"Asia/Srednekolymsk","241/56/8":"Asia/Srednekolymsk","230/57/8":"Asia/Srednekolymsk","231/57/8":"Asia/Srednekolymsk","232/57/8":"Asia/Srednekolymsk","233/57/8":"Asia/Srednekolymsk","234/57/8":"Asia/Srednekolymsk","235/57/8":"Asia/Srednekolymsk","236/57/8":"Asia/Srednekolymsk","237/57/8":"Asia/Srednekolymsk","238/57/8":"Asia/Srednekolymsk","239/57/8":"Asia/Srednekolymsk","240/57/8":"Asia/Srednekolymsk","241/57/8":"Asia/Srednekolymsk","230/58/8":"Asia/Srednekolymsk","231/58/8":"Asia/Srednekolymsk","232/58/8":"Asia/Srednekolymsk","233/58/8":"Asia/Srednekolymsk","234/58/8":"Asia/Srednekolymsk","235/58/8":"Asia/Srednekolymsk","236/58/8":"Asia/Srednekolymsk","237/58/8":"Asia/Srednekolymsk","238/58/8":"Asia/Srednekolymsk","239/58/8":"Asia/Srednekolymsk","240/58/8":"Asia/Srednekolymsk","241/58/8":"Asia/Srednekolymsk","242/58/8":"Asia/Srednekolymsk","229/59/8":"Asia/Srednekolymsk","230/59/8":"Asia/Srednekolymsk","231/59/8":"Asia/Srednekolymsk","232/59/8":"Asia/Srednekolymsk","233/59/8":"Asia/Srednekolymsk","234/59/8":"Asia/Srednekolymsk","235/59/8":"Asia/Srednekolymsk","236/59/8":"Asia/Srednekolymsk","237/59/8":"Asia/Srednekolymsk","238/59/8":"Asia/Srednekolymsk","239/59/8":"Asia/Srednekolymsk","240/59/8":"Asia/Srednekolymsk","241/59/8":"Asia/Srednekolymsk","242/59/8":"Asia/Srednekolymsk","229/60/8":"Asia/Srednekolymsk","230/60/8":"Asia/Srednekolymsk","231/60/8":"Asia/Srednekolymsk","232/60/8":"Asia/Srednekolymsk","233/60/8":"Asia/Srednekolymsk","234/60/8":"Asia/Srednekolymsk","235/60/8":"Asia/Srednekolymsk","236/60/8":"Asia/Srednekolymsk","237/60/8":"Asia/Srednekolymsk","238/60/8":"Asia/Srednekolymsk","239/60/8":"Asia/Srednekolymsk","240/60/8":"Asia/Srednekolymsk","229/61/8":"Asia/Srednekolymsk","230/61/8":"Asia/Srednekolymsk","231/61/8":"Asia/Srednekolymsk","232/61/8":"Asia/Srednekolymsk","233/61/8":"Asia/Srednekolymsk","234/61/8":"Asia/Srednekolymsk","235/61/8":"Asia/Srednekolymsk","236/61/8":"Asia/Srednekolymsk","237/61/8":"Asia/Srednekolymsk","238/61/8":"Asia/Srednekolymsk","239/61/8":"Asia/Srednekolymsk","228/62/8":"Asia/Srednekolymsk","229/62/8":"Asia/Srednekolymsk","230/62/8":"Asia/Srednekolymsk","231/62/8":"Asia/Srednekolymsk","232/62/8":"Asia/Srednekolymsk","233/62/8":"Asia/Srednekolymsk","234/62/8":"Asia/Srednekolymsk","235/62/8":"Asia/Srednekolymsk","236/62/8":"Asia/Srednekolymsk","237/62/8":"Asia/Srednekolymsk","238/62/8":"Asia/Srednekolymsk","239/62/8":"Asia/Srednekolymsk","228/63/8":"Asia/Srednekolymsk","229/63/8":"Asia/Srednekolymsk","230/63/8":"Asia/Srednekolymsk","231/63/8":"Asia/Srednekolymsk","232/63/8":"Asia/Srednekolymsk","233/63/8":"Asia/Srednekolymsk","234/63/8":"Asia/Srednekolymsk","235/63/8":"Asia/Srednekolymsk","236/63/8":"Asia/Srednekolymsk","237/63/8":"Asia/Srednekolymsk","238/63/8":"Asia/Srednekolymsk","239/63/8":"Asia/Srednekolymsk","228/64/8":"Asia/Srednekolymsk","229/64/8":"Asia/Srednekolymsk","230/64/8":"Asia/Srednekolymsk","231/64/8":"Asia/Srednekolymsk","232/64/8":"Asia/Srednekolymsk","233/64/8":"Asia/Srednekolymsk","234/64/8":"Asia/Srednekolymsk","235/64/8":"Asia/Srednekolymsk","236/64/8":"Asia/Srednekolymsk","230/65/8":"Asia/Srednekolymsk","231/65/8":"Asia/Srednekolymsk","232/65/8":"Asia/Srednekolymsk","233/65/8":"Asia/Srednekolymsk","234/65/8":"Asia/Srednekolymsk","235/65/8":"Asia/Srednekolymsk","236/65/8":"Asia/Srednekolymsk","231/66/8":"Asia/Srednekolymsk","232/66/8":"Asia/Srednekolymsk","233/66/8":"Asia/Srednekolymsk","234/66/8":"Asia/Srednekolymsk","235/66/8":"Asia/Srednekolymsk","230/51/8":"Asia/Vladivostok","231/51/8":"Asia/Srednekolymsk","232/51/8":"Asia/Srednekolymsk","233/51/8":"Asia/Srednekolymsk","234/51/8":"Asia/Srednekolymsk","229/52/8":"Asia/Vladivostok","230/52/8":"Asia/Srednekolymsk","234/52/8":"Asia/Srednekolymsk","235/52/8":"Asia/Srednekolymsk","229/53/8":"Asia/Vladivostok","235/53/8":"Asia/Srednekolymsk","236/53/8":"Asia/Srednekolymsk","229/54/8":"Asia/Srednekolymsk","236/54/8":"Asia/Srednekolymsk","237/54/8":"Asia/Srednekolymsk","238/54/8":"Asia/Srednekolymsk","239/54/8":"Asia/Srednekolymsk","240/54/8":"Asia/Srednekolymsk","241/54/8":"Asia/Srednekolymsk","242/54/8":"Asia/Srednekolymsk","243/54/8":"Asia/Srednekolymsk","228/55/8":"Asia/Vladivostok","229/55/8":"Asia/Srednekolymsk","236/55/8":"Asia/Srednekolymsk","237/55/8":"Asia/Srednekolymsk","241/55/8":"Asia/Srednekolymsk","242/55/8":"Asia/Srednekolymsk","243/55/8":"Asia/Srednekolymsk","228/56/8":"Asia/Srednekolymsk","242/56/8":"Asia/Srednekolymsk","243/56/8":"Asia/Srednekolymsk","228/57/8":"Asia/Vladivostok","229/57/8":"Asia/Srednekolymsk","242/57/8":"Asia/Srednekolymsk","228/58/8":"Asia/Vladivostok","229/58/8":"Asia/Srednekolymsk","228/59/8":"Asia/Vladivostok","228/60/8":"Asia/Srednekolymsk","227/61/8":"Asia/Vladivostok","228/61/8":"Asia/Srednekolymsk","226/62/8":"Asia/Vladivostok","227/62/8":"Asia/Srednekolymsk","227/63/8":"Asia/Srednekolymsk","228/65/8":"Asia/Srednekolymsk","229/65/8":"Asia/Srednekolymsk","229/66/8":"Asia/Ust-Nera","230/66/8":"Asia/Srednekolymsk","230/67/8":"Asia/Ust-Nera","231/67/8":"Asia/Srednekolymsk","238/85/8":"Asia/Srednekolymsk","237/86/8":"Asia/Srednekolymsk","238/86/8":"Asia/Srednekolymsk","236/87/8":"Asia/Srednekolymsk","237/87/8":"Asia/Srednekolymsk","238/87/8":"Asia/Srednekolymsk","236/88/8":"Asia/Srednekolymsk","237/88/8":"Asia/Srednekolymsk","238/88/8":"Asia/Srednekolymsk","236/89/8":"Asia/Srednekolymsk","237/89/8":"Asia/Srednekolymsk","214/109/8":"Asia/Taipei","213/110/8":"Asia/Taipei","214/110/8":"Asia/Taipei","212/111/8":"Asia/Taipei","213/111/8":"Asia/Taipei","214/111/8":"Asia/Taipei","210/112/8":"Asia/Taipei","211/112/8":"Asia/Taipei","213/112/8":"Asia/Taipei","210/113/8":"Asia/Taipei","211/113/8":"Asia/Taipei","209/120/8":"Asia/Taipei","156/93/8":"Europe/Moscow","157/93/8":"Europe/Moscow","158/93/8":"Europe/Moscow","156/94/8":"Asia/Tbilisi","157/94/8":"Asia/Tbilisi","158/94/8":"Asia/Tbilisi","159/94/8":"Asia/Tbilisi","160/94/8":"Europe/Moscow","157/95/8":"Europe/Istanbul","158/95/8":"Asia/Tbilisi","160/98/8":"Asia/Tehran","161/98/8":"Asia/Tehran","161/99/8":"Asia/Tehran","167/99/8":"Asia/Tehran","168/99/8":"Asia/Tehran","161/100/8":"Asia/Tehran","162/100/8":"Asia/Tehran","163/100/8":"Asia/Tehran","164/100/8":"Asia/Tehran","165/100/8":"Asia/Tehran","166/100/8":"Asia/Tehran","167/100/8":"Asia/Tehran","168/100/8":"Asia/Tehran","169/100/8":"Asia/Tehran","170/100/8":"Asia/Tehran","161/101/8":"Asia/Tehran","162/101/8":"Asia/Tehran","163/101/8":"Asia/Tehran","164/101/8":"Asia/Tehran","165/101/8":"Asia/Tehran","166/101/8":"Asia/Tehran","167/101/8":"Asia/Tehran","168/101/8":"Asia/Tehran","169/101/8":"Asia/Tehran","170/101/8":"Asia/Tehran","161/102/8":"Asia/Tehran","162/102/8":"Asia/Tehran","163/102/8":"Asia/Tehran","164/102/8":"Asia/Tehran","165/102/8":"Asia/Tehran","166/102/8":"Asia/Tehran","167/102/8":"Asia/Tehran","168/102/8":"Asia/Tehran","169/102/8":"Asia/Tehran","170/102/8":"Asia/Tehran","162/103/8":"Asia/Tehran","163/103/8":"Asia/Tehran","164/103/8":"Asia/Tehran","165/103/8":"Asia/Tehran","166/103/8":"Asia/Tehran","167/103/8":"Asia/Tehran","168/103/8":"Asia/Tehran","169/103/8":"Asia/Tehran","170/103/8":"Asia/Tehran","163/104/8":"Asia/Tehran","164/104/8":"Asia/Tehran","165/104/8":"Asia/Tehran","166/104/8":"Asia/Tehran","167/104/8":"Asia/Tehran","168/104/8":"Asia/Tehran","169/104/8":"Asia/Tehran","170/104/8":"Asia/Tehran","164/105/8":"Asia/Tehran","165/105/8":"Asia/Tehran","166/105/8":"Asia/Tehran","167/105/8":"Asia/Tehran","168/105/8":"Asia/Tehran","169/105/8":"Asia/Tehran","170/105/8":"Asia/Tehran","165/106/8":"Asia/Tehran","166/106/8":"Asia/Tehran","167/106/8":"Asia/Tehran","168/106/8":"Asia/Tehran","169/106/8":"Asia/Tehran","170/106/8":"Asia/Tehran","166/107/8":"Asia/Tehran","167/107/8":"Asia/Tehran","168/107/8":"Asia/Tehran","169/107/8":"Asia/Tehran","170/107/8":"Asia/Tehran","171/107/8":"Asia/Tehran","169/108/8":"Asia/Tehran","170/108/8":"Asia/Tehran","159/98/8":"Europe/Istanbul","162/99/8":"Asia/Tehran","163/99/8":"Asia/Tehran","164/99/8":"Asia/Tehran","165/99/8":"Asia/Tehran","163/105/8":"Asia/Tehran","163/106/8":"Asia/Tehran","164/106/8":"Asia/Tehran","164/107/8":"Asia/Tehran","165/107/8":"Asia/Tehran","166/108/8":"Asia/Tehran","169/109/8":"Asia/Tehran","170/109/8":"Asia/Tehran","192/107/8":"Asia/Thimphu","229/93/8":"Asia/Tokyo","230/93/8":"Asia/Tokyo","228/97/8":"Asia/Tokyo","227/98/8":"Asia/Tokyo","226/99/8":"Asia/Tokyo","227/99/8":"Asia/Tokyo","225/100/8":"Asia/Tokyo","226/100/8":"Asia/Tokyo","227/100/8":"Asia/Tokyo","223/101/8":"Asia/Tokyo","224/101/8":"Asia/Tokyo","221/102/8":"Asia/Tokyo","222/102/8":"Asia/Tokyo","228/92/8":"Asia/Tokyo","229/92/8":"Asia/Tokyo","230/92/8":"Asia/Tokyo","231/92/8":"Asia/Ust-Nera","227/93/8":"Asia/Tokyo","228/93/8":"Asia/Tokyo","231/93/8":"Asia/Tokyo","226/94/8":"Asia/Tokyo","227/94/8":"Asia/Tokyo","228/94/8":"Asia/Tokyo","229/94/8":"Asia/Tokyo","230/94/8":"Asia/Tokyo","231/94/8":"Asia/Tokyo","226/95/8":"Asia/Tokyo","227/95/8":"Asia/Tokyo","228/95/8":"Asia/Tokyo","229/95/8":"Asia/Tokyo","230/95/8":"Asia/Tokyo","227/96/8":"Asia/Tokyo","228/96/8":"Asia/Tokyo","229/96/8":"Asia/Tokyo","226/97/8":"Asia/Tokyo","227/97/8":"Asia/Tokyo","229/97/8":"Asia/Tokyo","225/98/8":"Asia/Tokyo","226/98/8":"Asia/Tokyo","228/98/8":"Asia/Tokyo","229/98/8":"Asia/Tokyo","224/99/8":"Asia/Tokyo","225/99/8":"Asia/Tokyo","228/99/8":"Asia/Tokyo","222/100/8":"Asia/Tokyo","223/100/8":"Asia/Tokyo","224/100/8":"Asia/Tokyo","228/100/8":"Asia/Tokyo","221/101/8":"Asia/Tokyo","222/101/8":"Asia/Tokyo","225/101/8":"Asia/Tokyo","226/101/8":"Asia/Tokyo","227/101/8":"Asia/Tokyo","228/101/8":"Asia/Tokyo","220/102/8":"Asia/Tokyo","223/102/8":"Asia/Tokyo","224/102/8":"Asia/Tokyo","225/102/8":"Asia/Tokyo","226/102/8":"Asia/Tokyo","227/102/8":"Asia/Tokyo","219/103/8":"Asia/Tokyo","220/103/8":"Asia/Tokyo","221/103/8":"Asia/Tokyo","222/103/8":"Asia/Tokyo","223/103/8":"Asia/Tokyo","227/103/8":"Asia/Tokyo","219/104/8":"Asia/Tokyo","220/104/8":"Asia/Tokyo","221/104/8":"Asia/Tokyo","227/104/8":"Asia/Tokyo","219/105/8":"Asia/Tokyo","220/105/8":"Asia/Tokyo","221/105/8":"Asia/Tokyo","227/105/8":"Asia/Tokyo","219/106/8":"Asia/Tokyo","220/106/8":"Asia/Tokyo","218/107/8":"Asia/Tokyo","219/107/8":"Asia/Tokyo","220/107/8":"Asia/Tokyo","228/107/8":"Asia/Tokyo","229/107/8":"Asia/Tokyo","217/108/8":"Asia/Tokyo","218/108/8":"Asia/Tokyo","219/108/8":"Asia/Tokyo","221/108/8":"Asia/Tokyo","228/108/8":"Asia/Tokyo","229/108/8":"Asia/Tokyo","215/109/8":"Asia/Tokyo","216/109/8":"Asia/Tokyo","217/109/8":"Asia/Tokyo","221/109/8":"Asia/Tokyo","228/109/8":"Asia/Tokyo","215/110/8":"Asia/Tokyo","216/110/8":"Asia/Tokyo","217/110/8":"Asia/Tokyo","221/110/8":"Asia/Tokyo","228/110/8":"Asia/Tokyo","237/110/8":"Asia/Tokyo","224/113/8":"Asia/Tokyo","183/74/8":"Asia/Tomsk","184/74/8":"Asia/Tomsk","185/74/8":"Asia/Tomsk","186/74/8":"Asia/Tomsk","187/74/8":"Asia/Tomsk","183/75/8":"Asia/Tomsk","184/75/8":"Asia/Tomsk","185/75/8":"Asia/Tomsk","186/75/8":"Asia/Tomsk","187/75/8":"Asia/Tomsk","188/75/8":"Asia/Tomsk","189/75/8":"Asia/Tomsk","182/76/8":"Asia/Tomsk","183/76/8":"Asia/Tomsk","184/76/8":"Asia/Tomsk","185/76/8":"Asia/Tomsk","186/76/8":"Asia/Tomsk","187/76/8":"Asia/Tomsk","188/76/8":"Asia/Tomsk","189/76/8":"Asia/Tomsk","183/77/8":"Asia/Tomsk","184/77/8":"Asia/Tomsk","185/77/8":"Asia/Tomsk","186/77/8":"Asia/Tomsk","187/77/8":"Asia/Tomsk","188/77/8":"Asia/Tomsk","189/77/8":"Asia/Tomsk","185/78/8":"Asia/Tomsk","186/78/8":"Asia/Tomsk","187/78/8":"Asia/Tomsk","188/78/8":"Asia/Tomsk","186/72/8":"Asia/Yekaterinburg","187/72/8":"Asia/Yekaterinburg","182/73/8":"Asia/Yekaterinburg","183/73/8":"Asia/Tomsk","184/73/8":"Asia/Tomsk","185/73/8":"Asia/Tomsk","186/73/8":"Asia/Tomsk","182/74/8":"Asia/Yekaterinburg","181/75/8":"Asia/Yekaterinburg","182/75/8":"Asia/Tomsk","198/85/8":"Asia/Ulaanbaatar","198/86/8":"Asia/Ulaanbaatar","199/86/8":"Asia/Ulaanbaatar","199/87/8":"Asia/Ulaanbaatar","200/87/8":"Asia/Ulaanbaatar","201/87/8":"Asia/Ulaanbaatar","202/87/8":"Asia/Ulaanbaatar","203/87/8":"Asia/Ulaanbaatar","199/88/8":"Asia/Ulaanbaatar","200/88/8":"Asia/Ulaanbaatar","201/88/8":"Asia/Ulaanbaatar","202/88/8":"Asia/Ulaanbaatar","203/88/8":"Asia/Ulaanbaatar","204/88/8":"Asia/Ulaanbaatar","205/88/8":"Asia/Ulaanbaatar","206/88/8":"Asia/Ulaanbaatar","198/89/8":"Asia/Ulaanbaatar","199/89/8":"Asia/Ulaanbaatar","200/89/8":"Asia/Ulaanbaatar","201/89/8":"Asia/Ulaanbaatar","202/89/8":"Asia/Ulaanbaatar","203/89/8":"Asia/Ulaanbaatar","204/89/8":"Asia/Ulaanbaatar","205/89/8":"Asia/Ulaanbaatar","206/89/8":"Asia/Ulaanbaatar","198/90/8":"Asia/Ulaanbaatar","199/90/8":"Asia/Ulaanbaatar","200/90/8":"Asia/Ulaanbaatar","201/90/8":"Asia/Ulaanbaatar","202/90/8":"Asia/Ulaanbaatar","203/90/8":"Asia/Ulaanbaatar","204/90/8":"Asia/Ulaanbaatar","205/90/8":"Asia/Ulaanbaatar","206/90/8":"Asia/Ulaanbaatar","199/91/8":"Asia/Ulaanbaatar","200/91/8":"Asia/Ulaanbaatar","201/91/8":"Asia/Ulaanbaatar","202/91/8":"Asia/Ulaanbaatar","203/91/8":"Asia/Ulaanbaatar","204/91/8":"Asia/Ulaanbaatar","205/91/8":"Asia/Ulaanbaatar","206/91/8":"Asia/Ulaanbaatar","198/92/8":"Asia/Ulaanbaatar","199/92/8":"Asia/Ulaanbaatar","200/92/8":"Asia/Ulaanbaatar","201/92/8":"Asia/Ulaanbaatar","202/92/8":"Asia/Ulaanbaatar","203/92/8":"Asia/Ulaanbaatar","204/92/8":"Asia/Ulaanbaatar","205/92/8":"Asia/Ulaanbaatar","206/92/8":"Asia/Ulaanbaatar","198/93/8":"Asia/Ulaanbaatar","199/93/8":"Asia/Ulaanbaatar","200/93/8":"Asia/Ulaanbaatar","201/93/8":"Asia/Ulaanbaatar","202/93/8":"Asia/Ulaanbaatar","203/93/8":"Asia/Ulaanbaatar","204/93/8":"Asia/Ulaanbaatar","205/93/8":"Asia/Ulaanbaatar","202/94/8":"Asia/Ulaanbaatar","189/89/8":"Asia/Urumqi","190/89/8":"Asia/Urumqi","189/90/8":"Asia/Urumqi","190/90/8":"Asia/Urumqi","191/90/8":"Asia/Urumqi","187/91/8":"Asia/Urumqi","188/91/8":"Asia/Urumqi","189/91/8":"Asia/Urumqi","190/91/8":"Asia/Urumqi","191/91/8":"Asia/Urumqi","188/92/8":"Asia/Urumqi","189/92/8":"Asia/Urumqi","190/92/8":"Asia/Urumqi","191/92/8":"Asia/Urumqi","192/92/8":"Asia/Urumqi","189/93/8":"Asia/Urumqi","190/93/8":"Asia/Urumqi","191/93/8":"Asia/Urumqi","192/93/8":"Asia/Urumqi","193/93/8":"Asia/Urumqi","194/93/8":"Asia/Urumqi","188/94/8":"Asia/Urumqi","189/94/8":"Asia/Urumqi","190/94/8":"Asia/Urumqi","191/94/8":"Asia/Urumqi","192/94/8":"Asia/Urumqi","193/94/8":"Asia/Urumqi","194/94/8":"Asia/Urumqi","195/94/8":"Asia/Urumqi","188/95/8":"Asia/Urumqi","189/95/8":"Asia/Urumqi","190/95/8":"Asia/Urumqi","191/95/8":"Asia/Urumqi","192/95/8":"Asia/Urumqi","193/95/8":"Asia/Urumqi","194/95/8":"Asia/Urumqi","195/95/8":"Asia/Urumqi","196/95/8":"Asia/Urumqi","187/96/8":"Asia/Urumqi","188/96/8":"Asia/Urumqi","189/96/8":"Asia/Urumqi","190/96/8":"Asia/Urumqi","191/96/8":"Asia/Urumqi","192/96/8":"Asia/Urumqi","193/96/8":"Asia/Urumqi","194/96/8":"Asia/Urumqi","195/96/8":"Asia/Urumqi","196/96/8":"Asia/Urumqi","187/97/8":"Asia/Urumqi","188/97/8":"Asia/Urumqi","189/97/8":"Asia/Urumqi","190/97/8":"Asia/Urumqi","191/97/8":"Asia/Urumqi","192/97/8":"Asia/Urumqi","193/97/8":"Asia/Urumqi","194/97/8":"Asia/Urumqi","195/97/8":"Asia/Urumqi","196/97/8":"Asia/Urumqi","187/98/8":"Asia/Urumqi","188/98/8":"Asia/Urumqi","189/98/8":"Asia/Urumqi","190/98/8":"Asia/Urumqi","191/98/8":"Asia/Urumqi","192/98/8":"Asia/Urumqi","193/98/8":"Asia/Urumqi","194/98/8":"Asia/Urumqi","195/98/8":"Asia/Urumqi","196/98/8":"Asia/Urumqi","187/99/8":"Asia/Urumqi","188/99/8":"Asia/Urumqi","189/99/8":"Asia/Urumqi","190/99/8":"Asia/Urumqi","191/99/8":"Asia/Urumqi","192/99/8":"Asia/Urumqi","193/99/8":"Asia/Urumqi","194/99/8":"Asia/Urumqi","195/99/8":"Asia/Urumqi","196/99/8":"Asia/Urumqi","197/99/8":"Asia/Urumqi","187/100/8":"Asia/Urumqi","188/100/8":"Asia/Urumqi","189/100/8":"Asia/Urumqi","190/100/8":"Asia/Urumqi","191/100/8":"Asia/Urumqi","192/100/8":"Asia/Urumqi","193/100/8":"Asia/Urumqi","194/100/8":"Asia/Urumqi","195/100/8":"Asia/Urumqi","196/100/8":"Asia/Urumqi","197/100/8":"Asia/Urumqi","187/101/8":"Asia/Urumqi","188/101/8":"Asia/Urumqi","189/101/8":"Asia/Urumqi","190/101/8":"Asia/Urumqi","191/101/8":"Asia/Urumqi","192/101/8":"Asia/Urumqi","193/101/8":"Asia/Urumqi","194/101/8":"Asia/Urumqi","195/101/8":"Asia/Urumqi","196/101/8":"Asia/Urumqi","197/101/8":"Asia/Urumqi","187/102/8":"Asia/Urumqi","188/102/8":"Asia/Urumqi","189/102/8":"Asia/Urumqi","190/102/8":"Asia/Urumqi","191/102/8":"Asia/Urumqi","192/102/8":"Asia/Urumqi","193/102/8":"Asia/Urumqi","194/102/8":"Asia/Urumqi","195/102/8":"Asia/Urumqi","196/102/8":"Asia/Urumqi","188/103/8":"Asia/Urumqi","189/103/8":"Asia/Urumqi","190/103/8":"Asia/Urumqi","191/103/8":"Asia/Urumqi","192/103/8":"Asia/Urumqi","193/103/8":"Asia/Urumqi","194/103/8":"Asia/Urumqi","195/103/8":"Asia/Urumqi","196/103/8":"Asia/Urumqi","188/104/8":"Asia/Urumqi","189/104/8":"Asia/Urumqi","190/104/8":"Asia/Urumqi","191/104/8":"Asia/Urumqi","192/104/8":"Asia/Urumqi","193/104/8":"Asia/Urumqi","194/104/8":"Asia/Urumqi","195/104/8":"Asia/Urumqi","196/104/8":"Asia/Urumqi","188/105/8":"Asia/Urumqi","189/105/8":"Asia/Urumqi","190/105/8":"Asia/Urumqi","191/105/8":"Asia/Urumqi","192/105/8":"Asia/Urumqi","193/105/8":"Asia/Urumqi","194/105/8":"Asia/Urumqi","195/105/8":"Asia/Urumqi","196/105/8":"Asia/Urumqi","197/105/8":"Asia/Urumqi","189/106/8":"Asia/Urumqi","190/106/8":"Asia/Urumqi","191/106/8":"Asia/Urumqi","192/106/8":"Asia/Urumqi","193/106/8":"Asia/Urumqi","228/66/8":"Asia/Ust-Nera","229/67/8":"Asia/Ust-Nera","229/68/8":"Asia/Ust-Nera","230/68/8":"Asia/Ust-Nera","229/69/8":"Asia/Ust-Nera","230/69/8":"Asia/Ust-Nera","229/70/8":"Asia/Ust-Nera","230/70/8":"Asia/Ust-Nera","228/70/8":"Asia/Ust-Nera","228/71/8":"Asia/Vladivostok","229/71/8":"Asia/Vladivostok","235/89/8":"Asia/Ust-Nera","234/90/8":"Asia/Ust-Nera","235/90/8":"Asia/Ust-Nera","236/90/8":"Asia/Ust-Nera","232/91/8":"Asia/Ust-Nera","233/91/8":"Asia/Ust-Nera","234/91/8":"Asia/Ust-Nera","235/91/8":"Asia/Ust-Nera","232/92/8":"Asia/Ust-Nera","233/92/8":"Asia/Ust-Nera","232/93/8":"Asia/Ust-Nera","226/42/8":"Asia/Vladivostok","227/42/8":"Asia/Vladivostok","228/42/8":"Asia/Vladivostok","224/43/8":"Asia/Vladivostok","225/43/8":"Asia/Vladivostok","226/43/8":"Asia/Vladivostok","227/43/8":"Asia/Vladivostok","228/43/8":"Asia/Vladivostok","229/43/8":"Asia/Vladivostok","230/43/8":"Asia/Vladivostok","225/44/8":"Asia/Vladivostok","226/44/8":"Asia/Vladivostok","227/44/8":"Asia/Vladivostok","228/44/8":"Asia/Vladivostok","229/44/8":"Asia/Vladivostok","230/44/8":"Asia/Vladivostok","231/44/8":"Asia/Vladivostok","232/44/8":"Asia/Vladivostok","233/44/8":"Asia/Vladivostok","226/45/8":"Asia/Vladivostok","227/45/8":"Asia/Vladivostok","228/45/8":"Asia/Vladivostok","229/45/8":"Asia/Vladivostok","233/45/8":"Asia/Vladivostok","234/45/8":"Asia/Vladivostok","227/46/8":"Asia/Vladivostok","228/46/8":"Asia/Vladivostok","228/48/8":"Asia/Vladivostok","228/49/8":"Asia/Vladivostok","229/49/8":"Asia/Vladivostok","228/50/8":"Asia/Vladivostok","229/50/8":"Asia/Vladivostok","228/51/8":"Asia/Vladivostok","229/51/8":"Asia/Vladivostok","227/52/8":"Asia/Vladivostok","228/52/8":"Asia/Vladivostok","222/53/8":"Asia/Vladivostok","227/53/8":"Asia/Vladivostok","228/53/8":"Asia/Vladivostok","222/54/8":"Asia/Vladivostok","223/54/8":"Asia/Vladivostok","224/54/8":"Asia/Vladivostok","225/54/8":"Asia/Vladivostok","226/54/8":"Asia/Vladivostok","227/54/8":"Asia/Vladivostok","228/54/8":"Asia/Vladivostok","222/55/8":"Asia/Vladivostok","223/55/8":"Asia/Vladivostok","224/55/8":"Asia/Vladivostok","225/55/8":"Asia/Vladivostok","226/55/8":"Asia/Vladivostok","227/55/8":"Asia/Vladivostok","223/56/8":"Asia/Vladivostok","224/56/8":"Asia/Vladivostok","225/56/8":"Asia/Vladivostok","226/56/8":"Asia/Vladivostok","227/56/8":"Asia/Vladivostok","223/57/8":"Asia/Vladivostok","224/57/8":"Asia/Vladivostok","225/57/8":"Asia/Vladivostok","226/57/8":"Asia/Vladivostok","227/57/8":"Asia/Vladivostok","223/58/8":"Asia/Vladivostok","224/58/8":"Asia/Vladivostok","225/58/8":"Asia/Vladivostok","226/58/8":"Asia/Vladivostok","227/58/8":"Asia/Vladivostok","223/59/8":"Asia/Vladivostok","224/59/8":"Asia/Vladivostok","225/59/8":"Asia/Vladivostok","226/59/8":"Asia/Vladivostok","227/59/8":"Asia/Vladivostok","223/60/8":"Asia/Vladivostok","224/60/8":"Asia/Vladivostok","225/60/8":"Asia/Vladivostok","226/60/8":"Asia/Vladivostok","227/60/8":"Asia/Vladivostok","223/61/8":"Asia/Vladivostok","224/61/8":"Asia/Vladivostok","225/61/8":"Asia/Vladivostok","226/61/8":"Asia/Vladivostok","222/62/8":"Asia/Vladivostok","223/62/8":"Asia/Vladivostok","224/62/8":"Asia/Vladivostok","225/62/8":"Asia/Vladivostok","221/63/8":"Asia/Vladivostok","222/63/8":"Asia/Vladivostok","223/63/8":"Asia/Vladivostok","224/63/8":"Asia/Vladivostok","225/63/8":"Asia/Vladivostok","226/63/8":"Asia/Vladivostok","222/64/8":"Asia/Vladivostok","223/64/8":"Asia/Vladivostok","222/65/8":"Asia/Vladivostok","228/72/8":"Asia/Vladivostok","229/72/8":"Asia/Vladivostok","230/72/8":"Asia/Vladivostok","231/72/8":"Asia/Vladivostok","227/73/8":"Asia/Vladivostok","228/73/8":"Asia/Vladivostok","229/73/8":"Asia/Vladivostok","230/73/8":"Asia/Vladivostok","227/74/8":"Asia/Vladivostok","228/74/8":"Asia/Vladivostok","229/74/8":"Asia/Vladivostok","230/74/8":"Asia/Vladivostok","226/75/8":"Asia/Vladivostok","227/75/8":"Asia/Vladivostok","228/75/8":"Asia/Vladivostok","223/76/8":"Asia/Vladivostok","224/76/8":"Asia/Vladivostok","225/76/8":"Asia/Vladivostok","226/76/8":"Asia/Vladivostok","227/76/8":"Asia/Vladivostok","222/77/8":"Asia/Vladivostok","223/77/8":"Asia/Vladivostok","224/77/8":"Asia/Vladivostok","225/77/8":"Asia/Vladivostok","226/77/8":"Asia/Vladivostok","222/78/8":"Asia/Vladivostok","223/78/8":"Asia/Vladivostok","224/78/8":"Asia/Vladivostok","225/78/8":"Asia/Vladivostok","222/79/8":"Asia/Vladivostok","223/79/8":"Asia/Vladivostok","224/79/8":"Asia/Vladivostok","223/80/8":"Asia/Vladivostok","222/81/8":"Asia/Vladivostok","223/81/8":"Asia/Vladivostok","224/81/8":"Asia/Vladivostok","225/81/8":"Asia/Vladivostok","224/82/8":"Asia/Vladivostok","225/82/8":"Asia/Vladivostok","226/82/8":"Asia/Vladivostok","224/83/8":"Asia/Vladivostok","225/83/8":"Asia/Vladivostok","226/83/8":"Asia/Vladivostok","227/83/8":"Asia/Vladivostok","224/84/8":"Asia/Vladivostok","225/84/8":"Asia/Vladivostok","226/84/8":"Asia/Vladivostok","227/84/8":"Asia/Vladivostok","222/85/8":"Asia/Vladivostok","223/85/8":"Asia/Vladivostok","224/85/8":"Asia/Vladivostok","225/85/8":"Asia/Vladivostok","226/85/8":"Asia/Vladivostok","227/85/8":"Asia/Vladivostok","222/86/8":"Asia/Vladivostok","223/86/8":"Asia/Vladivostok","224/86/8":"Asia/Vladivostok","225/86/8":"Asia/Vladivostok","226/86/8":"Asia/Vladivostok","227/86/8":"Asia/Vladivostok","222/87/8":"Asia/Vladivostok","223/87/8":"Asia/Vladivostok","224/87/8":"Asia/Vladivostok","225/87/8":"Asia/Vladivostok","226/87/8":"Asia/Vladivostok","227/87/8":"Asia/Vladivostok","224/88/8":"Asia/Vladivostok","225/88/8":"Asia/Vladivostok","226/88/8":"Asia/Vladivostok","224/89/8":"Asia/Vladivostok","225/89/8":"Asia/Vladivostok","224/90/8":"Asia/Vladivostok","225/90/8":"Asia/Vladivostok","224/91/8":"Asia/Vladivostok","223/92/8":"Asia/Vladivostok","222/93/8":"Asia/Vladivostok","238/38/8":"Asia/Vladivostok","239/38/8":"Asia/Vladivostok","233/39/8":"Asia/Vladivostok","234/39/8":"Asia/Vladivostok","238/39/8":"Asia/Vladivostok","239/39/8":"Asia/Vladivostok","240/39/8":"Asia/Vladivostok","241/39/8":"Asia/Vladivostok","232/40/8":"Asia/Vladivostok","233/40/8":"Asia/Vladivostok","234/40/8":"Asia/Vladivostok","239/40/8":"Asia/Vladivostok","240/40/8":"Asia/Vladivostok","241/40/8":"Asia/Vladivostok","225/41/8":"Asia/Vladivostok","226/41/8":"Asia/Vladivostok","227/41/8":"Asia/Vladivostok","228/41/8":"Asia/Vladivostok","229/41/8":"Asia/Vladivostok","233/41/8":"Asia/Vladivostok","234/41/8":"Asia/Vladivostok","235/41/8":"Asia/Vladivostok","236/41/8":"Asia/Vladivostok","237/41/8":"Asia/Vladivostok","223/42/8":"Asia/Vladivostok","224/42/8":"Asia/Vladivostok","225/42/8":"Asia/Vladivostok","229/42/8":"Asia/Vladivostok","230/42/8":"Asia/Vladivostok","231/42/8":"Asia/Vladivostok","235/42/8":"Asia/Vladivostok","236/42/8":"Asia/Vladivostok","237/42/8":"Asia/Vladivostok","223/43/8":"Asia/Vladivostok","231/43/8":"Asia/Vladivostok","232/43/8":"Asia/Vladivostok","233/43/8":"Asia/Vladivostok","234/43/8":"Asia/Vladivostok","235/43/8":"Asia/Vladivostok","236/43/8":"Asia/Vladivostok","223/44/8":"Asia/Vladivostok","224/44/8":"Asia/Vladivostok","234/44/8":"Asia/Vladivostok","235/44/8":"Asia/Vladivostok","224/45/8":"Asia/Vladivostok","225/45/8":"Asia/Vladivostok","230/45/8":"Asia/Vladivostok","231/45/8":"Asia/Vladivostok","232/45/8":"Asia/Vladivostok","235/45/8":"Asia/Vladivostok","224/46/8":"Asia/Vladivostok","225/46/8":"Asia/Vladivostok","226/46/8":"Asia/Vladivostok","229/46/8":"Asia/Vladivostok","230/46/8":"Asia/Vladivostok","232/46/8":"Asia/Vladivostok","233/46/8":"Asia/Vladivostok","234/46/8":"Asia/Vladivostok","235/46/8":"Asia/Vladivostok","223/47/8":"Asia/Vladivostok","224/47/8":"Asia/Vladivostok","225/47/8":"Asia/Vladivostok","226/47/8":"Asia/Vladivostok","227/47/8":"Asia/Vladivostok","228/47/8":"Asia/Vladivostok","229/47/8":"Asia/Vladivostok","223/48/8":"Asia/Vladivostok","224/48/8":"Asia/Vladivostok","225/48/8":"Asia/Vladivostok","227/48/8":"Asia/Vladivostok","229/48/8":"Asia/Vladivostok","230/48/8":"Asia/Vladivostok","226/49/8":"Asia/Vladivostok","227/49/8":"Asia/Vladivostok","230/49/8":"Asia/Vladivostok","227/50/8":"Asia/Vladivostok","230/50/8":"Asia/Vladivostok","226/51/8":"Asia/Vladivostok","227/51/8":"Asia/Vladivostok","221/52/8":"Asia/Vladivostok","222/52/8":"Asia/Vladivostok","223/52/8":"Asia/Vladivostok","226/52/8":"Asia/Vladivostok","221/53/8":"Asia/Vladivostok","223/53/8":"Asia/Vladivostok","224/53/8":"Asia/Vladivostok","225/53/8":"Asia/Vladivostok","226/53/8":"Asia/Vladivostok","221/54/8":"Asia/Vladivostok","221/55/8":"Asia/Yakutsk","221/56/8":"Asia/Yakutsk","222/56/8":"Asia/Vladivostok","222/57/8":"Asia/Yakutsk","222/58/8":"Asia/Vladivostok","222/59/8":"Asia/Vladivostok","222/60/8":"Asia/Yakutsk","221/61/8":"Asia/Yakutsk","222/61/8":"Asia/Vladivostok","220/62/8":"Asia/Yakutsk","221/62/8":"Asia/Vladivostok","220/63/8":"Asia/Vladivostok","220/64/8":"Asia/Yakutsk","221/64/8":"Asia/Vladivostok","221/65/8":"Asia/Vladivostok","221/66/8":"Asia/Yakutsk","229/75/8":"Asia/Vladivostok","230/75/8":"Asia/Vladivostok","231/75/8":"Asia/Vladivostok","221/76/8":"Asia/Yakutsk","222/76/8":"Asia/Vladivostok","228/76/8":"Asia/Vladivostok","229/76/8":"Asia/Vladivostok","221/77/8":"Asia/Yakutsk","227/77/8":"Asia/Vladivostok","228/77/8":"Asia/Vladivostok","221/78/8":"Asia/Yakutsk","226/78/8":"Asia/Vladivostok","227/78/8":"Asia/Vladivostok","229/78/8":"Asia/Vladivostok","230/78/8":"Asia/Vladivostok","221/79/8":"Asia/Vladivostok","225/79/8":"Asia/Vladivostok","226/79/8":"Asia/Vladivostok","229/79/8":"Asia/Vladivostok","230/79/8":"Asia/Vladivostok","221/80/8":"Asia/Yakutsk","222/80/8":"Asia/Vladivostok","224/80/8":"Asia/Vladivostok","225/80/8":"Asia/Vladivostok","226/80/8":"Asia/Vladivostok","220/81/8":"Asia/Yakutsk","221/81/8":"Asia/Vladivostok","226/81/8":"Asia/Vladivostok","227/81/8":"Asia/Vladivostok","220/82/8":"Asia/Yakutsk","221/82/8":"Asia/Vladivostok","222/82/8":"Asia/Vladivostok","223/82/8":"Asia/Vladivostok","227/82/8":"Asia/Vladivostok","221/83/8":"Asia/Yakutsk","222/83/8":"Asia/Yakutsk","223/83/8":"Asia/Yakutsk","221/84/8":"Asia/Yakutsk","222/84/8":"Asia/Vladivostok","223/84/8":"Asia/Vladivostok","220/85/8":"Asia/Yakutsk","221/85/8":"Asia/Vladivostok","220/86/8":"Asia/Yakutsk","221/86/8":"Asia/Vladivostok","221/87/8":"Asia/Vladivostok","227/88/8":"Asia/Vladivostok","226/89/8":"Asia/Vladivostok","227/89/8":"Asia/Vladivostok","226/90/8":"Asia/Vladivostok","225/91/8":"Asia/Vladivostok","226/91/8":"Asia/Vladivostok","224/92/8":"Asia/Vladivostok","225/92/8":"Asia/Vladivostok","223/93/8":"Asia/Vladivostok","224/93/8":"Asia/Vladivostok","222/94/8":"Asia/Vladivostok","223/94/8":"Asia/Vladivostok","216/48/8":"Asia/Yakutsk","208/49/8":"Asia/Yakutsk","209/49/8":"Asia/Yakutsk","210/49/8":"Asia/Yakutsk","211/49/8":"Asia/Yakutsk","216/49/8":"Asia/Yakutsk","217/49/8":"Asia/Yakutsk","218/49/8":"Asia/Yakutsk","207/50/8":"Asia/Yakutsk","208/50/8":"Asia/Yakutsk","209/50/8":"Asia/Yakutsk","210/50/8":"Asia/Yakutsk","211/50/8":"Asia/Yakutsk","212/50/8":"Asia/Yakutsk","213/50/8":"Asia/Yakutsk","215/50/8":"Asia/Yakutsk","216/50/8":"Asia/Yakutsk","217/50/8":"Asia/Yakutsk","218/50/8":"Asia/Yakutsk","219/50/8":"Asia/Yakutsk","208/51/8":"Asia/Yakutsk","209/51/8":"Asia/Yakutsk","210/51/8":"Asia/Yakutsk","211/51/8":"Asia/Yakutsk","212/51/8":"Asia/Yakutsk","213/51/8":"Asia/Yakutsk","214/51/8":"Asia/Yakutsk","215/51/8":"Asia/Yakutsk","216/51/8":"Asia/Yakutsk","217/51/8":"Asia/Yakutsk","218/51/8":"Asia/Yakutsk","219/51/8":"Asia/Yakutsk","208/52/8":"Asia/Yakutsk","209/52/8":"Asia/Yakutsk","210/52/8":"Asia/Yakutsk","211/52/8":"Asia/Yakutsk","212/52/8":"Asia/Yakutsk","213/52/8":"Asia/Yakutsk","214/52/8":"Asia/Yakutsk","215/52/8":"Asia/Yakutsk","216/52/8":"Asia/Yakutsk","217/52/8":"Asia/Yakutsk","218/52/8":"Asia/Yakutsk","219/52/8":"Asia/Yakutsk","208/53/8":"Asia/Yakutsk","209/53/8":"Asia/Yakutsk","210/53/8":"Asia/Yakutsk","211/53/8":"Asia/Yakutsk","212/53/8":"Asia/Yakutsk","213/53/8":"Asia/Yakutsk","214/53/8":"Asia/Yakutsk","215/53/8":"Asia/Yakutsk","216/53/8":"Asia/Yakutsk","217/53/8":"Asia/Yakutsk","218/53/8":"Asia/Yakutsk","219/53/8":"Asia/Yakutsk","209/54/8":"Asia/Yakutsk","210/54/8":"Asia/Yakutsk","211/54/8":"Asia/Yakutsk","212/54/8":"Asia/Yakutsk","213/54/8":"Asia/Yakutsk","214/54/8":"Asia/Yakutsk","215/54/8":"Asia/Yakutsk","216/54/8":"Asia/Yakutsk","217/54/8":"Asia/Yakutsk","218/54/8":"Asia/Yakutsk","219/54/8":"Asia/Yakutsk","208/55/8":"Asia/Yakutsk","209/55/8":"Asia/Yakutsk","210/55/8":"Asia/Yakutsk","211/55/8":"Asia/Yakutsk","212/55/8":"Asia/Yakutsk","213/55/8":"Asia/Yakutsk","214/55/8":"Asia/Yakutsk","215/55/8":"Asia/Yakutsk","216/55/8":"Asia/Yakutsk","217/55/8":"Asia/Yakutsk","218/55/8":"Asia/Yakutsk","219/55/8":"Asia/Yakutsk","220/55/8":"Asia/Yakutsk","207/56/8":"Asia/Yakutsk","208/56/8":"Asia/Yakutsk","209/56/8":"Asia/Yakutsk","210/56/8":"Asia/Yakutsk","211/56/8":"Asia/Yakutsk","212/56/8":"Asia/Yakutsk","213/56/8":"Asia/Yakutsk","214/56/8":"Asia/Yakutsk","215/56/8":"Asia/Yakutsk","216/56/8":"Asia/Yakutsk","217/56/8":"Asia/Yakutsk","218/56/8":"Asia/Yakutsk","219/56/8":"Asia/Yakutsk","220/56/8":"Asia/Yakutsk","206/57/8":"Asia/Yakutsk","207/57/8":"Asia/Yakutsk","208/57/8":"Asia/Yakutsk","209/57/8":"Asia/Yakutsk","210/57/8":"Asia/Yakutsk","211/57/8":"Asia/Yakutsk","212/57/8":"Asia/Yakutsk","213/57/8":"Asia/Yakutsk","214/57/8":"Asia/Yakutsk","215/57/8":"Asia/Yakutsk","216/57/8":"Asia/Yakutsk","217/57/8":"Asia/Yakutsk","218/57/8":"Asia/Yakutsk","219/57/8":"Asia/Yakutsk","220/57/8":"Asia/Yakutsk","221/57/8":"Asia/Yakutsk","205/58/8":"Asia/Yakutsk","206/58/8":"Asia/Yakutsk","207/58/8":"Asia/Yakutsk","208/58/8":"Asia/Yakutsk","209/58/8":"Asia/Yakutsk","210/58/8":"Asia/Yakutsk","211/58/8":"Asia/Yakutsk","212/58/8":"Asia/Yakutsk","213/58/8":"Asia/Yakutsk","214/58/8":"Asia/Yakutsk","215/58/8":"Asia/Yakutsk","216/58/8":"Asia/Yakutsk","217/58/8":"Asia/Yakutsk","218/58/8":"Asia/Yakutsk","219/58/8":"Asia/Yakutsk","220/58/8":"Asia/Yakutsk","221/58/8":"Asia/Yakutsk","205/59/8":"Asia/Yakutsk","206/59/8":"Asia/Yakutsk","207/59/8":"Asia/Yakutsk","208/59/8":"Asia/Yakutsk","209/59/8":"Asia/Yakutsk","210/59/8":"Asia/Yakutsk","211/59/8":"Asia/Yakutsk","212/59/8":"Asia/Yakutsk","213/59/8":"Asia/Yakutsk","214/59/8":"Asia/Yakutsk","215/59/8":"Asia/Yakutsk","216/59/8":"Asia/Yakutsk","217/59/8":"Asia/Yakutsk","218/59/8":"Asia/Yakutsk","219/59/8":"Asia/Yakutsk","220/59/8":"Asia/Yakutsk","221/59/8":"Asia/Yakutsk","205/60/8":"Asia/Yakutsk","206/60/8":"Asia/Yakutsk","207/60/8":"Asia/Yakutsk","208/60/8":"Asia/Yakutsk","209/60/8":"Asia/Yakutsk","210/60/8":"Asia/Yakutsk","211/60/8":"Asia/Yakutsk","212/60/8":"Asia/Yakutsk","213/60/8":"Asia/Yakutsk","214/60/8":"Asia/Yakutsk","215/60/8":"Asia/Yakutsk","216/60/8":"Asia/Yakutsk","217/60/8":"Asia/Yakutsk","218/60/8":"Asia/Yakutsk","219/60/8":"Asia/Yakutsk","220/60/8":"Asia/Yakutsk","221/60/8":"Asia/Yakutsk","205/61/8":"Asia/Yakutsk","206/61/8":"Asia/Yakutsk","207/61/8":"Asia/Yakutsk","208/61/8":"Asia/Yakutsk","209/61/8":"Asia/Yakutsk","210/61/8":"Asia/Yakutsk","211/61/8":"Asia/Yakutsk","212/61/8":"Asia/Yakutsk","213/61/8":"Asia/Yakutsk","214/61/8":"Asia/Yakutsk","215/61/8":"Asia/Yakutsk","216/61/8":"Asia/Yakutsk","217/61/8":"Asia/Yakutsk","218/61/8":"Asia/Yakutsk","219/61/8":"Asia/Yakutsk","220/61/8":"Asia/Yakutsk","204/62/8":"Asia/Yakutsk","205/62/8":"Asia/Yakutsk","206/62/8":"Asia/Yakutsk","207/62/8":"Asia/Yakutsk","208/62/8":"Asia/Yakutsk","209/62/8":"Asia/Yakutsk","210/62/8":"Asia/Yakutsk","211/62/8":"Asia/Yakutsk","212/62/8":"Asia/Yakutsk","213/62/8":"Asia/Yakutsk","214/62/8":"Asia/Yakutsk","215/62/8":"Asia/Yakutsk","216/62/8":"Asia/Yakutsk","217/62/8":"Asia/Yakutsk","218/62/8":"Asia/Yakutsk","219/62/8":"Asia/Yakutsk","204/63/8":"Asia/Yakutsk","205/63/8":"Asia/Yakutsk","206/63/8":"Asia/Yakutsk","207/63/8":"Asia/Yakutsk","208/63/8":"Asia/Yakutsk","209/63/8":"Asia/Yakutsk","210/63/8":"Asia/Yakutsk","211/63/8":"Asia/Yakutsk","212/63/8":"Asia/Yakutsk","213/63/8":"Asia/Yakutsk","214/63/8":"Asia/Yakutsk","215/63/8":"Asia/Yakutsk","216/63/8":"Asia/Yakutsk","217/63/8":"Asia/Yakutsk","218/63/8":"Asia/Yakutsk","219/63/8":"Asia/Yakutsk","204/64/8":"Asia/Yakutsk","205/64/8":"Asia/Yakutsk","206/64/8":"Asia/Yakutsk","207/64/8":"Asia/Yakutsk","208/64/8":"Asia/Yakutsk","209/64/8":"Asia/Yakutsk","210/64/8":"Asia/Yakutsk","211/64/8":"Asia/Yakutsk","212/64/8":"Asia/Yakutsk","213/64/8":"Asia/Yakutsk","214/64/8":"Asia/Yakutsk","215/64/8":"Asia/Yakutsk","216/64/8":"Asia/Yakutsk","217/64/8":"Asia/Yakutsk","218/64/8":"Asia/Yakutsk","219/64/8":"Asia/Yakutsk","205/65/8":"Asia/Yakutsk","206/65/8":"Asia/Yakutsk","207/65/8":"Asia/Yakutsk","208/65/8":"Asia/Yakutsk","209/65/8":"Asia/Yakutsk","210/65/8":"Asia/Yakutsk","211/65/8":"Asia/Yakutsk","212/65/8":"Asia/Yakutsk","213/65/8":"Asia/Yakutsk","214/65/8":"Asia/Yakutsk","215/65/8":"Asia/Yakutsk","216/65/8":"Asia/Yakutsk","217/65/8":"Asia/Yakutsk","218/65/8":"Asia/Yakutsk","219/65/8":"Asia/Yakutsk","220/65/8":"Asia/Yakutsk","204/66/8":"Asia/Yakutsk","205/66/8":"Asia/Yakutsk","206/66/8":"Asia/Yakutsk","207/66/8":"Asia/Yakutsk","208/66/8":"Asia/Yakutsk","209/66/8":"Asia/Yakutsk","210/66/8":"Asia/Yakutsk","211/66/8":"Asia/Yakutsk","212/66/8":"Asia/Yakutsk","213/66/8":"Asia/Yakutsk","214/66/8":"Asia/Yakutsk","215/66/8":"Asia/Yakutsk","216/66/8":"Asia/Yakutsk","217/66/8":"Asia/Yakutsk","218/66/8":"Asia/Yakutsk","219/66/8":"Asia/Yakutsk","220/66/8":"Asia/Yakutsk","206/67/8":"Asia/Yakutsk","207/67/8":"Asia/Yakutsk","208/67/8":"Asia/Yakutsk","209/67/8":"Asia/Yakutsk","210/67/8":"Asia/Yakutsk","211/67/8":"Asia/Yakutsk","212/67/8":"Asia/Yakutsk","213/67/8":"Asia/Yakutsk","214/67/8":"Asia/Yakutsk","215/67/8":"Asia/Yakutsk","216/67/8":"Asia/Yakutsk","217/67/8":"Asia/Yakutsk","218/67/8":"Asia/Yakutsk","219/67/8":"Asia/Yakutsk","220/67/8":"Asia/Yakutsk","221/67/8":"Asia/Yakutsk","206/68/8":"Asia/Yakutsk","207/68/8":"Asia/Yakutsk","208/68/8":"Asia/Yakutsk","209/68/8":"Asia/Yakutsk","210/68/8":"Asia/Yakutsk","211/68/8":"Asia/Yakutsk","212/68/8":"Asia/Yakutsk","213/68/8":"Asia/Yakutsk","214/68/8":"Asia/Yakutsk","215/68/8":"Asia/Yakutsk","216/68/8":"Asia/Yakutsk","217/68/8":"Asia/Yakutsk","218/68/8":"Asia/Yakutsk","219/68/8":"Asia/Yakutsk","220/68/8":"Asia/Yakutsk","221/68/8":"Asia/Yakutsk","206/69/8":"Asia/Yakutsk","207/69/8":"Asia/Yakutsk","208/69/8":"Asia/Yakutsk","209/69/8":"Asia/Yakutsk","210/69/8":"Asia/Yakutsk","211/69/8":"Asia/Yakutsk","212/69/8":"Asia/Yakutsk","213/69/8":"Asia/Yakutsk","214/69/8":"Asia/Yakutsk","215/69/8":"Asia/Yakutsk","216/69/8":"Asia/Yakutsk","217/69/8":"Asia/Yakutsk","218/69/8":"Asia/Yakutsk","219/69/8":"Asia/Yakutsk","220/69/8":"Asia/Yakutsk","221/69/8":"Asia/Yakutsk","207/70/8":"Asia/Yakutsk","208/70/8":"Asia/Yakutsk","209/70/8":"Asia/Yakutsk","210/70/8":"Asia/Yakutsk","211/70/8":"Asia/Yakutsk","212/70/8":"Asia/Yakutsk","213/70/8":"Asia/Yakutsk","214/70/8":"Asia/Yakutsk","215/70/8":"Asia/Yakutsk","216/70/8":"Asia/Yakutsk","217/70/8":"Asia/Yakutsk","218/70/8":"Asia/Yakutsk","219/70/8":"Asia/Yakutsk","220/70/8":"Asia/Yakutsk","221/70/8":"Asia/Yakutsk","222/70/8":"Asia/Yakutsk","207/71/8":"Asia/Yakutsk","208/71/8":"Asia/Yakutsk","209/71/8":"Asia/Yakutsk","210/71/8":"Asia/Yakutsk","211/71/8":"Asia/Yakutsk","212/71/8":"Asia/Yakutsk","213/71/8":"Asia/Yakutsk","214/71/8":"Asia/Yakutsk","215/71/8":"Asia/Yakutsk","216/71/8":"Asia/Yakutsk","217/71/8":"Asia/Yakutsk","218/71/8":"Asia/Yakutsk","219/71/8":"Asia/Yakutsk","220/71/8":"Asia/Yakutsk","221/71/8":"Asia/Yakutsk","222/71/8":"Asia/Yakutsk","223/71/8":"Asia/Yakutsk","207/72/8":"Asia/Yakutsk","208/72/8":"Asia/Yakutsk","209/72/8":"Asia/Yakutsk","210/72/8":"Asia/Yakutsk","211/72/8":"Asia/Yakutsk","212/72/8":"Asia/Yakutsk","213/72/8":"Asia/Yakutsk","214/72/8":"Asia/Yakutsk","215/72/8":"Asia/Yakutsk","216/72/8":"Asia/Yakutsk","217/72/8":"Asia/Yakutsk","218/72/8":"Asia/Yakutsk","219/72/8":"Asia/Yakutsk","220/72/8":"Asia/Yakutsk","221/72/8":"Asia/Yakutsk","207/73/8":"Asia/Yakutsk","208/73/8":"Asia/Yakutsk","212/73/8":"Asia/Yakutsk","213/73/8":"Asia/Yakutsk","214/73/8":"Asia/Yakutsk","215/73/8":"Asia/Yakutsk","216/73/8":"Asia/Yakutsk","217/73/8":"Asia/Yakutsk","218/73/8":"Asia/Yakutsk","219/73/8":"Asia/Yakutsk","220/73/8":"Asia/Yakutsk","207/74/8":"Asia/Yakutsk","213/74/8":"Asia/Yakutsk","214/74/8":"Asia/Yakutsk","215/74/8":"Asia/Yakutsk","216/74/8":"Asia/Yakutsk","217/74/8":"Asia/Yakutsk","218/74/8":"Asia/Yakutsk","219/74/8":"Asia/Yakutsk","220/74/8":"Asia/Yakutsk","213/75/8":"Asia/Yakutsk","214/75/8":"Asia/Yakutsk","215/75/8":"Asia/Yakutsk","216/75/8":"Asia/Yakutsk","217/75/8":"Asia/Yakutsk","218/75/8":"Asia/Yakutsk","219/75/8":"Asia/Yakutsk","220/75/8":"Asia/Yakutsk","213/76/8":"Asia/Yakutsk","214/76/8":"Asia/Yakutsk","215/76/8":"Asia/Yakutsk","216/76/8":"Asia/Yakutsk","217/76/8":"Asia/Yakutsk","218/76/8":"Asia/Yakutsk","219/76/8":"Asia/Yakutsk","220/76/8":"Asia/Yakutsk","214/77/8":"Asia/Yakutsk","215/77/8":"Asia/Yakutsk","216/77/8":"Asia/Yakutsk","217/77/8":"Asia/Yakutsk","218/77/8":"Asia/Yakutsk","219/77/8":"Asia/Yakutsk","220/77/8":"Asia/Yakutsk","214/78/8":"Asia/Yakutsk","215/78/8":"Asia/Yakutsk","216/78/8":"Asia/Yakutsk","217/78/8":"Asia/Yakutsk","218/78/8":"Asia/Yakutsk","219/78/8":"Asia/Yakutsk","220/78/8":"Asia/Yakutsk","215/79/8":"Asia/Yakutsk","216/79/8":"Asia/Yakutsk","217/79/8":"Asia/Yakutsk","218/79/8":"Asia/Yakutsk","219/79/8":"Asia/Yakutsk","220/79/8":"Asia/Yakutsk","215/80/8":"Asia/Yakutsk","216/80/8":"Asia/Yakutsk","217/80/8":"Asia/Yakutsk","218/80/8":"Asia/Yakutsk","219/80/8":"Asia/Yakutsk","220/80/8":"Asia/Yakutsk","215/81/8":"Asia/Yakutsk","216/81/8":"Asia/Yakutsk","217/81/8":"Asia/Yakutsk","218/81/8":"Asia/Yakutsk","219/81/8":"Asia/Yakutsk","217/82/8":"Asia/Yakutsk","218/82/8":"Asia/Yakutsk","219/82/8":"Asia/Yakutsk","218/83/8":"Asia/Yakutsk","219/83/8":"Asia/Yakutsk","220/83/8":"Asia/Yakutsk","219/84/8":"Asia/Yakutsk","220/84/8":"Asia/Yakutsk","219/85/8":"Asia/Yakutsk","219/86/8":"Asia/Yakutsk","209/46/8":"Asia/Yakutsk","210/46/8":"Asia/Yakutsk","211/46/8":"Asia/Yakutsk","208/47/8":"Asia/Yakutsk","209/47/8":"Asia/Yakutsk","210/47/8":"Asia/Yakutsk","211/47/8":"Asia/Yakutsk","215/47/8":"Asia/Yakutsk","216/47/8":"Asia/Yakutsk","217/47/8":"Asia/Yakutsk","208/48/8":"Asia/Yakutsk","209/48/8":"Asia/Yakutsk","210/48/8":"Asia/Yakutsk","211/48/8":"Asia/Yakutsk","212/48/8":"Asia/Yakutsk","215/48/8":"Asia/Yakutsk","217/48/8":"Asia/Yakutsk","218/48/8":"Asia/Yakutsk","219/48/8":"Asia/Yakutsk","212/49/8":"Asia/Yakutsk","213/49/8":"Asia/Yakutsk","214/49/8":"Asia/Yakutsk","215/49/8":"Asia/Yakutsk","219/49/8":"Asia/Yakutsk","220/49/8":"Asia/Yakutsk","214/50/8":"Asia/Yakutsk","220/50/8":"Asia/Yakutsk","220/51/8":"Asia/Yakutsk","220/52/8":"Asia/Yakutsk","220/53/8":"Asia/Yakutsk","220/54/8":"Asia/Yakutsk","178/50/8":"Asia/Yekaterinburg","179/50/8":"Asia/Yekaterinburg","180/50/8":"Asia/Yekaterinburg","181/50/8":"Asia/Yekaterinburg","182/50/8":"Asia/Yekaterinburg","177/51/8":"Asia/Yekaterinburg","178/51/8":"Asia/Yekaterinburg","179/51/8":"Asia/Yekaterinburg","180/51/8":"Asia/Yekaterinburg","181/51/8":"Asia/Yekaterinburg","182/51/8":"Asia/Yekaterinburg","177/52/8":"Asia/Yekaterinburg","178/52/8":"Asia/Yekaterinburg","179/52/8":"Asia/Yekaterinburg","180/52/8":"Asia/Yekaterinburg","181/52/8":"Asia/Yekaterinburg","182/52/8":"Asia/Yekaterinburg","177/53/8":"Asia/Yekaterinburg","178/53/8":"Asia/Yekaterinburg","179/53/8":"Asia/Yekaterinburg","180/53/8":"Asia/Yekaterinburg","181/53/8":"Asia/Yekaterinburg","182/53/8":"Asia/Yekaterinburg","183/53/8":"Asia/Yekaterinburg","176/54/8":"Asia/Yekaterinburg","177/54/8":"Asia/Yekaterinburg","178/54/8":"Asia/Yekaterinburg","179/54/8":"Asia/Yekaterinburg","180/54/8":"Asia/Yekaterinburg","181/54/8":"Asia/Yekaterinburg","182/54/8":"Asia/Yekaterinburg","183/54/8":"Asia/Yekaterinburg","175/55/8":"Asia/Yekaterinburg","176/55/8":"Asia/Yekaterinburg","177/55/8":"Asia/Yekaterinburg","178/55/8":"Asia/Yekaterinburg","179/55/8":"Asia/Yekaterinburg","180/55/8":"Asia/Yekaterinburg","181/55/8":"Asia/Yekaterinburg","182/55/8":"Asia/Yekaterinburg","183/55/8":"Asia/Yekaterinburg","184/55/8":"Asia/Yekaterinburg","176/56/8":"Asia/Yekaterinburg","177/56/8":"Asia/Yekaterinburg","178/56/8":"Asia/Yekaterinburg","179/56/8":"Asia/Yekaterinburg","180/56/8":"Asia/Yekaterinburg","181/56/8":"Asia/Yekaterinburg","182/56/8":"Asia/Yekaterinburg","183/56/8":"Asia/Yekaterinburg","176/57/8":"Asia/Yekaterinburg","177/57/8":"Asia/Yekaterinburg","178/57/8":"Asia/Yekaterinburg","179/57/8":"Asia/Yekaterinburg","180/57/8":"Asia/Yekaterinburg","181/57/8":"Asia/Yekaterinburg","182/57/8":"Asia/Yekaterinburg","183/57/8":"Asia/Yekaterinburg","175/58/8":"Asia/Yekaterinburg","176/58/8":"Asia/Yekaterinburg","177/58/8":"Asia/Yekaterinburg","178/58/8":"Asia/Yekaterinburg","179/58/8":"Asia/Yekaterinburg","180/58/8":"Asia/Yekaterinburg","181/58/8":"Asia/Yekaterinburg","182/58/8":"Asia/Yekaterinburg","183/58/8":"Asia/Yekaterinburg","175/59/8":"Asia/Yekaterinburg","176/59/8":"Asia/Yekaterinburg","177/59/8":"Asia/Yekaterinburg","178/59/8":"Asia/Yekaterinburg","179/59/8":"Asia/Yekaterinburg","180/59/8":"Asia/Yekaterinburg","181/59/8":"Asia/Yekaterinburg","182/59/8":"Asia/Yekaterinburg","183/59/8":"Asia/Yekaterinburg","184/59/8":"Asia/Yekaterinburg","185/59/8":"Asia/Yekaterinburg","175/60/8":"Asia/Yekaterinburg","176/60/8":"Asia/Yekaterinburg","177/60/8":"Asia/Yekaterinburg","178/60/8":"Asia/Yekaterinburg","179/60/8":"Asia/Yekaterinburg","180/60/8":"Asia/Yekaterinburg","181/60/8":"Asia/Yekaterinburg","182/60/8":"Asia/Yekaterinburg","183/60/8":"Asia/Yekaterinburg","184/60/8":"Asia/Yekaterinburg","185/60/8":"Asia/Yekaterinburg","176/61/8":"Asia/Yekaterinburg","177/61/8":"Asia/Yekaterinburg","178/61/8":"Asia/Yekaterinburg","179/61/8":"Asia/Yekaterinburg","180/61/8":"Asia/Yekaterinburg","181/61/8":"Asia/Yekaterinburg","182/61/8":"Asia/Yekaterinburg","183/61/8":"Asia/Yekaterinburg","184/61/8":"Asia/Yekaterinburg","185/61/8":"Asia/Yekaterinburg","175/62/8":"Asia/Yekaterinburg","176/62/8":"Asia/Yekaterinburg","177/62/8":"Asia/Yekaterinburg","178/62/8":"Asia/Yekaterinburg","179/62/8":"Asia/Yekaterinburg","180/62/8":"Asia/Yekaterinburg","181/62/8":"Asia/Yekaterinburg","182/62/8":"Asia/Yekaterinburg","183/62/8":"Asia/Yekaterinburg","184/62/8":"Asia/Yekaterinburg","185/62/8":"Asia/Yekaterinburg","175/63/8":"Asia/Yekaterinburg","176/63/8":"Asia/Yekaterinburg","177/63/8":"Asia/Yekaterinburg","178/63/8":"Asia/Yekaterinburg","179/63/8":"Asia/Yekaterinburg","180/63/8":"Asia/Yekaterinburg","181/63/8":"Asia/Yekaterinburg","182/63/8":"Asia/Yekaterinburg","183/63/8":"Asia/Yekaterinburg","184/63/8":"Asia/Yekaterinburg","185/63/8":"Asia/Yekaterinburg","174/64/8":"Asia/Yekaterinburg","175/64/8":"Asia/Yekaterinburg","176/64/8":"Asia/Yekaterinburg","177/64/8":"Asia/Yekaterinburg","178/64/8":"Asia/Yekaterinburg","179/64/8":"Asia/Yekaterinburg","180/64/8":"Asia/Yekaterinburg","181/64/8":"Asia/Yekaterinburg","182/64/8":"Asia/Yekaterinburg","183/64/8":"Asia/Yekaterinburg","184/64/8":"Asia/Yekaterinburg","185/64/8":"Asia/Yekaterinburg","186/64/8":"Asia/Yekaterinburg","173/65/8":"Asia/Yekaterinburg","174/65/8":"Asia/Yekaterinburg","175/65/8":"Asia/Yekaterinburg","176/65/8":"Asia/Yekaterinburg","177/65/8":"Asia/Yekaterinburg","178/65/8":"Asia/Yekaterinburg","179/65/8":"Asia/Yekaterinburg","180/65/8":"Asia/Yekaterinburg","181/65/8":"Asia/Yekaterinburg","182/65/8":"Asia/Yekaterinburg","183/65/8":"Asia/Yekaterinburg","184/65/8":"Asia/Yekaterinburg","185/65/8":"Asia/Yekaterinburg","186/65/8":"Asia/Yekaterinburg","172/66/8":"Asia/Yekaterinburg","173/66/8":"Asia/Yekaterinburg","174/66/8":"Asia/Yekaterinburg","175/66/8":"Asia/Yekaterinburg","176/66/8":"Asia/Yekaterinburg","177/66/8":"Asia/Yekaterinburg","178/66/8":"Asia/Yekaterinburg","179/66/8":"Asia/Yekaterinburg","180/66/8":"Asia/Yekaterinburg","181/66/8":"Asia/Yekaterinburg","182/66/8":"Asia/Yekaterinburg","183/66/8":"Asia/Yekaterinburg","184/66/8":"Asia/Yekaterinburg","185/66/8":"Asia/Yekaterinburg","186/66/8":"Asia/Yekaterinburg","171/67/8":"Asia/Yekaterinburg","172/67/8":"Asia/Yekaterinburg","173/67/8":"Asia/Yekaterinburg","174/67/8":"Asia/Yekaterinburg","175/67/8":"Asia/Yekaterinburg","176/67/8":"Asia/Yekaterinburg","177/67/8":"Asia/Yekaterinburg","178/67/8":"Asia/Yekaterinburg","179/67/8":"Asia/Yekaterinburg","180/67/8":"Asia/Yekaterinburg","181/67/8":"Asia/Yekaterinburg","182/67/8":"Asia/Yekaterinburg","183/67/8":"Asia/Yekaterinburg","184/67/8":"Asia/Yekaterinburg","185/67/8":"Asia/Yekaterinburg","186/67/8":"Asia/Yekaterinburg","187/67/8":"Asia/Yekaterinburg","171/68/8":"Asia/Yekaterinburg","172/68/8":"Asia/Yekaterinburg","173/68/8":"Asia/Yekaterinburg","174/68/8":"Asia/Yekaterinburg","175/68/8":"Asia/Yekaterinburg","176/68/8":"Asia/Yekaterinburg","177/68/8":"Asia/Yekaterinburg","178/68/8":"Asia/Yekaterinburg","179/68/8":"Asia/Yekaterinburg","180/68/8":"Asia/Yekaterinburg","181/68/8":"Asia/Yekaterinburg","182/68/8":"Asia/Yekaterinburg","183/68/8":"Asia/Yekaterinburg","184/68/8":"Asia/Yekaterinburg","185/68/8":"Asia/Yekaterinburg","186/68/8":"Asia/Yekaterinburg","187/68/8":"Asia/Yekaterinburg","171/69/8":"Asia/Yekaterinburg","172/69/8":"Asia/Yekaterinburg","173/69/8":"Asia/Yekaterinburg","174/69/8":"Asia/Yekaterinburg","175/69/8":"Asia/Yekaterinburg","176/69/8":"Asia/Yekaterinburg","177/69/8":"Asia/Yekaterinburg","178/69/8":"Asia/Yekaterinburg","179/69/8":"Asia/Yekaterinburg","180/69/8":"Asia/Yekaterinburg","181/69/8":"Asia/Yekaterinburg","182/69/8":"Asia/Yekaterinburg","183/69/8":"Asia/Yekaterinburg","184/69/8":"Asia/Yekaterinburg","185/69/8":"Asia/Yekaterinburg","186/69/8":"Asia/Yekaterinburg","187/69/8":"Asia/Yekaterinburg","171/70/8":"Asia/Yekaterinburg","172/70/8":"Asia/Yekaterinburg","173/70/8":"Asia/Yekaterinburg","174/70/8":"Asia/Yekaterinburg","175/70/8":"Asia/Yekaterinburg","176/70/8":"Asia/Yekaterinburg","177/70/8":"Asia/Yekaterinburg","178/70/8":"Asia/Yekaterinburg","179/70/8":"Asia/Yekaterinburg","180/70/8":"Asia/Yekaterinburg","181/70/8":"Asia/Yekaterinburg","182/70/8":"Asia/Yekaterinburg","183/70/8":"Asia/Yekaterinburg","184/70/8":"Asia/Yekaterinburg","185/70/8":"Asia/Yekaterinburg","186/70/8":"Asia/Yekaterinburg","187/70/8":"Asia/Yekaterinburg","171/71/8":"Asia/Yekaterinburg","172/71/8":"Asia/Yekaterinburg","173/71/8":"Asia/Yekaterinburg","174/71/8":"Asia/Yekaterinburg","175/71/8":"Asia/Yekaterinburg","176/71/8":"Asia/Yekaterinburg","177/71/8":"Asia/Yekaterinburg","178/71/8":"Asia/Yekaterinburg","179/71/8":"Asia/Yekaterinburg","180/71/8":"Asia/Yekaterinburg","181/71/8":"Asia/Yekaterinburg","182/71/8":"Asia/Yekaterinburg","183/71/8":"Asia/Yekaterinburg","184/71/8":"Asia/Yekaterinburg","185/71/8":"Asia/Yekaterinburg","186/71/8":"Asia/Yekaterinburg","187/71/8":"Asia/Yekaterinburg","171/72/8":"Asia/Yekaterinburg","172/72/8":"Asia/Yekaterinburg","173/72/8":"Asia/Yekaterinburg","174/72/8":"Asia/Yekaterinburg","175/72/8":"Asia/Yekaterinburg","176/72/8":"Asia/Yekaterinburg","177/72/8":"Asia/Yekaterinburg","178/72/8":"Asia/Yekaterinburg","179/72/8":"Asia/Yekaterinburg","180/72/8":"Asia/Yekaterinburg","181/72/8":"Asia/Yekaterinburg","182/72/8":"Asia/Yekaterinburg","183/72/8":"Asia/Yekaterinburg","184/72/8":"Asia/Yekaterinburg","185/72/8":"Asia/Yekaterinburg","168/73/8":"Asia/Yekaterinburg","169/73/8":"Asia/Yekaterinburg","170/73/8":"Asia/Yekaterinburg","171/73/8":"Asia/Yekaterinburg","172/73/8":"Asia/Yekaterinburg","173/73/8":"Asia/Yekaterinburg","174/73/8":"Asia/Yekaterinburg","175/73/8":"Asia/Yekaterinburg","176/73/8":"Asia/Yekaterinburg","177/73/8":"Asia/Yekaterinburg","178/73/8":"Asia/Yekaterinburg","179/73/8":"Asia/Yekaterinburg","180/73/8":"Asia/Yekaterinburg","181/73/8":"Asia/Yekaterinburg","167/74/8":"Asia/Yekaterinburg","168/74/8":"Asia/Yekaterinburg","169/74/8":"Asia/Yekaterinburg","170/74/8":"Asia/Yekaterinburg","171/74/8":"Asia/Yekaterinburg","172/74/8":"Asia/Yekaterinburg","173/74/8":"Asia/Yekaterinburg","174/74/8":"Asia/Yekaterinburg","175/74/8":"Asia/Yekaterinburg","176/74/8":"Asia/Yekaterinburg","177/74/8":"Asia/Yekaterinburg","178/74/8":"Asia/Yekaterinburg","179/74/8":"Asia/Yekaterinburg","180/74/8":"Asia/Yekaterinburg","181/74/8":"Asia/Yekaterinburg","167/75/8":"Asia/Yekaterinburg","168/75/8":"Asia/Yekaterinburg","169/75/8":"Asia/Yekaterinburg","170/75/8":"Asia/Yekaterinburg","171/75/8":"Asia/Yekaterinburg","172/75/8":"Asia/Yekaterinburg","173/75/8":"Asia/Yekaterinburg","174/75/8":"Asia/Yekaterinburg","175/75/8":"Asia/Yekaterinburg","176/75/8":"Asia/Yekaterinburg","177/75/8":"Asia/Yekaterinburg","178/75/8":"Asia/Yekaterinburg","179/75/8":"Asia/Yekaterinburg","180/75/8":"Asia/Yekaterinburg","167/76/8":"Asia/Yekaterinburg","168/76/8":"Asia/Yekaterinburg","169/76/8":"Asia/Yekaterinburg","170/76/8":"Asia/Yekaterinburg","171/76/8":"Asia/Yekaterinburg","172/76/8":"Asia/Yekaterinburg","173/76/8":"Asia/Yekaterinburg","174/76/8":"Asia/Yekaterinburg","175/76/8":"Asia/Yekaterinburg","176/76/8":"Asia/Yekaterinburg","177/76/8":"Asia/Yekaterinburg","167/77/8":"Asia/Yekaterinburg","168/77/8":"Asia/Yekaterinburg","169/77/8":"Asia/Yekaterinburg","170/77/8":"Asia/Yekaterinburg","171/77/8":"Asia/Yekaterinburg","172/77/8":"Asia/Yekaterinburg","173/77/8":"Asia/Yekaterinburg","174/77/8":"Asia/Yekaterinburg","175/77/8":"Asia/Yekaterinburg","176/77/8":"Asia/Yekaterinburg","177/77/8":"Asia/Yekaterinburg","167/78/8":"Asia/Yekaterinburg","168/78/8":"Asia/Yekaterinburg","169/78/8":"Asia/Yekaterinburg","170/78/8":"Asia/Yekaterinburg","171/78/8":"Asia/Yekaterinburg","172/78/8":"Asia/Yekaterinburg","173/78/8":"Asia/Yekaterinburg","174/78/8":"Asia/Yekaterinburg","175/78/8":"Asia/Yekaterinburg","176/78/8":"Asia/Yekaterinburg","177/78/8":"Asia/Yekaterinburg","167/79/8":"Asia/Yekaterinburg","168/79/8":"Asia/Yekaterinburg","169/79/8":"Asia/Yekaterinburg","170/79/8":"Asia/Yekaterinburg","171/79/8":"Asia/Yekaterinburg","172/79/8":"Asia/Yekaterinburg","173/79/8":"Asia/Yekaterinburg","174/79/8":"Asia/Yekaterinburg","175/79/8":"Asia/Yekaterinburg","176/79/8":"Asia/Yekaterinburg","177/79/8":"Asia/Yekaterinburg","167/80/8":"Asia/Yekaterinburg","168/80/8":"Asia/Yekaterinburg","169/80/8":"Asia/Yekaterinburg","170/80/8":"Asia/Yekaterinburg","171/80/8":"Asia/Yekaterinburg","172/80/8":"Asia/Yekaterinburg","173/80/8":"Asia/Yekaterinburg","174/80/8":"Asia/Yekaterinburg","175/80/8":"Asia/Yekaterinburg","167/81/8":"Asia/Yekaterinburg","168/81/8":"Asia/Yekaterinburg","169/81/8":"Asia/Yekaterinburg","170/81/8":"Asia/Yekaterinburg","171/81/8":"Asia/Yekaterinburg","167/82/8":"Asia/Yekaterinburg","168/82/8":"Asia/Yekaterinburg","169/82/8":"Asia/Yekaterinburg","170/82/8":"Asia/Yekaterinburg","166/83/8":"Asia/Yekaterinburg","167/83/8":"Asia/Yekaterinburg","168/83/8":"Asia/Yekaterinburg","169/83/8":"Asia/Yekaterinburg","170/83/8":"Asia/Yekaterinburg","166/84/8":"Asia/Yekaterinburg","167/84/8":"Asia/Yekaterinburg","168/84/8":"Asia/Yekaterinburg","169/84/8":"Asia/Yekaterinburg","177/48/8":"Asia/Yekaterinburg","178/48/8":"Asia/Yekaterinburg","181/48/8":"Asia/Yekaterinburg","182/48/8":"Asia/Yekaterinburg","177/49/8":"Asia/Yekaterinburg","178/49/8":"Asia/Yekaterinburg","179/49/8":"Asia/Yekaterinburg","180/49/8":"Asia/Yekaterinburg","181/49/8":"Asia/Yekaterinburg","182/49/8":"Asia/Yekaterinburg","176/50/8":"Asia/Yekaterinburg","177/50/8":"Asia/Yekaterinburg","176/51/8":"Asia/Yekaterinburg","176/52/8":"Asia/Yekaterinburg","175/53/8":"Asia/Yekaterinburg","176/53/8":"Asia/Yekaterinburg","174/54/8":"Asia/Yekaterinburg","175/54/8":"Asia/Yekaterinburg","174/55/8":"Asia/Yekaterinburg","174/56/8":"Asia/Yekaterinburg","175/56/8":"Asia/Yekaterinburg","174/57/8":"Asia/Yekaterinburg","175/57/8":"Asia/Yekaterinburg","174/58/8":"Asia/Yekaterinburg","173/59/8":"Europe/Moscow","174/59/8":"Asia/Yekaterinburg","174/60/8":"Europe/Moscow","174/61/8":"Europe/Moscow","175/61/8":"Asia/Yekaterinburg","174/62/8":"Europe/Moscow","173/63/8":"Europe/Moscow","174/63/8":"Asia/Yekaterinburg","172/64/8":"Europe/Moscow","173/64/8":"Asia/Yekaterinburg","171/65/8":"Europe/Moscow","172/65/8":"Asia/Yekaterinburg","170/66/8":"Europe/Moscow","171/66/8":"Asia/Yekaterinburg","170/67/8":"Asia/Yekaterinburg","170/68/8":"Asia/Yekaterinburg","170/69/8":"Asia/Yekaterinburg","170/70/8":"Asia/Yekaterinburg","170/71/8":"Asia/Yekaterinburg","165/72/8":"Europe/Moscow","166/72/8":"Europe/Moscow","167/72/8":"Europe/Moscow","168/72/8":"Asia/Yekaterinburg","169/72/8":"Asia/Yekaterinburg","170/72/8":"Asia/Yekaterinburg","164/73/8":"Europe/Moscow","165/73/8":"Asia/Yekaterinburg","166/73/8":"Asia/Yekaterinburg","167/73/8":"Asia/Yekaterinburg","165/74/8":"Europe/Kirov","166/74/8":"Asia/Yekaterinburg","165/75/8":"Europe/Kirov","166/75/8":"Asia/Yekaterinburg","166/76/8":"Asia/Yekaterinburg","166/77/8":"Asia/Yekaterinburg","166/78/8":"Europe/Samara","166/79/8":"Asia/Yekaterinburg","165/80/8":"Europe/Moscow","166/80/8":"Asia/Yekaterinburg","165/81/8":"Europe/Moscow","166/81/8":"Asia/Yekaterinburg","165/82/8":"Asia/Yekaterinburg","166/82/8":"Asia/Yekaterinburg","164/83/8":"Europe/Samara","165/83/8":"Asia/Yekaterinburg","158/96/8":"Europe/Istanbul","159/96/8":"Asia/Yerevan","105/96/8":"Atlantic/Azores","105/97/8":"Atlantic/Azores","106/97/8":"Atlantic/Azores","107/97/8":"Atlantic/Azores","108/97/8":"Atlantic/Azores","107/98/8":"Atlantic/Azores","108/98/8":"Atlantic/Azores","109/98/8":"Atlantic/Azores","110/98/8":"Atlantic/Azores","109/99/8":"Atlantic/Azores","110/99/8":"Atlantic/Azores","81/103/8":"Atlantic/Bermuda","82/103/8":"Atlantic/Bermuda","118/105/8":"Atlantic/Canary","115/106/8":"Atlantic/Canary","116/106/8":"Atlantic/Canary","117/106/8":"Atlantic/Canary","118/106/8":"Atlantic/Canary","114/107/8":"Atlantic/Canary","115/107/8":"Atlantic/Canary","116/107/8":"Atlantic/Canary","117/107/8":"Atlantic/Canary","109/115/8":"Atlantic/Cape_Verde","110/115/8":"Atlantic/Cape_Verde","111/115/8":"Atlantic/Cape_Verde","110/116/8":"Atlantic/Cape_Verde","111/116/8":"Atlantic/Cape_Verde","112/116/8":"Atlantic/Cape_Verde","110/117/8":"Atlantic/Cape_Verde","111/117/8":"Atlantic/Cape_Verde","122/70/8":"Atlantic/Faroe","123/70/8":"Atlantic/Faroe","122/71/8":"Atlantic/Faroe","123/71/8":"Atlantic/Faroe","122/72/8":"Atlantic/Faroe","123/72/8":"Atlantic/Faroe","116/102/8":"Atlantic/Madeira","115/103/8":"Atlantic/Madeira","116/103/8":"Atlantic/Madeira","116/105/8":"Atlantic/Madeira","116/64/8":"Atlantic/Reykjavik","111/65/8":"Atlantic/Reykjavik","112/65/8":"Atlantic/Reykjavik","113/65/8":"Atlantic/Reykjavik","114/65/8":"Atlantic/Reykjavik","115/65/8":"Atlantic/Reykjavik","116/65/8":"Atlantic/Reykjavik","117/65/8":"Atlantic/Reykjavik","111/66/8":"Atlantic/Reykjavik","112/66/8":"Atlantic/Reykjavik","113/66/8":"Atlantic/Reykjavik","114/66/8":"Atlantic/Reykjavik","115/66/8":"Atlantic/Reykjavik","116/66/8":"Atlantic/Reykjavik","117/66/8":"Atlantic/Reykjavik","111/67/8":"Atlantic/Reykjavik","112/67/8":"Atlantic/Reykjavik","113/67/8":"Atlantic/Reykjavik","114/67/8":"Atlantic/Reykjavik","115/67/8":"Atlantic/Reykjavik","116/67/8":"Atlantic/Reykjavik","112/68/8":"Atlantic/Reykjavik","113/68/8":"Atlantic/Reykjavik","114/68/8":"Atlantic/Reykjavik","114/62/8":"Atlantic/Reykjavik","115/62/8":"Atlantic/Reykjavik","111/63/8":"Atlantic/Reykjavik","112/63/8":"Atlantic/Reykjavik","114/63/8":"Atlantic/Reykjavik","115/63/8":"Atlantic/Reykjavik","116/63/8":"Atlantic/Reykjavik","117/63/8":"Atlantic/Reykjavik","110/64/8":"Atlantic/Reykjavik","111/64/8":"Atlantic/Reykjavik","112/64/8":"Atlantic/Reykjavik","113/64/8":"Atlantic/Reykjavik","114/64/8":"Atlantic/Reykjavik","115/64/8":"Atlantic/Reykjavik","117/64/8":"Atlantic/Reykjavik","118/64/8":"Atlantic/Reykjavik","110/65/8":"Atlantic/Reykjavik","118/65/8":"Atlantic/Reykjavik","110/66/8":"Atlantic/Reykjavik","118/66/8":"Atlantic/Reykjavik","110/67/8":"Atlantic/Reykjavik","117/67/8":"Atlantic/Reykjavik","118/67/8":"Atlantic/Reykjavik","110/68/8":"Atlantic/Reykjavik","111/68/8":"Atlantic/Reykjavik","115/68/8":"Atlantic/Reykjavik","116/68/8":"Atlantic/Reykjavik","117/68/8":"Atlantic/Reykjavik","111/69/8":"Atlantic/Reykjavik","112/69/8":"Atlantic/Reykjavik","113/69/8":"Atlantic/Reykjavik","114/69/8":"Atlantic/Reykjavik","115/69/8":"Atlantic/Reykjavik","98/173/8":"Atlantic/South_Georgia","100/173/8":"Atlantic/South_Georgia","101/173/8":"Atlantic/South_Georgia","102/173/8":"Atlantic/South_Georgia","100/174/8":"Atlantic/South_Georgia","101/174/8":"Atlantic/South_Georgia","102/174/8":"Atlantic/South_Georgia","102/175/8":"Atlantic/South_Georgia","107/176/8":"Atlantic/South_Georgia","108/176/8":"Atlantic/South_Georgia","107/177/8":"Atlantic/South_Georgia","108/177/8":"Atlantic/South_Georgia","109/177/8":"Atlantic/South_Georgia","108/178/8":"Atlantic/South_Georgia","109/178/8":"Atlantic/South_Georgia","108/179/8":"Atlantic/South_Georgia","109/179/8":"Atlantic/South_Georgia","108/180/8":"Atlantic/South_Georgia","109/180/8":"Atlantic/South_Georgia","108/181/8":"Atlantic/South_Georgia","117/133/8":"Atlantic/St_Helena","123/139/8":"Atlantic/St_Helena","124/139/8":"Atlantic/St_Helena","118/156/8":"Atlantic/St_Helena","119/156/8":"Atlantic/St_Helena","120/159/8":"Atlantic/St_Helena","121/159/8":"Atlantic/St_Helena","85/171/8":"Atlantic/Stanley","84/170/8":"Atlantic/Stanley","85/170/8":"Atlantic/Stanley","86/170/8":"Atlantic/Stanley","87/170/8":"Atlantic/Stanley","84/171/8":"Atlantic/Stanley","86/171/8":"Atlantic/Stanley","87/171/8":"Atlantic/Stanley","84/172/8":"Atlantic/Stanley","85/172/8":"Atlantic/Stanley","86/172/8":"Atlantic/Stanley","220/148/8":"Australia/Adelaide","221/148/8":"Australia/Adelaide","222/148/8":"Australia/Adelaide","223/148/8":"Australia/Adelaide","224/148/8":"Australia/Adelaide","225/148/8":"Australia/Adelaide","226/148/8":"Australia/Adelaide","227/148/8":"Australia/Adelaide","220/149/8":"Australia/Adelaide","221/149/8":"Australia/Adelaide","222/149/8":"Australia/Adelaide","223/149/8":"Australia/Adelaide","224/149/8":"Australia/Adelaide","225/149/8":"Australia/Adelaide","226/149/8":"Australia/Adelaide","227/149/8":"Australia/Adelaide","220/150/8":"Australia/Adelaide","221/150/8":"Australia/Adelaide","222/150/8":"Australia/Adelaide","223/150/8":"Australia/Adelaide","224/150/8":"Australia/Adelaide","225/150/8":"Australia/Adelaide","226/150/8":"Australia/Adelaide","227/150/8":"Australia/Adelaide","222/151/8":"Australia/Adelaide","223/151/8":"Australia/Adelaide","224/151/8":"Australia/Adelaide","225/151/8":"Australia/Adelaide","226/151/8":"Australia/Adelaide","227/151/8":"Australia/Adelaide","224/152/8":"Australia/Adelaide","225/152/8":"Australia/Adelaide","226/152/8":"Australia/Adelaide","227/152/8":"Australia/Adelaide","225/153/8":"Australia/Adelaide","226/153/8":"Australia/Adelaide","227/153/8":"Australia/Adelaide","225/154/8":"Australia/Adelaide","226/154/8":"Australia/Adelaide","227/154/8":"Australia/Adelaide","219/147/8":"Australia/Perth","220/147/8":"Australia/Adelaide","221/147/8":"Australia/Adelaide","222/147/8":"Australia/Adelaide","223/147/8":"Australia/Adelaide","224/147/8":"Australia/Adelaide","225/147/8":"Australia/Adelaide","226/147/8":"Australia/Adelaide","227/147/8":"Australia/Adelaide","228/147/8":"Australia/Brisbane","219/148/8":"Australia/Perth","228/148/8":"Australia/Brisbane","219/149/8":"Australia/Perth","228/149/8":"Australia/Brisbane","219/150/8":"Australia/Perth","228/150/8":"Australia/Sydney","219/151/8":"Australia/Eucla","220/151/8":"Australia/Adelaide","221/151/8":"Australia/Adelaide","228/151/8":"Australia/Sydney","221/152/8":"Australia/Adelaide","222/152/8":"Australia/Adelaide","223/152/8":"Australia/Adelaide","228/152/8":"Australia/Sydney","223/153/8":"Australia/Adelaide","224/153/8":"Australia/Adelaide","228/153/8":"Australia/Sydney","223/154/8":"Australia/Adelaide","224/154/8":"Australia/Adelaide","228/154/8":"Australia/Melbourne","224/155/8":"Australia/Adelaide","225/155/8":"Australia/Adelaide","226/155/8":"Australia/Adelaide","227/155/8":"Australia/Adelaide","228/155/8":"Australia/Melbourne","225/156/8":"Australia/Adelaide","227/156/8":"Australia/Adelaide","228/156/8":"Australia/Melbourne","227/157/8":"Australia/Adelaide","228/157/8":"Australia/Melbourne","229/135/8":"Australia/Brisbane","229/136/8":"Australia/Brisbane","229/137/8":"Australia/Brisbane","229/138/8":"Australia/Brisbane","230/138/8":"Australia/Brisbane","229/139/8":"Australia/Brisbane","230/139/8":"Australia/Brisbane","229/140/8":"Australia/Brisbane","230/140/8":"Australia/Brisbane","231/140/8":"Australia/Brisbane","227/141/8":"Australia/Brisbane","228/141/8":"Australia/Brisbane","229/141/8":"Australia/Brisbane","230/141/8":"Australia/Brisbane","231/141/8":"Australia/Brisbane","227/142/8":"Australia/Brisbane","228/142/8":"Australia/Brisbane","229/142/8":"Australia/Brisbane","230/142/8":"Australia/Brisbane","231/142/8":"Australia/Brisbane","232/142/8":"Australia/Brisbane","227/143/8":"Australia/Brisbane","228/143/8":"Australia/Brisbane","229/143/8":"Australia/Brisbane","230/143/8":"Australia/Brisbane","231/143/8":"Australia/Brisbane","232/143/8":"Australia/Brisbane","233/143/8":"Australia/Brisbane","227/144/8":"Australia/Brisbane","228/144/8":"Australia/Brisbane","229/144/8":"Australia/Brisbane","230/144/8":"Australia/Brisbane","231/144/8":"Australia/Brisbane","232/144/8":"Australia/Brisbane","233/144/8":"Australia/Brisbane","234/144/8":"Australia/Brisbane","227/145/8":"Australia/Brisbane","228/145/8":"Australia/Brisbane","229/145/8":"Australia/Brisbane","230/145/8":"Australia/Brisbane","231/145/8":"Australia/Brisbane","232/145/8":"Australia/Brisbane","233/145/8":"Australia/Brisbane","234/145/8":"Australia/Brisbane","227/146/8":"Australia/Brisbane","228/146/8":"Australia/Brisbane","229/146/8":"Australia/Brisbane","230/146/8":"Australia/Brisbane","231/146/8":"Australia/Brisbane","232/146/8":"Australia/Brisbane","233/146/8":"Australia/Brisbane","234/146/8":"Australia/Brisbane","235/146/8":"Australia/Brisbane","229/147/8":"Australia/Brisbane","230/147/8":"Australia/Brisbane","231/147/8":"Australia/Brisbane","232/147/8":"Australia/Brisbane","233/147/8":"Australia/Brisbane","234/147/8":"Australia/Brisbane","235/147/8":"Australia/Brisbane","236/147/8":"Australia/Brisbane","229/148/8":"Australia/Brisbane","230/148/8":"Australia/Brisbane","231/148/8":"Australia/Brisbane","232/148/8":"Australia/Brisbane","233/148/8":"Australia/Brisbane","234/148/8":"Australia/Brisbane","235/148/8":"Australia/Brisbane","229/134/8":"Pacific/Port_Moresby","230/134/8":"Australia/Brisbane","228/135/8":"Australia/Brisbane","230/135/8":"Australia/Brisbane","228/136/8":"Australia/Brisbane","230/136/8":"Australia/Brisbane","228/137/8":"Australia/Brisbane","230/137/8":"Australia/Brisbane","231/137/8":"Australia/Brisbane","228/138/8":"Australia/Brisbane","231/138/8":"Australia/Brisbane","226/139/8":"Australia/Brisbane","227/139/8":"Australia/Brisbane","228/139/8":"Australia/Brisbane","231/139/8":"Australia/Brisbane","232/139/8":"Australia/Brisbane","226/140/8":"Australia/Brisbane","227/140/8":"Australia/Brisbane","228/140/8":"Australia/Brisbane","232/140/8":"Australia/Brisbane","226/141/8":"Australia/Brisbane","232/141/8":"Australia/Brisbane","233/141/8":"Australia/Brisbane","226/142/8":"Australia/Brisbane","233/142/8":"Australia/Brisbane","234/142/8":"Australia/Brisbane","226/143/8":"Australia/Brisbane","234/143/8":"Australia/Brisbane","235/143/8":"Australia/Brisbane","236/143/8":"Australia/Brisbane","226/144/8":"Australia/Brisbane","235/144/8":"Australia/Brisbane","236/144/8":"Australia/Brisbane","226/145/8":"Australia/Brisbane","235/145/8":"Australia/Brisbane","236/145/8":"Australia/Brisbane","237/145/8":"Australia/Brisbane","226/146/8":"Australia/Brisbane","236/146/8":"Australia/Brisbane","237/146/8":"Australia/Brisbane","237/147/8":"Australia/Brisbane","236/148/8":"Australia/Brisbane","237/148/8":"Australia/Brisbane","229/149/8":"Australia/Brisbane","230/149/8":"Australia/Brisbane","231/149/8":"Australia/Brisbane","232/149/8":"Australia/Brisbane","233/149/8":"Australia/Brisbane","234/149/8":"Australia/Sydney","235/149/8":"Australia/Sydney","236/149/8":"Australia/Sydney","230/158/8":"Australia/Currie","230/159/8":"Australia/Hobart","221/136/8":"Australia/Darwin","221/137/8":"Australia/Darwin","222/137/8":"Australia/Darwin","223/137/8":"Australia/Darwin","224/137/8":"Australia/Darwin","220/138/8":"Australia/Darwin","221/138/8":"Australia/Darwin","222/138/8":"Australia/Darwin","223/138/8":"Australia/Darwin","220/139/8":"Australia/Darwin","221/139/8":"Australia/Darwin","222/139/8":"Australia/Darwin","223/139/8":"Australia/Darwin","224/139/8":"Australia/Darwin","220/140/8":"Australia/Darwin","221/140/8":"Australia/Darwin","222/140/8":"Australia/Darwin","223/140/8":"Australia/Darwin","224/140/8":"Australia/Darwin","225/140/8":"Australia/Darwin","220/141/8":"Australia/Darwin","221/141/8":"Australia/Darwin","222/141/8":"Australia/Darwin","223/141/8":"Australia/Darwin","224/141/8":"Australia/Darwin","225/141/8":"Australia/Darwin","220/142/8":"Australia/Darwin","221/142/8":"Australia/Darwin","222/142/8":"Australia/Darwin","223/142/8":"Australia/Darwin","224/142/8":"Australia/Darwin","225/142/8":"Australia/Darwin","220/143/8":"Australia/Darwin","221/143/8":"Australia/Darwin","222/143/8":"Australia/Darwin","223/143/8":"Australia/Darwin","224/143/8":"Australia/Darwin","225/143/8":"Australia/Darwin","220/144/8":"Australia/Darwin","221/144/8":"Australia/Darwin","222/144/8":"Australia/Darwin","223/144/8":"Australia/Darwin","224/144/8":"Australia/Darwin","225/144/8":"Australia/Darwin","220/145/8":"Australia/Darwin","221/145/8":"Australia/Darwin","222/145/8":"Australia/Darwin","223/145/8":"Australia/Darwin","224/145/8":"Australia/Darwin","225/145/8":"Australia/Darwin","220/146/8":"Australia/Darwin","221/146/8":"Australia/Darwin","222/146/8":"Australia/Darwin","223/146/8":"Australia/Darwin","224/146/8":"Australia/Darwin","225/146/8":"Australia/Darwin","220/135/8":"Australia/Darwin","221/135/8":"Australia/Darwin","222/135/8":"Australia/Darwin","224/135/8":"Australia/Darwin","225/135/8":"Australia/Darwin","220/136/8":"Australia/Darwin","222/136/8":"Australia/Darwin","223/136/8":"Australia/Darwin","224/136/8":"Australia/Darwin","225/136/8":"Australia/Darwin","219/137/8":"Australia/Darwin","220/137/8":"Australia/Darwin","225/137/8":"Australia/Darwin","219/138/8":"Australia/Perth","224/138/8":"Australia/Darwin","225/138/8":"Australia/Darwin","219/139/8":"Australia/Perth","225/139/8":"Australia/Darwin","219/140/8":"Australia/Perth","219/141/8":"Australia/Perth","219/142/8":"Australia/Perth","219/143/8":"Australia/Perth","219/144/8":"Australia/Perth","219/145/8":"Australia/Perth","219/146/8":"Australia/Perth","217/151/8":"Australia/Perth","218/151/8":"Australia/Eucla","217/152/8":"Australia/Eucla","218/152/8":"Australia/Eucla","219/152/8":"Australia/Eucla","232/160/8":"Australia/Hobart","232/161/8":"Australia/Hobart","231/158/8":"Australia/Melbourne","232/158/8":"Australia/Hobart","233/158/8":"Australia/Hobart","231/159/8":"Australia/Hobart","232/159/8":"Australia/Hobart","233/159/8":"Australia/Hobart","230/160/8":"Australia/Hobart","231/160/8":"Australia/Hobart","233/160/8":"Australia/Hobart","231/161/8":"Australia/Hobart","233/161/8":"Australia/Hobart","231/162/8":"Australia/Hobart","232/162/8":"Australia/Hobart","233/162/8":"Australia/Hobart","240/151/8":"Australia/Lord_Howe","241/151/8":"Australia/Lord_Howe","241/152/8":"Australia/Lord_Howe","229/155/8":"Australia/Melbourne","229/156/8":"Australia/Melbourne","230/156/8":"Australia/Melbourne","231/156/8":"Australia/Melbourne","232/156/8":"Australia/Melbourne","229/153/8":"Australia/Sydney","229/154/8":"Australia/Melbourne","230/154/8":"Australia/Sydney","230/155/8":"Australia/Melbourne","231/155/8":"Australia/Melbourne","232/155/8":"Australia/Melbourne","233/155/8":"Australia/Sydney","233/156/8":"Australia/Melbourne","234/156/8":"Australia/Sydney","229/157/8":"Australia/Melbourne","230/157/8":"Australia/Melbourne","231/157/8":"Australia/Melbourne","232/157/8":"Australia/Melbourne","233/157/8":"Australia/Melbourne","234/157/8":"Australia/Melbourne","229/158/8":"Australia/Melbourne","217/139/8":"Australia/Perth","218/139/8":"Australia/Perth","216/140/8":"Australia/Perth","217/140/8":"Australia/Perth","218/140/8":"Australia/Perth","215/141/8":"Australia/Perth","216/141/8":"Australia/Perth","217/141/8":"Australia/Perth","218/141/8":"Australia/Perth","215/142/8":"Australia/Perth","216/142/8":"Australia/Perth","217/142/8":"Australia/Perth","218/142/8":"Australia/Perth","210/143/8":"Australia/Perth","211/143/8":"Australia/Perth","212/143/8":"Australia/Perth","213/143/8":"Australia/Perth","214/143/8":"Australia/Perth","215/143/8":"Australia/Perth","216/143/8":"Australia/Perth","217/143/8":"Australia/Perth","218/143/8":"Australia/Perth","209/144/8":"Australia/Perth","210/144/8":"Australia/Perth","211/144/8":"Australia/Perth","212/144/8":"Australia/Perth","213/144/8":"Australia/Perth","214/144/8":"Australia/Perth","215/144/8":"Australia/Perth","216/144/8":"Australia/Perth","217/144/8":"Australia/Perth","218/144/8":"Australia/Perth","209/145/8":"Australia/Perth","210/145/8":"Australia/Perth","211/145/8":"Australia/Perth","212/145/8":"Australia/Perth","213/145/8":"Australia/Perth","214/145/8":"Australia/Perth","215/145/8":"Australia/Perth","216/145/8":"Australia/Perth","217/145/8":"Australia/Perth","218/145/8":"Australia/Perth","209/146/8":"Australia/Perth","210/146/8":"Australia/Perth","211/146/8":"Australia/Perth","212/146/8":"Australia/Perth","213/146/8":"Australia/Perth","214/146/8":"Australia/Perth","215/146/8":"Australia/Perth","216/146/8":"Australia/Perth","217/146/8":"Australia/Perth","218/146/8":"Australia/Perth","209/147/8":"Australia/Perth","210/147/8":"Australia/Perth","211/147/8":"Australia/Perth","212/147/8":"Australia/Perth","213/147/8":"Australia/Perth","214/147/8":"Australia/Perth","215/147/8":"Australia/Perth","216/147/8":"Australia/Perth","217/147/8":"Australia/Perth","218/147/8":"Australia/Perth","210/148/8":"Australia/Perth","211/148/8":"Australia/Perth","212/148/8":"Australia/Perth","213/148/8":"Australia/Perth","214/148/8":"Australia/Perth","215/148/8":"Australia/Perth","216/148/8":"Australia/Perth","217/148/8":"Australia/Perth","218/148/8":"Australia/Perth","210/149/8":"Australia/Perth","211/149/8":"Australia/Perth","212/149/8":"Australia/Perth","213/149/8":"Australia/Perth","214/149/8":"Australia/Perth","215/149/8":"Australia/Perth","216/149/8":"Australia/Perth","217/149/8":"Australia/Perth","218/149/8":"Australia/Perth","210/150/8":"Australia/Perth","211/150/8":"Australia/Perth","212/150/8":"Australia/Perth","213/150/8":"Australia/Perth","214/150/8":"Australia/Perth","215/150/8":"Australia/Perth","216/150/8":"Australia/Perth","217/150/8":"Australia/Perth","218/150/8":"Australia/Perth","211/151/8":"Australia/Perth","212/151/8":"Australia/Perth","213/151/8":"Australia/Perth","214/151/8":"Australia/Perth","215/151/8":"Australia/Perth","216/151/8":"Australia/Perth","211/152/8":"Australia/Perth","212/152/8":"Australia/Perth","213/152/8":"Australia/Perth","214/152/8":"Australia/Perth","215/152/8":"Australia/Perth","211/153/8":"Australia/Perth","212/153/8":"Australia/Perth","215/153/8":"Australia/Perth","217/137/8":"Australia/Perth","218/137/8":"Australia/Perth","215/138/8":"Australia/Perth","216/138/8":"Australia/Perth","217/138/8":"Australia/Perth","218/138/8":"Australia/Perth","214/139/8":"Australia/Perth","215/139/8":"Australia/Perth","216/139/8":"Australia/Perth","214/140/8":"Australia/Perth","215/140/8":"Australia/Perth","214/141/8":"Australia/Perth","209/142/8":"Australia/Perth","210/142/8":"Australia/Perth","211/142/8":"Australia/Perth","212/142/8":"Australia/Perth","213/142/8":"Australia/Perth","214/142/8":"Australia/Perth","208/143/8":"Australia/Perth","209/143/8":"Australia/Perth","208/144/8":"Australia/Perth","208/145/8":"Australia/Perth","208/146/8":"Australia/Perth","208/147/8":"Australia/Perth","208/148/8":"Australia/Perth","209/148/8":"Australia/Perth","208/149/8":"Australia/Perth","209/149/8":"Australia/Perth","209/150/8":"Australia/Perth","209/151/8":"Australia/Perth","210/151/8":"Australia/Perth","209/152/8":"Australia/Perth","210/152/8":"Australia/Perth","216/152/8":"Australia/Perth","209/153/8":"Australia/Perth","210/153/8":"Australia/Perth","213/153/8":"Australia/Perth","214/153/8":"Australia/Perth","216/153/8":"Australia/Perth","209/154/8":"Australia/Perth","210/154/8":"Australia/Perth","211/154/8":"Australia/Perth","212/154/8":"Australia/Perth","213/154/8":"Australia/Perth","214/154/8":"Australia/Perth","215/154/8":"Australia/Perth","216/154/8":"Australia/Perth","229/150/8":"Australia/Sydney","230/150/8":"Australia/Sydney","231/150/8":"Australia/Sydney","232/150/8":"Australia/Sydney","233/150/8":"Australia/Sydney","234/150/8":"Australia/Sydney","235/150/8":"Australia/Sydney","229/151/8":"Australia/Sydney","230/151/8":"Australia/Sydney","231/151/8":"Australia/Sydney","232/151/8":"Australia/Sydney","233/151/8":"Australia/Sydney","234/151/8":"Australia/Sydney","235/151/8":"Australia/Sydney","229/152/8":"Australia/Sydney","230/152/8":"Australia/Sydney","231/152/8":"Australia/Sydney","232/152/8":"Australia/Sydney","233/152/8":"Australia/Sydney","234/152/8":"Australia/Sydney","235/152/8":"Australia/Sydney","230/153/8":"Australia/Sydney","231/153/8":"Australia/Sydney","232/153/8":"Australia/Sydney","233/153/8":"Australia/Sydney","234/153/8":"Australia/Sydney","231/154/8":"Australia/Sydney","232/154/8":"Australia/Sydney","233/154/8":"Australia/Sydney","234/154/8":"Australia/Sydney","237/149/8":"Australia/Sydney","236/150/8":"Australia/Sydney","237/150/8":"Australia/Sydney","236/151/8":"Australia/Sydney","237/151/8":"Australia/Sydney","236/152/8":"Australia/Sydney","235/153/8":"Australia/Sydney","236/153/8":"Australia/Sydney","235/154/8":"Australia/Sydney","234/155/8":"Australia/Sydney","235/155/8":"Australia/Sydney","131/84/8":"Europe/Amsterdam","131/82/8":"Europe/Amsterdam","132/82/8":"Europe/Amsterdam","133/82/8":"Europe/Berlin","130/83/8":"Europe/Amsterdam","131/83/8":"Europe/Amsterdam","132/83/8":"Europe/Amsterdam","133/83/8":"Europe/Berlin","130/84/8":"Europe/Amsterdam","132/84/8":"Europe/Amsterdam","133/84/8":"Europe/Berlin","130/85/8":"Europe/Brussels","131/85/8":"Europe/Brussels","132/85/8":"Europe/Berlin","129/94/8":"Europe/Paris","159/88/8":"Europe/Volgograd","160/88/8":"Europe/Astrakhan","160/89/8":"Europe/Moscow","161/89/8":"Europe/Astrakhan","160/90/8":"Europe/Moscow","161/90/8":"Europe/Astrakhan","162/90/8":"Europe/Astrakhan","163/90/8":"Europe/Astrakhan","160/91/8":"Europe/Moscow","161/91/8":"Europe/Astrakhan","162/91/8":"Europe/Astrakhan","144/96/8":"Europe/Athens","145/96/8":"Europe/Athens","143/97/8":"Europe/Athens","144/97/8":"Europe/Athens","145/97/8":"Europe/Athens","144/98/8":"Europe/Athens","145/98/8":"Europe/Athens","145/99/8":"Europe/Athens","146/99/8":"Europe/Athens","145/100/8":"Europe/Athens","146/100/8":"Europe/Athens","143/95/8":"Europe/Skopje","144/95/8":"Europe/Sofia","145/95/8":"Europe/Sofia","146/95/8":"Europe/Sofia","141/96/8":"Europe/Tirane","142/96/8":"Europe/Tirane","143/96/8":"Europe/Athens","146/96/8":"Europe/Istanbul","141/97/8":"Europe/Rome","142/97/8":"Europe/Athens","146/97/8":"Europe/Athens","142/98/8":"Europe/Athens","143/98/8":"Europe/Athens","146/98/8":"Europe/Athens","147/98/8":"Europe/Istanbul","142/99/8":"Europe/Athens","143/99/8":"Europe/Athens","144/99/8":"Europe/Athens","147/99/8":"Europe/Istanbul","143/100/8":"Europe/Athens","144/100/8":"Europe/Athens","147/100/8":"Europe/Athens","148/100/8":"Europe/Istanbul","149/100/8":"Europe/Istanbul","144/101/8":"Europe/Athens","145/101/8":"Europe/Athens","146/101/8":"Europe/Athens","147/101/8":"Europe/Athens","142/92/8":"Europe/Belgrade","141/90/8":"Europe/Budapest","142/90/8":"Europe/Budapest","141/91/8":"Europe/Belgrade","142/91/8":"Europe/Belgrade","143/91/8":"Europe/Bucharest","141/92/8":"Europe/Sarajevo","143/92/8":"Europe/Belgrade","144/92/8":"Europe/Bucharest","141/93/8":"Europe/Sarajevo","142/93/8":"Europe/Belgrade","143/93/8":"Europe/Belgrade","144/93/8":"Europe/Sofia","142/94/8":"Europe/Belgrade","143/94/8":"Europe/Belgrade","144/94/8":"Europe/Sofia","142/95/8":"Europe/Tirane","134/82/8":"Europe/Berlin","135/82/8":"Europe/Berlin","136/82/8":"Europe/Berlin","137/82/8":"Europe/Berlin","134/83/8":"Europe/Berlin","135/83/8":"Europe/Berlin","136/83/8":"Europe/Berlin","137/83/8":"Europe/Berlin","134/84/8":"Europe/Berlin","135/84/8":"Europe/Berlin","136/84/8":"Europe/Berlin","137/84/8":"Europe/Berlin","133/85/8":"Europe/Berlin","134/85/8":"Europe/Berlin","135/85/8":"Europe/Berlin","136/85/8":"Europe/Berlin","133/86/8":"Europe/Berlin","134/86/8":"Europe/Berlin","135/86/8":"Europe/Berlin","134/87/8":"Europe/Berlin","135/87/8":"Europe/Berlin","134/88/8":"Europe/Berlin","135/88/8":"Europe/Berlin","136/88/8":"Europe/Berlin","133/80/8":"Europe/Copenhagen","134/80/8":"Europe/Copenhagen","133/81/8":"Europe/Berlin","134/81/8":"Europe/Berlin","135/81/8":"Europe/Berlin","136/81/8":"Europe/Copenhagen","137/81/8":"Europe/Berlin","138/81/8":"Europe/Copenhagen","138/82/8":"Europe/Warsaw","138/83/8":"Europe/Warsaw","138/84/8":"Europe/Warsaw","137/85/8":"Europe/Berlin","138/85/8":"Europe/Berlin","132/86/8":"Europe/Berlin","136/86/8":"Europe/Berlin","137/86/8":"Europe/Prague","132/87/8":"Europe/Paris","133/87/8":"Europe/Berlin","136/87/8":"Europe/Berlin","137/87/8":"Europe/Prague","133/88/8":"Europe/Paris","137/88/8":"Europe/Berlin","133/89/8":"Europe/Zurich","134/89/8":"Europe/Zurich","135/89/8":"Europe/Berlin","136/89/8":"Europe/Vienna","137/89/8":"Europe/Vienna","140/87/8":"Europe/Prague","141/87/8":"Europe/Bratislava","142/87/8":"Europe/Warsaw","143/87/8":"Europe/Warsaw","144/87/8":"Europe/Kiev","139/88/8":"Europe/Vienna","140/88/8":"Europe/Bratislava","141/88/8":"Europe/Bratislava","142/88/8":"Europe/Bratislava","143/88/8":"Europe/Budapest","140/89/8":"Europe/Budapest","141/89/8":"Europe/Budapest","129/85/8":"Europe/Paris","129/86/8":"Europe/Paris","130/86/8":"Europe/Paris","131/86/8":"Europe/Brussels","131/87/8":"Europe/Paris","144/90/8":"Europe/Bucharest","145/90/8":"Europe/Bucharest","146/90/8":"Europe/Bucharest","144/91/8":"Europe/Bucharest","145/91/8":"Europe/Bucharest","146/91/8":"Europe/Bucharest","145/92/8":"Europe/Bucharest","146/92/8":"Europe/Bucharest","144/88/8":"Europe/Uzhgorod","146/88/8":"Europe/Kiev","147/88/8":"Europe/Kiev","143/89/8":"Europe/Budapest","144/89/8":"Europe/Bucharest","145/89/8":"Europe/Bucharest","146/89/8":"Europe/Bucharest","147/89/8":"Europe/Bucharest","143/90/8":"Europe/Bucharest","147/90/8":"Europe/Bucharest","148/90/8":"Europe/Chisinau","147/91/8":"Europe/Bucharest","148/91/8":"Europe/Kiev","149/91/8":"Europe/Kiev","147/92/8":"Europe/Bucharest","148/92/8":"Europe/Bucharest","149/92/8":"Europe/Bucharest","145/93/8":"Europe/Sofia","146/93/8":"Europe/Sofia","147/93/8":"Europe/Sofia","148/93/8":"Europe/Sofia","142/89/8":"Europe/Budapest","139/89/8":"Europe/Vienna","139/90/8":"Europe/Ljubljana","140/90/8":"Europe/Budapest","140/91/8":"Europe/Zagreb","148/88/8":"Europe/Kiev","148/89/8":"Europe/Chisinau","149/89/8":"Europe/Kiev","149/90/8":"Europe/Kiev","134/79/8":"Europe/Copenhagen","134/77/8":"Europe/Copenhagen","135/77/8":"Europe/Copenhagen","136/77/8":"Europe/Stockholm","133/78/8":"Europe/Copenhagen","134/78/8":"Europe/Copenhagen","135/78/8":"Europe/Copenhagen","136/78/8":"Europe/Stockholm","133/79/8":"Europe/Copenhagen","135/79/8":"Europe/Copenhagen","136/79/8":"Europe/Copenhagen","137/79/8":"Europe/Stockholm","135/80/8":"Europe/Copenhagen","136/80/8":"Europe/Copenhagen","137/80/8":"Europe/Stockholm","138/80/8":"Europe/Copenhagen","139/80/8":"Europe/Copenhagen","121/82/8":"Europe/Dublin","122/83/8":"Europe/Dublin","121/84/8":"Europe/Dublin","121/80/8":"Europe/Dublin","122/80/8":"Europe/Dublin","123/80/8":"Europe/London","120/81/8":"Europe/Dublin","121/81/8":"Europe/Dublin","122/81/8":"Europe/London","123/81/8":"Europe/London","120/82/8":"Europe/Dublin","122/82/8":"Europe/Dublin","123/82/8":"Europe/Dublin","120/83/8":"Europe/Dublin","121/83/8":"Europe/Dublin","123/83/8":"Europe/Dublin","120/84/8":"Europe/Dublin","122/84/8":"Europe/Dublin","123/84/8":"Europe/Dublin","120/85/8":"Europe/Dublin","121/85/8":"Europe/Dublin","122/85/8":"Europe/Dublin","126/86/8":"Europe/London","125/87/8":"Europe/Paris","126/87/8":"Europe/Paris","147/58/8":"Europe/Helsinki","147/59/8":"Europe/Helsinki","146/60/8":"Europe/Helsinki","147/60/8":"Europe/Helsinki","145/61/8":"Europe/Helsinki","146/61/8":"Europe/Helsinki","147/61/8":"Europe/Helsinki","145/62/8":"Europe/Helsinki","146/62/8":"Europe/Helsinki","147/62/8":"Europe/Helsinki","146/63/8":"Europe/Helsinki","147/63/8":"Europe/Helsinki","146/64/8":"Europe/Helsinki","147/64/8":"Europe/Helsinki","146/65/8":"Europe/Helsinki","147/65/8":"Europe/Helsinki","148/65/8":"Europe/Helsinki","146/66/8":"Europe/Helsinki","147/66/8":"Europe/Helsinki","148/66/8":"Europe/Helsinki","145/67/8":"Europe/Helsinki","146/67/8":"Europe/Helsinki","147/67/8":"Europe/Helsinki","148/67/8":"Europe/Helsinki","145/68/8":"Europe/Helsinki","146/68/8":"Europe/Helsinki","147/68/8":"Europe/Helsinki","148/68/8":"Europe/Helsinki","143/69/8":"Europe/Helsinki","144/69/8":"Europe/Helsinki","145/69/8":"Europe/Helsinki","146/69/8":"Europe/Helsinki","147/69/8":"Europe/Helsinki","148/69/8":"Europe/Helsinki","143/70/8":"Europe/Helsinki","144/70/8":"Europe/Helsinki","145/70/8":"Europe/Helsinki","146/70/8":"Europe/Helsinki","147/70/8":"Europe/Helsinki","148/70/8":"Europe/Helsinki","143/71/8":"Europe/Helsinki","144/71/8":"Europe/Helsinki","145/71/8":"Europe/Helsinki","146/71/8":"Europe/Helsinki","147/71/8":"Europe/Helsinki","148/71/8":"Europe/Helsinki","143/72/8":"Europe/Helsinki","144/72/8":"Europe/Helsinki","145/72/8":"Europe/Helsinki","146/72/8":"Europe/Helsinki","147/72/8":"Europe/Helsinki","144/73/8":"Europe/Helsinki","145/73/8":"Europe/Helsinki","146/73/8":"Europe/Helsinki","146/57/8":"Europe/Oslo","147/57/8":"Europe/Helsinki","148/57/8":"Europe/Oslo","142/58/8":"Europe/Oslo","143/58/8":"Europe/Oslo","146/58/8":"Europe/Helsinki","148/58/8":"Europe/Helsinki","142/59/8":"Europe/Oslo","143/59/8":"Europe/Helsinki","144/59/8":"Europe/Oslo","145/59/8":"Europe/Oslo","146/59/8":"Europe/Helsinki","148/59/8":"Europe/Moscow","143/60/8":"Europe/Stockholm","144/60/8":"Europe/Helsinki","145/60/8":"Europe/Helsinki","148/60/8":"Europe/Moscow","144/61/8":"Europe/Stockholm","148/61/8":"Europe/Helsinki","149/61/8":"Europe/Moscow","144/62/8":"Europe/Stockholm","148/62/8":"Europe/Helsinki","149/62/8":"Europe/Moscow","144/63/8":"Europe/Stockholm","145/63/8":"Europe/Helsinki","148/63/8":"Europe/Helsinki","144/64/8":"Europe/Stockholm","145/64/8":"Europe/Helsinki","148/64/8":"Europe/Helsinki","149/64/8":"Europe/Moscow","145/65/8":"Europe/Helsinki","149/65/8":"Europe/Moscow","144/66/8":"Europe/Stockholm","145/66/8":"Europe/Helsinki","149/66/8":"Europe/Moscow","144/67/8":"Europe/Helsinki","149/67/8":"Europe/Moscow","142/68/8":"Europe/Stockholm","143/68/8":"Europe/Helsinki","144/68/8":"Europe/Helsinki","149/68/8":"Europe/Helsinki","142/69/8":"Europe/Helsinki","149/69/8":"Europe/Helsinki","150/69/8":"Europe/Moscow","142/70/8":"Europe/Helsinki","149/70/8":"Europe/Helsinki","150/70/8":"Europe/Moscow","142/71/8":"Europe/Helsinki","149/71/8":"Europe/Helsinki","142/72/8":"Europe/Helsinki","148/72/8":"Europe/Helsinki","149/72/8":"Europe/Moscow","142/73/8":"Europe/Mariehamn","143/73/8":"Europe/Helsinki","147/73/8":"Europe/Helsinki","148/73/8":"Europe/Moscow","142/74/8":"Europe/Mariehamn","143/74/8":"Europe/Helsinki","144/74/8":"Europe/Helsinki","145/74/8":"Europe/Helsinki","146/74/8":"Europe/Tallinn","147/74/8":"Europe/Moscow","143/75/8":"Europe/Tallinn","124/81/8":"Europe/London","125/81/8":"Europe/London","124/82/8":"Europe/Isle_of_Man","125/82/8":"Europe/London","152/95/8":"Europe/Istanbul","147/96/8":"Europe/Istanbul","148/96/8":"Europe/Istanbul","149/96/8":"Europe/Istanbul","150/96/8":"Europe/Istanbul","151/96/8":"Europe/Istanbul","152/96/8":"Europe/Istanbul","153/96/8":"Europe/Istanbul","154/96/8":"Europe/Istanbul","155/96/8":"Europe/Istanbul","156/96/8":"Europe/Istanbul","157/96/8":"Europe/Istanbul","147/97/8":"Europe/Istanbul","148/97/8":"Europe/Istanbul","149/97/8":"Europe/Istanbul","150/97/8":"Europe/Istanbul","151/97/8":"Europe/Istanbul","152/97/8":"Europe/Istanbul","153/97/8":"Europe/Istanbul","154/97/8":"Europe/Istanbul","155/97/8":"Europe/Istanbul","156/97/8":"Europe/Istanbul","157/97/8":"Europe/Istanbul","158/97/8":"Europe/Istanbul","148/98/8":"Europe/Istanbul","149/98/8":"Europe/Istanbul","150/98/8":"Europe/Istanbul","151/98/8":"Europe/Istanbul","152/98/8":"Europe/Istanbul","153/98/8":"Europe/Istanbul","154/98/8":"Europe/Istanbul","155/98/8":"Europe/Istanbul","156/98/8":"Europe/Istanbul","157/98/8":"Europe/Istanbul","158/98/8":"Europe/Istanbul","148/99/8":"Europe/Istanbul","151/99/8":"Europe/Istanbul","152/99/8":"Europe/Istanbul","153/99/8":"Europe/Istanbul","147/94/8":"Europe/Sofia","151/94/8":"Europe/Istanbul","152/94/8":"Europe/Istanbul","153/94/8":"Europe/Istanbul","147/95/8":"Europe/Istanbul","148/95/8":"Europe/Istanbul","149/95/8":"Europe/Istanbul","150/95/8":"Europe/Istanbul","151/95/8":"Europe/Istanbul","153/95/8":"Europe/Istanbul","154/95/8":"Europe/Istanbul","155/95/8":"Europe/Istanbul","156/95/8":"Europe/Istanbul","149/99/8":"Europe/Istanbul","150/99/8":"Europe/Istanbul","150/100/8":"Europe/Istanbul","151/100/8":"Europe/Istanbul","152/100/8":"Europe/Istanbul","126/88/8":"Europe/Paris","141/80/8":"Europe/Warsaw","142/80/8":"Europe/Kaliningrad","143/80/8":"Europe/Vilnius","144/80/8":"Europe/Vilnius","141/81/8":"Europe/Warsaw","142/81/8":"Europe/Kaliningrad","143/81/8":"Europe/Kaliningrad","144/81/8":"Europe/Vilnius","146/85/8":"Europe/Kiev","150/85/8":"Europe/Kiev","151/85/8":"Europe/Kiev","146/86/8":"Europe/Kiev","147/86/8":"Europe/Kiev","148/86/8":"Europe/Kiev","149/86/8":"Europe/Kiev","150/86/8":"Europe/Kiev","151/86/8":"Europe/Kiev","152/86/8":"Europe/Kiev","145/87/8":"Europe/Kiev","146/87/8":"Europe/Kiev","147/87/8":"Europe/Kiev","148/87/8":"Europe/Kiev","149/87/8":"Europe/Kiev","150/87/8":"Europe/Kiev","151/87/8":"Europe/Kiev","152/87/8":"Europe/Kiev","153/87/8":"Europe/Kiev","154/87/8":"Europe/Kiev","149/88/8":"Europe/Kiev","150/88/8":"Europe/Kiev","151/88/8":"Europe/Kiev","154/88/8":"Europe/Kiev","155/88/8":"Europe/Kiev","150/89/8":"Europe/Kiev","151/89/8":"Europe/Kiev","144/84/8":"Europe/Warsaw","145/84/8":"Europe/Minsk","146/84/8":"Europe/Minsk","147/84/8":"Europe/Minsk","148/84/8":"Europe/Minsk","149/84/8":"Europe/Minsk","150/84/8":"Europe/Kiev","151/84/8":"Europe/Kiev","152/84/8":"Europe/Moscow","144/85/8":"Europe/Warsaw","145/85/8":"Europe/Kiev","147/85/8":"Europe/Kiev","148/85/8":"Europe/Kiev","149/85/8":"Europe/Kiev","152/85/8":"Europe/Kiev","153/85/8":"Europe/Moscow","144/86/8":"Europe/Warsaw","145/86/8":"Europe/Kiev","153/86/8":"Europe/Kiev","154/86/8":"Europe/Moscow","155/86/8":"Europe/Moscow","155/87/8":"Europe/Kiev","156/87/8":"Europe/Moscow","145/88/8":"Europe/Kiev","152/88/8":"Europe/Kiev","153/88/8":"Europe/Kiev","156/88/8":"Europe/Moscow","152/89/8":"Europe/Kiev","153/89/8":"Europe/Zaporozhye","154/89/8":"Europe/Kiev","155/89/8":"Europe/Moscow","156/89/8":"Europe/Moscow","150/90/8":"Europe/Kiev","151/90/8":"Europe/Kiev","152/90/8":"Europe/Kiev","153/90/8":"Europe/Zaporozhye","154/90/8":"Europe/Moscow","155/90/8":"Europe/Moscow","150/91/8":"Europe/Kiev","151/91/8":"Europe/Simferopol","152/91/8":"Europe/Simferopol","153/91/8":"Europe/Simferopol","164/75/8":"Europe/Kirov","162/76/8":"Europe/Kirov","163/76/8":"Europe/Kirov","163/77/8":"Europe/Kirov","161/72/8":"Europe/Moscow","162/72/8":"Europe/Moscow","160/73/8":"Europe/Moscow","161/73/8":"Europe/Kirov","162/73/8":"Europe/Moscow","160/74/8":"Europe/Moscow","161/74/8":"Europe/Kirov","162/74/8":"Europe/Kirov","163/74/8":"Europe/Moscow","164/74/8":"Europe/Kirov","161/75/8":"Europe/Moscow","162/75/8":"Europe/Kirov","163/75/8":"Europe/Kirov","160/76/8":"Europe/Moscow","161/76/8":"Europe/Kirov","164/76/8":"Europe/Kirov","165/76/8":"Europe/Samara","160/77/8":"Europe/Moscow","161/77/8":"Europe/Moscow","162/77/8":"Europe/Kirov","164/77/8":"Europe/Kirov","161/78/8":"Europe/Moscow","162/78/8":"Europe/Moscow","163/78/8":"Europe/Kirov","164/78/8":"Europe/Samara","163/79/8":"Europe/Moscow","164/79/8":"Europe/Moscow","122/96/8":"Europe/Lisbon","121/94/8":"Europe/Madrid","122/94/8":"Europe/Madrid","121/95/8":"Europe/Lisbon","122/95/8":"Europe/Lisbon","123/95/8":"Europe/Madrid","121/96/8":"Europe/Lisbon","123/96/8":"Europe/Madrid","121/97/8":"Europe/Lisbon","122/97/8":"Europe/Lisbon","123/97/8":"Europe/Madrid","121/98/8":"Europe/Lisbon","122/98/8":"Europe/Lisbon","123/98/8":"Europe/Madrid","121/99/8":"Europe/Lisbon","122/99/8":"Europe/Lisbon","137/90/8":"Europe/Vienna","138/90/8":"Europe/Vienna","137/91/8":"Europe/Rome","138/91/8":"Europe/Ljubljana","139/91/8":"Europe/Zagreb","123/77/8":"Europe/London","124/77/8":"Europe/London","123/78/8":"Europe/London","124/78/8":"Europe/London","125/78/8":"Europe/London","124/79/8":"Europe/London","125/79/8":"Europe/London","124/80/8":"Europe/London","125/80/8":"Europe/London","126/80/8":"Europe/London","126/81/8":"Europe/London","126/82/8":"Europe/London","127/82/8":"Europe/London","125/83/8":"Europe/London","126/83/8":"Europe/London","127/83/8":"Europe/London","125/84/8":"Europe/London","126/84/8":"Europe/London","127/84/8":"Europe/London","125/85/8":"Europe/London","126/85/8":"Europe/London","127/85/8":"Europe/London","127/72/8":"Europe/London","126/73/8":"Europe/London","127/73/8":"Europe/London","125/74/8":"Europe/London","126/74/8":"Europe/London","127/74/8":"Europe/London","123/75/8":"Europe/London","124/75/8":"Europe/London","125/75/8":"Europe/London","126/75/8":"Europe/London","127/75/8":"Europe/London","121/76/8":"Europe/London","122/76/8":"Europe/London","123/76/8":"Europe/London","124/76/8":"Europe/London","125/76/8":"Europe/London","126/76/8":"Europe/London","118/77/8":"Europe/London","121/77/8":"Europe/London","122/77/8":"Europe/London","125/77/8":"Europe/London","126/77/8":"Europe/London","127/77/8":"Europe/London","122/78/8":"Europe/London","126/78/8":"Europe/London","122/79/8":"Europe/London","123/79/8":"Europe/London","126/79/8":"Europe/London","127/79/8":"Europe/London","127/80/8":"Europe/London","127/81/8":"Europe/London","128/81/8":"Europe/London","128/82/8":"Europe/London","124/83/8":"Europe/London","128/83/8":"Europe/London","129/83/8":"Europe/London","124/84/8":"Europe/London","128/84/8":"Europe/London","129/84/8":"Europe/London","123/85/8":"Europe/London","124/85/8":"Europe/London","128/85/8":"Europe/London","123/86/8":"Europe/London","124/86/8":"Europe/London","125/86/8":"Europe/London","127/86/8":"Europe/London","128/86/8":"Europe/Paris","123/87/8":"Europe/London","124/87/8":"Europe/London","123/94/8":"Europe/Madrid","124/94/8":"Europe/Madrid","125/94/8":"Europe/Madrid","124/95/8":"Europe/Madrid","125/95/8":"Europe/Madrid","126/95/8":"Europe/Madrid","127/95/8":"Europe/Madrid","128/95/8":"Europe/Madrid","124/96/8":"Europe/Madrid","125/96/8":"Europe/Madrid","126/96/8":"Europe/Madrid","127/96/8":"Europe/Madrid","124/97/8":"Europe/Madrid","125/97/8":"Europe/Madrid","126/97/8":"Europe/Madrid","127/97/8":"Europe/Madrid","124/98/8":"Europe/Madrid","125/98/8":"Europe/Madrid","126/98/8":"Europe/Madrid","124/99/8":"Europe/Madrid","125/99/8":"Europe/Madrid","121/93/8":"Europe/Madrid","122/93/8":"Europe/Madrid","123/93/8":"Europe/Madrid","124/93/8":"Europe/Madrid","125/93/8":"Europe/Madrid","126/93/8":"Europe/Madrid","127/93/8":"Europe/Paris","126/94/8":"Europe/Madrid","127/94/8":"Europe/Madrid","128/94/8":"Europe/Madrid","130/94/8":"Europe/Paris","129/95/8":"Europe/Madrid","130/95/8":"Europe/Madrid","128/96/8":"Europe/Madrid","129/96/8":"Europe/Madrid","130/96/8":"Europe/Madrid","131/96/8":"Europe/Madrid","128/97/8":"Europe/Madrid","129/97/8":"Europe/Madrid","130/97/8":"Europe/Madrid","131/97/8":"Europe/Madrid","127/98/8":"Europe/Madrid","128/98/8":"Europe/Madrid","129/98/8":"Europe/Madrid","123/99/8":"Europe/Madrid","126/99/8":"Europe/Madrid","127/99/8":"Europe/Madrid","137/100/8":"Europe/Rome","138/100/8":"Europe/Malta","141/73/8":"Europe/Stockholm","141/74/8":"Europe/Stockholm","142/75/8":"Europe/Stockholm","147/81/8":"Europe/Minsk","148/81/8":"Europe/Minsk","147/82/8":"Europe/Minsk","148/82/8":"Europe/Minsk","149/82/8":"Europe/Minsk","146/83/8":"Europe/Minsk","147/83/8":"Europe/Minsk","148/83/8":"Europe/Minsk","149/83/8":"Europe/Minsk","147/79/8":"Europe/Riga","148/79/8":"Europe/Moscow","149/79/8":"Europe/Moscow","146/80/8":"Europe/Vilnius","147/80/8":"Europe/Minsk","148/80/8":"Europe/Minsk","149/80/8":"Europe/Minsk","150/80/8":"Europe/Moscow","145/81/8":"Europe/Vilnius","146/81/8":"Europe/Minsk","149/81/8":"Europe/Minsk","150/81/8":"Europe/Moscow","144/82/8":"Europe/Warsaw","145/82/8":"Europe/Minsk","146/82/8":"Europe/Minsk","150/82/8":"Europe/Minsk","151/82/8":"Europe/Moscow","144/83/8":"Europe/Warsaw","145/83/8":"Europe/Minsk","150/83/8":"Europe/Minsk","151/83/8":"Europe/Moscow","133/93/8":"Europe/Paris","162/59/8":"Europe/Moscow","169/20/8":"Europe/Moscow","170/20/8":"Europe/Moscow","169/21/8":"Europe/Moscow","170/21/8":"Europe/Moscow","172/21/8":"Europe/Moscow","173/21/8":"Europe/Moscow","167/22/8":"Europe/Moscow","168/22/8":"Europe/Moscow","169/22/8":"Europe/Moscow","170/22/8":"Europe/Moscow","166/23/8":"Europe/Moscow","167/23/8":"Europe/Moscow","168/23/8":"Europe/Moscow","169/23/8":"Europe/Moscow","170/23/8":"Europe/Moscow","171/23/8":"Europe/Moscow","163/24/8":"Europe/Moscow","164/24/8":"Europe/Moscow","166/24/8":"Europe/Moscow","167/24/8":"Europe/Moscow","168/24/8":"Europe/Moscow","169/24/8":"Europe/Moscow","170/24/8":"Europe/Moscow","171/24/8":"Europe/Moscow","172/24/8":"Europe/Moscow","173/24/8":"Europe/Moscow","174/24/8":"Europe/Moscow","161/25/8":"Europe/Moscow","162/25/8":"Europe/Moscow","163/25/8":"Europe/Moscow","164/25/8":"Europe/Moscow","166/25/8":"Europe/Moscow","167/25/8":"Europe/Moscow","168/25/8":"Europe/Moscow","169/25/8":"Europe/Moscow","170/25/8":"Europe/Moscow","171/25/8":"Europe/Moscow","172/25/8":"Europe/Moscow","173/25/8":"Europe/Moscow","160/26/8":"Europe/Moscow","161/26/8":"Europe/Moscow","162/26/8":"Europe/Moscow","163/26/8":"Europe/Moscow","164/26/8":"Europe/Moscow","165/26/8":"Europe/Moscow","166/26/8":"Europe/Moscow","167/26/8":"Europe/Moscow","168/26/8":"Europe/Moscow","169/26/8":"Europe/Moscow","170/26/8":"Europe/Moscow","171/26/8":"Europe/Moscow","161/27/8":"Europe/Moscow","162/27/8":"Europe/Moscow","163/27/8":"Europe/Moscow","164/27/8":"Europe/Moscow","165/27/8":"Europe/Moscow","166/27/8":"Europe/Moscow","167/27/8":"Europe/Moscow","168/27/8":"Europe/Moscow","169/27/8":"Europe/Moscow","170/27/8":"Europe/Moscow","162/28/8":"Europe/Moscow","163/28/8":"Europe/Moscow","164/28/8":"Europe/Moscow","165/28/8":"Europe/Moscow","168/28/8":"Europe/Moscow","169/28/8":"Europe/Moscow","170/28/8":"Europe/Moscow","169/29/8":"Europe/Moscow","175/40/8":"Europe/Moscow","176/40/8":"Europe/Moscow","174/41/8":"Europe/Moscow","175/41/8":"Europe/Moscow","176/41/8":"Europe/Moscow","170/42/8":"Europe/Moscow","171/42/8":"Europe/Moscow","172/42/8":"Europe/Moscow","173/42/8":"Europe/Moscow","174/42/8":"Europe/Moscow","169/43/8":"Europe/Moscow","170/43/8":"Europe/Moscow","171/43/8":"Europe/Moscow","172/43/8":"Europe/Moscow","169/44/8":"Europe/Moscow","170/44/8":"Europe/Moscow","171/44/8":"Europe/Moscow","168/45/8":"Europe/Moscow","169/45/8":"Europe/Moscow","170/45/8":"Europe/Moscow","168/46/8":"Europe/Moscow","169/46/8":"Europe/Moscow","167/47/8":"Europe/Moscow","168/47/8":"Europe/Moscow","169/47/8":"Europe/Moscow","167/48/8":"Europe/Moscow","168/48/8":"Europe/Moscow","166/49/8":"Europe/Moscow","167/49/8":"Europe/Moscow","166/50/8":"Europe/Moscow","167/50/8":"Europe/Moscow","165/51/8":"Europe/Moscow","166/51/8":"Europe/Moscow","167/51/8":"Europe/Moscow","165/52/8":"Europe/Moscow","166/52/8":"Europe/Moscow","165/53/8":"Europe/Moscow","166/53/8":"Europe/Moscow","165/54/8":"Europe/Moscow","166/54/8":"Europe/Moscow","167/54/8":"Europe/Moscow","166/55/8":"Europe/Moscow","167/55/8":"Europe/Moscow","169/56/8":"Europe/Moscow","170/57/8":"Europe/Moscow","151/58/8":"Europe/Moscow","171/58/8":"Europe/Moscow","172/58/8":"Europe/Moscow","149/59/8":"Europe/Moscow","150/59/8":"Europe/Moscow","151/59/8":"Europe/Moscow","152/59/8":"Europe/Moscow","153/59/8":"Europe/Moscow","171/59/8":"Europe/Moscow","172/59/8":"Europe/Moscow","149/60/8":"Europe/Moscow","150/60/8":"Europe/Moscow","151/60/8":"Europe/Moscow","152/60/8":"Europe/Moscow","153/60/8":"Europe/Moscow","154/60/8":"Europe/Moscow","158/60/8":"Europe/Moscow","159/60/8":"Europe/Moscow","165/60/8":"Europe/Moscow","166/60/8":"Europe/Moscow","167/60/8":"Europe/Moscow","168/60/8":"Europe/Moscow","169/60/8":"Europe/Moscow","170/60/8":"Europe/Moscow","171/60/8":"Europe/Moscow","172/60/8":"Europe/Moscow","173/60/8":"Europe/Moscow","150/61/8":"Europe/Moscow","151/61/8":"Europe/Moscow","152/61/8":"Europe/Moscow","153/61/8":"Europe/Moscow","154/61/8":"Europe/Moscow","155/61/8":"Europe/Moscow","156/61/8":"Europe/Moscow","157/61/8":"Europe/Moscow","158/61/8":"Europe/Moscow","159/61/8":"Europe/Moscow","160/61/8":"Europe/Moscow","164/61/8":"Europe/Moscow","165/61/8":"Europe/Moscow","166/61/8":"Europe/Moscow","167/61/8":"Europe/Moscow","168/61/8":"Europe/Moscow","169/61/8":"Europe/Moscow","170/61/8":"Europe/Moscow","171/61/8":"Europe/Moscow","172/61/8":"Europe/Moscow","173/61/8":"Europe/Moscow","150/62/8":"Europe/Moscow","151/62/8":"Europe/Moscow","152/62/8":"Europe/Moscow","153/62/8":"Europe/Moscow","154/62/8":"Europe/Moscow","155/62/8":"Europe/Moscow","156/62/8":"Europe/Moscow","157/62/8":"Europe/Moscow","158/62/8":"Europe/Moscow","159/62/8":"Europe/Moscow","160/62/8":"Europe/Moscow","161/62/8":"Europe/Moscow","162/62/8":"Europe/Moscow","163/62/8":"Europe/Moscow","164/62/8":"Europe/Moscow","165/62/8":"Europe/Moscow","166/62/8":"Europe/Moscow","167/62/8":"Europe/Moscow","168/62/8":"Europe/Moscow","169/62/8":"Europe/Moscow","170/62/8":"Europe/Moscow","171/62/8":"Europe/Moscow","172/62/8":"Europe/Moscow","173/62/8":"Europe/Moscow","149/63/8":"Europe/Moscow","150/63/8":"Europe/Moscow","151/63/8":"Europe/Moscow","152/63/8":"Europe/Moscow","153/63/8":"Europe/Moscow","154/63/8":"Europe/Moscow","155/63/8":"Europe/Moscow","156/63/8":"Europe/Moscow","157/63/8":"Europe/Moscow","158/63/8":"Europe/Moscow","159/63/8":"Europe/Moscow","160/63/8":"Europe/Moscow","161/63/8":"Europe/Moscow","162/63/8":"Europe/Moscow","163/63/8":"Europe/Moscow","164/63/8":"Europe/Moscow","165/63/8":"Europe/Moscow","166/63/8":"Europe/Moscow","167/63/8":"Europe/Moscow","168/63/8":"Europe/Moscow","169/63/8":"Europe/Moscow","170/63/8":"Europe/Moscow","171/63/8":"Europe/Moscow","172/63/8":"Europe/Moscow","150/64/8":"Europe/Moscow","151/64/8":"Europe/Moscow","152/64/8":"Europe/Moscow","153/64/8":"Europe/Moscow","154/64/8":"Europe/Moscow","155/64/8":"Europe/Moscow","156/64/8":"Europe/Moscow","157/64/8":"Europe/Moscow","158/64/8":"Europe/Moscow","159/64/8":"Europe/Moscow","160/64/8":"Europe/Moscow","161/64/8":"Europe/Moscow","162/64/8":"Europe/Moscow","163/64/8":"Europe/Moscow","164/64/8":"Europe/Moscow","165/64/8":"Europe/Moscow","166/64/8":"Europe/Moscow","167/64/8":"Europe/Moscow","168/64/8":"Europe/Moscow","169/64/8":"Europe/Moscow","170/64/8":"Europe/Moscow","171/64/8":"Europe/Moscow","150/65/8":"Europe/Moscow","151/65/8":"Europe/Moscow","152/65/8":"Europe/Moscow","153/65/8":"Europe/Moscow","154/65/8":"Europe/Moscow","155/65/8":"Europe/Moscow","156/65/8":"Europe/Moscow","157/65/8":"Europe/Moscow","158/65/8":"Europe/Moscow","159/65/8":"Europe/Moscow","160/65/8":"Europe/Moscow","161/65/8":"Europe/Moscow","162/65/8":"Europe/Moscow","163/65/8":"Europe/Moscow","164/65/8":"Europe/Moscow","165/65/8":"Europe/Moscow","166/65/8":"Europe/Moscow","167/65/8":"Europe/Moscow","168/65/8":"Europe/Moscow","169/65/8":"Europe/Moscow","170/65/8":"Europe/Moscow","150/66/8":"Europe/Moscow","151/66/8":"Europe/Moscow","152/66/8":"Europe/Moscow","153/66/8":"Europe/Moscow","154/66/8":"Europe/Moscow","155/66/8":"Europe/Moscow","156/66/8":"Europe/Moscow","157/66/8":"Europe/Moscow","158/66/8":"Europe/Moscow","159/66/8":"Europe/Moscow","160/66/8":"Europe/Moscow","161/66/8":"Europe/Moscow","162/66/8":"Europe/Moscow","163/66/8":"Europe/Moscow","164/66/8":"Europe/Moscow","165/66/8":"Europe/Moscow","166/66/8":"Europe/Moscow","167/66/8":"Europe/Moscow","168/66/8":"Europe/Moscow","169/66/8":"Europe/Moscow","150/67/8":"Europe/Moscow","151/67/8":"Europe/Moscow","152/67/8":"Europe/Moscow","153/67/8":"Europe/Moscow","154/67/8":"Europe/Moscow","155/67/8":"Europe/Moscow","156/67/8":"Europe/Moscow","157/67/8":"Europe/Moscow","158/67/8":"Europe/Moscow","159/67/8":"Europe/Moscow","160/67/8":"Europe/Moscow","161/67/8":"Europe/Moscow","162/67/8":"Europe/Moscow","163/67/8":"Europe/Moscow","164/67/8":"Europe/Moscow","165/67/8":"Europe/Moscow","166/67/8":"Europe/Moscow","167/67/8":"Europe/Moscow","168/67/8":"Europe/Moscow","169/67/8":"Europe/Moscow","150/68/8":"Europe/Moscow","151/68/8":"Europe/Moscow","152/68/8":"Europe/Moscow","153/68/8":"Europe/Moscow","154/68/8":"Europe/Moscow","155/68/8":"Europe/Moscow","156/68/8":"Europe/Moscow","157/68/8":"Europe/Moscow","158/68/8":"Europe/Moscow","159/68/8":"Europe/Moscow","160/68/8":"Europe/Moscow","161/68/8":"Europe/Moscow","162/68/8":"Europe/Moscow","163/68/8":"Europe/Moscow","164/68/8":"Europe/Moscow","165/68/8":"Europe/Moscow","166/68/8":"Europe/Moscow","167/68/8":"Europe/Moscow","168/68/8":"Europe/Moscow","169/68/8":"Europe/Moscow","151/69/8":"Europe/Moscow","152/69/8":"Europe/Moscow","153/69/8":"Europe/Moscow","154/69/8":"Europe/Moscow","155/69/8":"Europe/Moscow","156/69/8":"Europe/Moscow","157/69/8":"Europe/Moscow","158/69/8":"Europe/Moscow","159/69/8":"Europe/Moscow","160/69/8":"Europe/Moscow","161/69/8":"Europe/Moscow","162/69/8":"Europe/Moscow","163/69/8":"Europe/Moscow","164/69/8":"Europe/Moscow","165/69/8":"Europe/Moscow","166/69/8":"Europe/Moscow","167/69/8":"Europe/Moscow","168/69/8":"Europe/Moscow","169/69/8":"Europe/Moscow","151/70/8":"Europe/Moscow","152/70/8":"Europe/Moscow","153/70/8":"Europe/Moscow","154/70/8":"Europe/Moscow","155/70/8":"Europe/Moscow","156/70/8":"Europe/Moscow","157/70/8":"Europe/Moscow","158/70/8":"Europe/Moscow","159/70/8":"Europe/Moscow","160/70/8":"Europe/Moscow","161/70/8":"Europe/Moscow","162/70/8":"Europe/Moscow","163/70/8":"Europe/Moscow","164/70/8":"Europe/Moscow","165/70/8":"Europe/Moscow","166/70/8":"Europe/Moscow","167/70/8":"Europe/Moscow","168/70/8":"Europe/Moscow","169/70/8":"Europe/Moscow","150/71/8":"Europe/Moscow","151/71/8":"Europe/Moscow","152/71/8":"Europe/Moscow","153/71/8":"Europe/Moscow","154/71/8":"Europe/Moscow","155/71/8":"Europe/Moscow","156/71/8":"Europe/Moscow","157/71/8":"Europe/Moscow","158/71/8":"Europe/Moscow","159/71/8":"Europe/Moscow","160/71/8":"Europe/Moscow","161/71/8":"Europe/Moscow","162/71/8":"Europe/Moscow","163/71/8":"Europe/Moscow","164/71/8":"Europe/Moscow","165/71/8":"Europe/Moscow","166/71/8":"Europe/Moscow","167/71/8":"Europe/Moscow","168/71/8":"Europe/Moscow","169/71/8":"Europe/Moscow","150/72/8":"Europe/Moscow","151/72/8":"Europe/Moscow","152/72/8":"Europe/Moscow","153/72/8":"Europe/Moscow","154/72/8":"Europe/Moscow","155/72/8":"Europe/Moscow","156/72/8":"Europe/Moscow","157/72/8":"Europe/Moscow","158/72/8":"Europe/Moscow","159/72/8":"Europe/Moscow","160/72/8":"Europe/Moscow","163/72/8":"Europe/Moscow","164/72/8":"Europe/Moscow","149/73/8":"Europe/Moscow","150/73/8":"Europe/Moscow","151/73/8":"Europe/Moscow","152/73/8":"Europe/Moscow","153/73/8":"Europe/Moscow","154/73/8":"Europe/Moscow","155/73/8":"Europe/Moscow","156/73/8":"Europe/Moscow","157/73/8":"Europe/Moscow","158/73/8":"Europe/Moscow","159/73/8":"Europe/Moscow","163/73/8":"Europe/Moscow","148/74/8":"Europe/Moscow","149/74/8":"Europe/Moscow","150/74/8":"Europe/Moscow","151/74/8":"Europe/Moscow","152/74/8":"Europe/Moscow","153/74/8":"Europe/Moscow","154/74/8":"Europe/Moscow","155/74/8":"Europe/Moscow","156/74/8":"Europe/Moscow","157/74/8":"Europe/Moscow","158/74/8":"Europe/Moscow","159/74/8":"Europe/Moscow","149/75/8":"Europe/Moscow","150/75/8":"Europe/Moscow","151/75/8":"Europe/Moscow","152/75/8":"Europe/Moscow","153/75/8":"Europe/Moscow","154/75/8":"Europe/Moscow","155/75/8":"Europe/Moscow","156/75/8":"Europe/Moscow","157/75/8":"Europe/Moscow","158/75/8":"Europe/Moscow","159/75/8":"Europe/Moscow","160/75/8":"Europe/Moscow","148/76/8":"Europe/Moscow","149/76/8":"Europe/Moscow","150/76/8":"Europe/Moscow","151/76/8":"Europe/Moscow","152/76/8":"Europe/Moscow","153/76/8":"Europe/Moscow","154/76/8":"Europe/Moscow","155/76/8":"Europe/Moscow","156/76/8":"Europe/Moscow","157/76/8":"Europe/Moscow","158/76/8":"Europe/Moscow","159/76/8":"Europe/Moscow","148/77/8":"Europe/Moscow","149/77/8":"Europe/Moscow","150/77/8":"Europe/Moscow","151/77/8":"Europe/Moscow","152/77/8":"Europe/Moscow","153/77/8":"Europe/Moscow","154/77/8":"Europe/Moscow","155/77/8":"Europe/Moscow","156/77/8":"Europe/Moscow","157/77/8":"Europe/Moscow","158/77/8":"Europe/Moscow","159/77/8":"Europe/Moscow","149/78/8":"Europe/Moscow","150/78/8":"Europe/Moscow","151/78/8":"Europe/Moscow","152/78/8":"Europe/Moscow","153/78/8":"Europe/Moscow","154/78/8":"Europe/Moscow","155/78/8":"Europe/Moscow","156/78/8":"Europe/Moscow","157/78/8":"Europe/Moscow","158/78/8":"Europe/Moscow","159/78/8":"Europe/Moscow","160/78/8":"Europe/Moscow","150/79/8":"Europe/Moscow","151/79/8":"Europe/Moscow","152/79/8":"Europe/Moscow","153/79/8":"Europe/Moscow","154/79/8":"Europe/Moscow","155/79/8":"Europe/Moscow","156/79/8":"Europe/Moscow","157/79/8":"Europe/Moscow","158/79/8":"Europe/Moscow","159/79/8":"Europe/Moscow","160/79/8":"Europe/Moscow","161/79/8":"Europe/Moscow","162/79/8":"Europe/Moscow","151/80/8":"Europe/Moscow","152/80/8":"Europe/Moscow","153/80/8":"Europe/Moscow","154/80/8":"Europe/Moscow","155/80/8":"Europe/Moscow","156/80/8":"Europe/Moscow","157/80/8":"Europe/Moscow","158/80/8":"Europe/Moscow","159/80/8":"Europe/Moscow","160/80/8":"Europe/Moscow","161/80/8":"Europe/Moscow","162/80/8":"Europe/Moscow","163/80/8":"Europe/Moscow","164/80/8":"Europe/Moscow","151/81/8":"Europe/Moscow","152/81/8":"Europe/Moscow","153/81/8":"Europe/Moscow","154/81/8":"Europe/Moscow","155/81/8":"Europe/Moscow","156/81/8":"Europe/Moscow","157/81/8":"Europe/Moscow","158/81/8":"Europe/Moscow","159/81/8":"Europe/Moscow","152/82/8":"Europe/Moscow","153/82/8":"Europe/Moscow","154/82/8":"Europe/Moscow","155/82/8":"Europe/Moscow","156/82/8":"Europe/Moscow","157/82/8":"Europe/Moscow","158/82/8":"Europe/Moscow","159/82/8":"Europe/Moscow","152/83/8":"Europe/Moscow","153/83/8":"Europe/Moscow","154/83/8":"Europe/Moscow","155/83/8":"Europe/Moscow","156/83/8":"Europe/Moscow","157/83/8":"Europe/Moscow","158/83/8":"Europe/Moscow","153/84/8":"Europe/Moscow","154/84/8":"Europe/Moscow","155/84/8":"Europe/Moscow","156/84/8":"Europe/Moscow","157/84/8":"Europe/Moscow","154/85/8":"Europe/Moscow","155/85/8":"Europe/Moscow","156/85/8":"Europe/Moscow","156/86/8":"Europe/Moscow","157/89/8":"Europe/Moscow","156/90/8":"Europe/Moscow","157/90/8":"Europe/Moscow","158/90/8":"Europe/Moscow","159/90/8":"Europe/Moscow","155/91/8":"Europe/Moscow","156/91/8":"Europe/Moscow","157/91/8":"Europe/Moscow","158/91/8":"Europe/Moscow","159/91/8":"Europe/Moscow","156/92/8":"Europe/Moscow","157/92/8":"Europe/Moscow","158/92/8":"Europe/Moscow","159/92/8":"Europe/Moscow","160/92/8":"Europe/Moscow","159/93/8":"Europe/Moscow","160/93/8":"Europe/Moscow","168/19/8":"Europe/Moscow","169/19/8":"Europe/Moscow","170/19/8":"Europe/Moscow","171/19/8":"Europe/Moscow","168/20/8":"Europe/Moscow","171/20/8":"Europe/Moscow","172/20/8":"Europe/Moscow","173/20/8":"Europe/Moscow","174/20/8":"Europe/Moscow","166/21/8":"Europe/Moscow","167/21/8":"Europe/Moscow","168/21/8":"Europe/Moscow","171/21/8":"Europe/Moscow","174/21/8":"Europe/Moscow","163/22/8":"Europe/Moscow","164/22/8":"Europe/Moscow","165/22/8":"Europe/Moscow","166/22/8":"Europe/Moscow","171/22/8":"Europe/Moscow","172/22/8":"Europe/Moscow","173/22/8":"Europe/Moscow","174/22/8":"Europe/Moscow","162/23/8":"Europe/Moscow","163/23/8":"Europe/Moscow","164/23/8":"Europe/Moscow","165/23/8":"Europe/Moscow","172/23/8":"Europe/Moscow","173/23/8":"Europe/Moscow","174/23/8":"Europe/Moscow","175/23/8":"Europe/Moscow","160/24/8":"Europe/Moscow","161/24/8":"Europe/Moscow","162/24/8":"Europe/Moscow","165/24/8":"Europe/Moscow","175/24/8":"Europe/Moscow","159/25/8":"Europe/Moscow","160/25/8":"Europe/Moscow","165/25/8":"Europe/Moscow","174/25/8":"Europe/Moscow","175/25/8":"Europe/Moscow","159/26/8":"Europe/Moscow","172/26/8":"Europe/Moscow","173/26/8":"Europe/Moscow","174/26/8":"Europe/Moscow","159/27/8":"Europe/Moscow","160/27/8":"Europe/Moscow","171/27/8":"Europe/Moscow","172/27/8":"Europe/Moscow","160/28/8":"Europe/Moscow","161/28/8":"Europe/Moscow","166/28/8":"Europe/Moscow","167/28/8":"Europe/Moscow","171/28/8":"Europe/Moscow","161/29/8":"Europe/Moscow","162/29/8":"Europe/Moscow","163/29/8":"Europe/Moscow","164/29/8":"Europe/Moscow","165/29/8":"Europe/Moscow","166/29/8":"Europe/Moscow","167/29/8":"Europe/Moscow","168/29/8":"Europe/Moscow","170/29/8":"Europe/Moscow","171/29/8":"Europe/Moscow","168/30/8":"Europe/Moscow","169/30/8":"Europe/Moscow","170/30/8":"Europe/Moscow","175/38/8":"Europe/Moscow","176/38/8":"Europe/Moscow","174/39/8":"Europe/Moscow","175/39/8":"Europe/Moscow","176/39/8":"Europe/Moscow","177/39/8":"Europe/Moscow","173/40/8":"Europe/Moscow","174/40/8":"Europe/Moscow","177/40/8":"Europe/Moscow","169/41/8":"Europe/Moscow","170/41/8":"Europe/Moscow","171/41/8":"Europe/Moscow","172/41/8":"Europe/Moscow","173/41/8":"Europe/Moscow","177/41/8":"Europe/Moscow","168/42/8":"Europe/Moscow","169/42/8":"Europe/Moscow","175/42/8":"Europe/Moscow","176/42/8":"Europe/Moscow","177/42/8":"Europe/Moscow","168/43/8":"Europe/Moscow","173/43/8":"Europe/Moscow","174/43/8":"Europe/Moscow","175/43/8":"Europe/Moscow","167/44/8":"Europe/Moscow","168/44/8":"Europe/Moscow","172/44/8":"Europe/Moscow","173/44/8":"Europe/Moscow","167/45/8":"Europe/Moscow","171/45/8":"Europe/Moscow","172/45/8":"Europe/Moscow","166/46/8":"Europe/Moscow","167/46/8":"Europe/Moscow","170/46/8":"Europe/Moscow","171/46/8":"Europe/Moscow","166/47/8":"Europe/Moscow","170/47/8":"Europe/Moscow","165/48/8":"Europe/Moscow","166/48/8":"Europe/Moscow","169/48/8":"Europe/Moscow","170/48/8":"Europe/Moscow","165/49/8":"Europe/Moscow","168/49/8":"Europe/Moscow","169/49/8":"Europe/Moscow","164/50/8":"Europe/Moscow","165/50/8":"Europe/Moscow","168/50/8":"Europe/Moscow","164/51/8":"Europe/Moscow","168/51/8":"Europe/Moscow","164/52/8":"Europe/Moscow","167/52/8":"Europe/Moscow","168/52/8":"Europe/Moscow","164/53/8":"Europe/Moscow","167/53/8":"Europe/Moscow","168/53/8":"Europe/Moscow","164/54/8":"Europe/Moscow","168/54/8":"Europe/Moscow","164/55/8":"Europe/Moscow","165/55/8":"Europe/Moscow","168/55/8":"Europe/Moscow","169/55/8":"Europe/Moscow","170/55/8":"Europe/Moscow","150/56/8":"Europe/Oslo","165/56/8":"Europe/Moscow","166/56/8":"Europe/Moscow","167/56/8":"Europe/Moscow","168/56/8":"Europe/Moscow","170/56/8":"Europe/Moscow","171/56/8":"Europe/Moscow","149/57/8":"Europe/Oslo","150/57/8":"Europe/Moscow","151/57/8":"Europe/Moscow","152/57/8":"Europe/Moscow","162/57/8":"Europe/Moscow","163/57/8":"Europe/Moscow","168/57/8":"Europe/Moscow","169/57/8":"Europe/Moscow","171/57/8":"Europe/Moscow","172/57/8":"Europe/Moscow","173/57/8":"Europe/Moscow","149/58/8":"Europe/Moscow","150/58/8":"Europe/Moscow","152/58/8":"Europe/Moscow","153/58/8":"Europe/Moscow","154/58/8":"Europe/Moscow","161/58/8":"Europe/Moscow","162/58/8":"Europe/Moscow","163/58/8":"Europe/Moscow","164/58/8":"Europe/Moscow","166/58/8":"Europe/Moscow","167/58/8":"Europe/Moscow","169/58/8":"Europe/Moscow","170/58/8":"Europe/Moscow","173/58/8":"Europe/Moscow","154/59/8":"Europe/Moscow","155/59/8":"Europe/Moscow","157/59/8":"Europe/Moscow","158/59/8":"Europe/Moscow","159/59/8":"Europe/Moscow","160/59/8":"Europe/Moscow","161/59/8":"Europe/Moscow","163/59/8":"Europe/Moscow","164/59/8":"Europe/Moscow","165/59/8":"Europe/Moscow","166/59/8":"Europe/Moscow","167/59/8":"Europe/Moscow","168/59/8":"Europe/Moscow","169/59/8":"Europe/Moscow","170/59/8":"Europe/Moscow","155/60/8":"Europe/Moscow","156/60/8":"Europe/Moscow","157/60/8":"Europe/Moscow","160/60/8":"Europe/Moscow","161/60/8":"Europe/Moscow","162/60/8":"Europe/Moscow","163/60/8":"Europe/Moscow","164/60/8":"Europe/Moscow","161/61/8":"Europe/Moscow","162/61/8":"Europe/Moscow","163/61/8":"Europe/Moscow","147/75/8":"Europe/Tallinn","148/75/8":"Europe/Moscow","147/76/8":"Europe/Tallinn","147/77/8":"Europe/Tallinn","147/78/8":"Europe/Riga","148/78/8":"Europe/Moscow","165/79/8":"Europe/Samara","160/81/8":"Europe/Moscow","161/81/8":"Europe/Ulyanovsk","162/81/8":"Europe/Ulyanovsk","163/81/8":"Europe/Moscow","164/81/8":"Europe/Moscow","160/82/8":"Europe/Moscow","161/82/8":"Europe/Ulyanovsk","159/83/8":"Europe/Moscow","160/83/8":"Europe/Moscow","161/83/8":"Europe/Ulyanovsk","158/84/8":"Europe/Moscow","159/84/8":"Europe/Moscow","160/84/8":"Europe/Moscow","157/85/8":"Europe/Moscow","158/85/8":"Europe/Volgograd","157/86/8":"Europe/Moscow","157/87/8":"Europe/Moscow","158/87/8":"Europe/Volgograd","157/88/8":"Europe/Moscow","158/88/8":"Europe/Volgograd","158/89/8":"Europe/Moscow","159/89/8":"Europe/Moscow","154/91/8":"Europe/Moscow","153/92/8":"Europe/Simferopol","154/92/8":"Europe/Moscow","155/92/8":"Europe/Moscow","161/92/8":"Europe/Moscow","162/92/8":"Europe/Moscow","155/93/8":"Europe/Moscow","161/93/8":"Europe/Moscow","162/93/8":"Europe/Moscow","161/94/8":"Europe/Moscow","162/94/8":"Europe/Moscow","145/55/8":"Europe/Oslo","146/55/8":"Europe/Oslo","147/55/8":"Europe/Oslo","143/56/8":"Europe/Oslo","144/56/8":"Europe/Oslo","145/56/8":"Europe/Oslo","146/56/8":"Europe/Oslo","147/56/8":"Europe/Oslo","148/56/8":"Europe/Oslo","149/56/8":"Europe/Oslo","141/57/8":"Europe/Oslo","142/57/8":"Europe/Oslo","143/57/8":"Europe/Oslo","144/57/8":"Europe/Oslo","145/57/8":"Europe/Oslo","140/58/8":"Europe/Oslo","141/58/8":"Europe/Oslo","144/58/8":"Europe/Oslo","145/58/8":"Europe/Oslo","139/59/8":"Europe/Oslo","140/59/8":"Europe/Oslo","141/59/8":"Europe/Oslo","138/60/8":"Europe/Oslo","139/60/8":"Europe/Oslo","137/61/8":"Europe/Oslo","138/61/8":"Europe/Oslo","137/62/8":"Europe/Oslo","138/62/8":"Europe/Oslo","137/63/8":"Europe/Oslo","137/64/8":"Europe/Oslo","136/65/8":"Europe/Oslo","137/65/8":"Europe/Oslo","136/66/8":"Europe/Oslo","135/67/8":"Europe/Oslo","136/67/8":"Europe/Oslo","134/68/8":"Europe/Oslo","135/68/8":"Europe/Oslo","134/69/8":"Europe/Oslo","135/69/8":"Europe/Oslo","133/70/8":"Europe/Oslo","134/70/8":"Europe/Oslo","135/70/8":"Europe/Oslo","132/71/8":"Europe/Oslo","133/71/8":"Europe/Oslo","134/71/8":"Europe/Oslo","135/71/8":"Europe/Oslo","131/72/8":"Europe/Oslo","132/72/8":"Europe/Oslo","133/72/8":"Europe/Oslo","134/72/8":"Europe/Oslo","135/72/8":"Europe/Oslo","132/73/8":"Europe/Oslo","133/73/8":"Europe/Oslo","134/73/8":"Europe/Oslo","135/73/8":"Europe/Oslo","132/74/8":"Europe/Oslo","133/74/8":"Europe/Oslo","134/74/8":"Europe/Oslo","135/74/8":"Europe/Oslo","132/75/8":"Europe/Oslo","133/75/8":"Europe/Oslo","134/75/8":"Europe/Oslo","133/76/8":"Europe/Oslo","144/54/8":"Europe/Oslo","145/54/8":"Europe/Oslo","146/54/8":"Europe/Oslo","147/54/8":"Europe/Oslo","148/54/8":"Europe/Oslo","142/55/8":"Europe/Oslo","143/55/8":"Europe/Oslo","144/55/8":"Europe/Oslo","148/55/8":"Europe/Oslo","149/55/8":"Europe/Oslo","150/55/8":"Europe/Oslo","140/56/8":"Europe/Oslo","141/56/8":"Europe/Oslo","142/56/8":"Europe/Oslo","139/57/8":"Europe/Oslo","140/57/8":"Europe/Oslo","138/58/8":"Europe/Oslo","139/58/8":"Europe/Oslo","137/59/8":"Europe/Oslo","138/59/8":"Europe/Oslo","136/60/8":"Europe/Oslo","137/60/8":"Europe/Oslo","140/60/8":"Europe/Oslo","141/60/8":"Europe/Stockholm","142/60/8":"Europe/Stockholm","136/61/8":"Europe/Oslo","139/61/8":"Europe/Oslo","140/61/8":"Europe/Stockholm","136/62/8":"Europe/Oslo","139/62/8":"Europe/Oslo","136/63/8":"Europe/Oslo","138/63/8":"Europe/Oslo","139/63/8":"Europe/Stockholm","135/64/8":"Europe/Oslo","136/64/8":"Europe/Oslo","138/64/8":"Europe/Oslo","139/64/8":"Europe/Stockholm","135/65/8":"Europe/Oslo","138/65/8":"Europe/Stockholm","134/66/8":"Europe/Oslo","135/66/8":"Europe/Oslo","137/66/8":"Europe/Oslo","138/66/8":"Europe/Stockholm","133/67/8":"Europe/Oslo","134/67/8":"Europe/Oslo","137/67/8":"Europe/Oslo","138/67/8":"Europe/Stockholm","133/68/8":"Europe/Oslo","136/68/8":"Europe/Oslo","137/68/8":"Europe/Stockholm","138/68/8":"Europe/Stockholm","132/69/8":"Europe/Oslo","133/69/8":"Europe/Oslo","136/69/8":"Europe/Oslo","131/70/8":"Europe/Oslo","132/70/8":"Europe/Oslo","136/70/8":"Europe/Oslo","130/71/8":"Europe/Oslo","131/71/8":"Europe/Oslo","136/71/8":"Europe/Oslo","130/72/8":"Europe/Oslo","136/72/8":"Europe/Oslo","137/72/8":"Europe/Stockholm","130/73/8":"Europe/Oslo","131/73/8":"Europe/Oslo","136/73/8":"Europe/Oslo","131/74/8":"Europe/Oslo","136/74/8":"Europe/Oslo","131/75/8":"Europe/Oslo","135/75/8":"Europe/Oslo","136/75/8":"Europe/Stockholm","131/76/8":"Europe/Oslo","132/76/8":"Europe/Oslo","134/76/8":"Europe/Oslo","135/76/8":"Europe/Stockholm","132/77/8":"Europe/Oslo","133/77/8":"Europe/Oslo","128/87/8":"Europe/Paris","129/87/8":"Europe/Paris","130/87/8":"Europe/Paris","125/88/8":"Europe/Paris","127/88/8":"Europe/Paris","128/88/8":"Europe/Paris","129/88/8":"Europe/Paris","130/88/8":"Europe/Paris","131/88/8":"Europe/Paris","132/88/8":"Europe/Paris","127/89/8":"Europe/Paris","128/89/8":"Europe/Paris","129/89/8":"Europe/Paris","130/89/8":"Europe/Paris","131/89/8":"Europe/Paris","127/90/8":"Europe/Paris","128/90/8":"Europe/Paris","129/90/8":"Europe/Paris","130/90/8":"Europe/Paris","131/90/8":"Europe/Paris","127/91/8":"Europe/Paris","128/91/8":"Europe/Paris","129/91/8":"Europe/Paris","130/91/8":"Europe/Paris","131/91/8":"Europe/Paris","127/92/8":"Europe/Paris","128/92/8":"Europe/Paris","129/92/8":"Europe/Paris","130/92/8":"Europe/Paris","131/92/8":"Europe/Paris","128/93/8":"Europe/Paris","129/93/8":"Europe/Paris","127/87/8":"Europe/Paris","124/88/8":"Europe/Paris","124/89/8":"Europe/Paris","125/89/8":"Europe/Paris","126/89/8":"Europe/Paris","132/89/8":"Europe/Paris","126/90/8":"Europe/Paris","132/90/8":"Europe/Paris","126/91/8":"Europe/Paris","132/91/8":"Europe/Paris","133/91/8":"Europe/Rome","126/92/8":"Europe/Paris","132/92/8":"Europe/Paris","133/92/8":"Europe/Rome","130/93/8":"Europe/Paris","131/93/8":"Europe/Paris","132/93/8":"Europe/Paris","134/93/8":"Europe/Rome","131/94/8":"Europe/Paris","132/94/8":"Europe/Paris","133/94/8":"Europe/Paris","134/94/8":"Europe/Paris","135/94/8":"Europe/Rome","133/95/8":"Europe/Rome","134/95/8":"Europe/Paris","141/94/8":"Europe/Podgorica","141/95/8":"Europe/Tirane","138/86/8":"Europe/Prague","139/85/8":"Europe/Warsaw","139/86/8":"Europe/Prague","140/86/8":"Europe/Warsaw","141/86/8":"Europe/Warsaw","138/87/8":"Europe/Prague","139/87/8":"Europe/Prague","138/88/8":"Europe/Vienna","144/78/8":"Europe/Riga","145/78/8":"Europe/Riga","146/78/8":"Europe/Riga","145/76/8":"Europe/Tallinn","143/77/8":"Europe/Riga","144/77/8":"Europe/Riga","145/77/8":"Europe/Riga","146/77/8":"Europe/Riga","142/78/8":"Europe/Riga","143/78/8":"Europe/Riga","142/79/8":"Europe/Riga","143/79/8":"Europe/Vilnius","144/79/8":"Europe/Vilnius","145/79/8":"Europe/Vilnius","146/79/8":"Europe/Riga","134/96/8":"Europe/Rome","135/91/8":"Europe/Rome","136/91/8":"Europe/Rome","135/92/8":"Europe/Rome","136/94/8":"Europe/Rome","137/94/8":"Europe/Rome","137/95/8":"Europe/Rome","138/95/8":"Europe/Rome","139/96/8":"Europe/Rome","133/90/8":"Europe/Zurich","134/90/8":"Europe/Zurich","135/90/8":"Europe/Rome","136/90/8":"Europe/Rome","134/91/8":"Europe/Rome","134/92/8":"Europe/Rome","136/92/8":"Europe/Rome","137/92/8":"Europe/Zagreb","135/93/8":"Europe/Rome","136/93/8":"Europe/Rome","137/93/8":"Europe/Rome","138/93/8":"Europe/Zagreb","138/94/8":"Europe/Rome","139/94/8":"Europe/Zagreb","135/95/8":"Europe/Rome","136/95/8":"Europe/Rome","139/95/8":"Europe/Rome","140/95/8":"Europe/Rome","133/96/8":"Europe/Rome","135/96/8":"Europe/Rome","136/96/8":"Europe/Rome","137/96/8":"Europe/Rome","138/96/8":"Europe/Rome","140/96/8":"Europe/Rome","133/97/8":"Europe/Rome","134/97/8":"Europe/Rome","135/97/8":"Europe/Rome","137/97/8":"Europe/Rome","138/97/8":"Europe/Rome","139/97/8":"Europe/Rome","140/97/8":"Europe/Rome","133/98/8":"Europe/Rome","136/98/8":"Europe/Rome","137/98/8":"Europe/Rome","138/98/8":"Europe/Rome","139/98/8":"Europe/Rome","140/98/8":"Europe/Rome","137/99/8":"Europe/Rome","138/99/8":"Europe/Rome","139/99/8":"Europe/Rome","137/101/8":"Europe/Rome","164/82/8":"Europe/Samara","165/77/8":"Europe/Samara","165/78/8":"Europe/Samara","162/82/8":"Europe/Ulyanovsk","163/82/8":"Europe/Samara","162/83/8":"Europe/Samara","163/83/8":"Europe/Samara","162/84/8":"Europe/Samara","139/92/8":"Europe/Sarajevo","140/92/8":"Europe/Sarajevo","139/93/8":"Europe/Zagreb","140/93/8":"Europe/Sarajevo","140/94/8":"Europe/Zagreb","151/92/8":"Europe/Simferopol","152/92/8":"Europe/Simferopol","145/94/8":"Europe/Sofia","146/94/8":"Europe/Sofia","148/94/8":"Europe/Sofia","141/61/8":"Europe/Stockholm","142/61/8":"Europe/Stockholm","143/61/8":"Europe/Stockholm","140/62/8":"Europe/Stockholm","141/62/8":"Europe/Stockholm","142/62/8":"Europe/Stockholm","143/62/8":"Europe/Stockholm","140/63/8":"Europe/Stockholm","141/63/8":"Europe/Stockholm","142/63/8":"Europe/Stockholm","143/63/8":"Europe/Stockholm","140/64/8":"Europe/Stockholm","141/64/8":"Europe/Stockholm","142/64/8":"Europe/Stockholm","143/64/8":"Europe/Stockholm","139/65/8":"Europe/Stockholm","140/65/8":"Europe/Stockholm","141/65/8":"Europe/Stockholm","142/65/8":"Europe/Stockholm","143/65/8":"Europe/Stockholm","144/65/8":"Europe/Stockholm","139/66/8":"Europe/Stockholm","140/66/8":"Europe/Stockholm","141/66/8":"Europe/Stockholm","142/66/8":"Europe/Stockholm","139/67/8":"Europe/Stockholm","140/67/8":"Europe/Stockholm","141/67/8":"Europe/Stockholm","142/67/8":"Europe/Stockholm","139/68/8":"Europe/Stockholm","140/68/8":"Europe/Stockholm","141/68/8":"Europe/Stockholm","137/69/8":"Europe/Stockholm","138/69/8":"Europe/Stockholm","139/69/8":"Europe/Stockholm","140/69/8":"Europe/Stockholm","137/70/8":"Europe/Stockholm","138/70/8":"Europe/Stockholm","139/70/8":"Europe/Stockholm","137/71/8":"Europe/Stockholm","138/71/8":"Europe/Stockholm","139/71/8":"Europe/Stockholm","138/72/8":"Europe/Stockholm","139/72/8":"Europe/Stockholm","137/73/8":"Europe/Stockholm","138/73/8":"Europe/Stockholm","139/73/8":"Europe/Stockholm","137/74/8":"Europe/Stockholm","138/74/8":"Europe/Stockholm","139/74/8":"Europe/Stockholm","140/74/8":"Europe/Stockholm","137/75/8":"Europe/Stockholm","138/75/8":"Europe/Stockholm","139/75/8":"Europe/Stockholm","140/75/8":"Europe/Stockholm","136/76/8":"Europe/Stockholm","137/76/8":"Europe/Stockholm","138/76/8":"Europe/Stockholm","139/76/8":"Europe/Stockholm","137/77/8":"Europe/Stockholm","138/77/8":"Europe/Stockholm","139/77/8":"Europe/Stockholm","137/78/8":"Europe/Stockholm","138/78/8":"Europe/Stockholm","139/78/8":"Europe/Stockholm","143/66/8":"Europe/Stockholm","143/67/8":"Europe/Stockholm","141/69/8":"Europe/Stockholm","140/70/8":"Europe/Stockholm","141/70/8":"Europe/Stockholm","140/71/8":"Europe/Stockholm","140/72/8":"Europe/Stockholm","140/73/8":"Europe/Stockholm","141/75/8":"Europe/Stockholm","140/76/8":"Europe/Stockholm","141/76/8":"Europe/Stockholm","142/76/8":"Europe/Stockholm","140/77/8":"Europe/Stockholm","141/77/8":"Europe/Stockholm","142/77/8":"Europe/Stockholm","140/78/8":"Europe/Stockholm","141/78/8":"Europe/Stockholm","138/79/8":"Europe/Stockholm","139/79/8":"Europe/Stockholm","140/79/8":"Europe/Stockholm","145/75/8":"Europe/Tallinn","146/75/8":"Europe/Tallinn","144/76/8":"Europe/Tallinn","146/76/8":"Europe/Tallinn","144/75/8":"Europe/Tallinn","143/76/8":"Europe/Tallinn","138/89/8":"Europe/Vienna","145/80/8":"Europe/Vilnius","158/86/8":"Europe/Volgograd","159/86/8":"Europe/Volgograd","159/87/8":"Europe/Volgograd","160/87/8":"Europe/Volgograd","159/85/8":"Europe/Volgograd","160/85/8":"Europe/Volgograd","160/86/8":"Europe/Volgograd","139/82/8":"Europe/Warsaw","140/82/8":"Europe/Warsaw","141/82/8":"Europe/Warsaw","142/82/8":"Europe/Warsaw","143/82/8":"Europe/Warsaw","139/83/8":"Europe/Warsaw","140/83/8":"Europe/Warsaw","141/83/8":"Europe/Warsaw","142/83/8":"Europe/Warsaw","143/83/8":"Europe/Warsaw","139/84/8":"Europe/Warsaw","140/84/8":"Europe/Warsaw","141/84/8":"Europe/Warsaw","142/84/8":"Europe/Warsaw","143/84/8":"Europe/Warsaw","140/85/8":"Europe/Warsaw","141/85/8":"Europe/Warsaw","142/85/8":"Europe/Warsaw","143/85/8":"Europe/Warsaw","142/86/8":"Europe/Warsaw","143/86/8":"Europe/Warsaw","140/80/8":"Europe/Warsaw","139/81/8":"Europe/Warsaw","140/81/8":"Europe/Warsaw","138/92/8":"Europe/Zagreb","162/138/8":"Indian/Antananarivo","162/139/8":"Indian/Antananarivo","160/140/8":"Indian/Antananarivo","161/140/8":"Indian/Antananarivo","162/140/8":"Indian/Antananarivo","160/141/8":"Indian/Antananarivo","161/141/8":"Indian/Antananarivo","160/142/8":"Indian/Antananarivo","161/142/8":"Indian/Antananarivo","160/143/8":"Indian/Antananarivo","161/143/8":"Indian/Antananarivo","159/144/8":"Indian/Antananarivo","160/144/8":"Indian/Antananarivo","161/144/8":"Indian/Antananarivo","159/145/8":"Indian/Antananarivo","160/145/8":"Indian/Antananarivo","162/136/8":"Indian/Antananarivo","163/136/8":"Indian/Antananarivo","161/137/8":"Indian/Antananarivo","162/137/8":"Indian/Antananarivo","163/137/8":"Indian/Antananarivo","161/138/8":"Indian/Antananarivo","163/138/8":"Indian/Antananarivo","164/138/8":"Indian/Antananarivo","159/139/8":"Indian/Antananarivo","160/139/8":"Indian/Antananarivo","161/139/8":"Indian/Antananarivo","163/139/8":"Indian/Antananarivo","164/139/8":"Indian/Antananarivo","158/140/8":"Indian/Antananarivo","159/140/8":"Indian/Antananarivo","163/140/8":"Indian/Antananarivo","158/141/8":"Indian/Antananarivo","159/141/8":"Indian/Antananarivo","162/141/8":"Indian/Antananarivo","163/141/8":"Indian/Antananarivo","159/142/8":"Indian/Antananarivo","162/142/8":"Indian/Antananarivo","158/143/8":"Indian/Antananarivo","159/143/8":"Indian/Antananarivo","162/143/8":"Indian/Antananarivo","158/144/8":"Indian/Antananarivo","162/144/8":"Indian/Antananarivo","158/145/8":"Indian/Antananarivo","161/145/8":"Indian/Antananarivo","162/145/8":"Indian/Antananarivo","158/146/8":"Indian/Antananarivo","159/146/8":"Indian/Antananarivo","160/146/8":"Indian/Antananarivo","161/146/8":"Indian/Antananarivo","178/131/8":"Indian/Chagos","179/131/8":"Indian/Chagos","178/132/8":"Indian/Chagos","179/132/8":"Indian/Chagos","179/133/8":"Indian/Chagos","202/135/8":"Indian/Christmas","203/135/8":"Indian/Christmas","196/136/8":"Indian/Cocos","197/136/8":"Indian/Cocos","158/135/8":"Indian/Comoro","158/136/8":"Indian/Comoro","159/136/8":"Indian/Comoro","158/137/8":"Indian/Comoro","159/137/8":"Indian/Mayotte","177/168/8":"Indian/Kerguelen","182/156/8":"Indian/Kerguelen","183/156/8":"Indian/Kerguelen","182/157/8":"Indian/Kerguelen","183/157/8":"Indian/Kerguelen","182/158/8":"Indian/Kerguelen","183/158/8":"Indian/Kerguelen","163/164/8":"Indian/Kerguelen","164/164/8":"Indian/Kerguelen","163/165/8":"Indian/Kerguelen","164/165/8":"Indian/Kerguelen","165/165/8":"Indian/Kerguelen","176/167/8":"Indian/Kerguelen","177/167/8":"Indian/Kerguelen","178/167/8":"Indian/Kerguelen","176/168/8":"Indian/Kerguelen","178/168/8":"Indian/Kerguelen","176/169/8":"Indian/Kerguelen","177/169/8":"Indian/Kerguelen","178/169/8":"Indian/Kerguelen","167/130/8":"Indian/Mahe","165/131/8":"Indian/Mahe","166/131/8":"Indian/Mahe","167/131/8":"Indian/Mahe","165/132/8":"Indian/Mahe","166/132/8":"Indian/Mahe","167/132/8":"Indian/Mahe","168/132/8":"Indian/Mahe","165/133/8":"Indian/Mahe","167/133/8":"Indian/Mahe","168/133/8":"Indian/Mahe","160/134/8":"Indian/Mahe","161/134/8":"Indian/Mahe","162/134/8":"Indian/Mahe","163/134/8":"Indian/Mahe","164/134/8":"Indian/Mahe","160/135/8":"Indian/Mahe","161/135/8":"Indian/Mahe","162/135/8":"Indian/Mahe","164/135/8":"Indian/Mahe","179/123/8":"Indian/Maldives","180/123/8":"Indian/Maldives","179/124/8":"Indian/Maldives","180/124/8":"Indian/Maldives","179/125/8":"Indian/Maldives","180/125/8":"Indian/Maldives","179/126/8":"Indian/Maldives","180/126/8":"Indian/Maldives","179/127/8":"Indian/Maldives","180/127/8":"Indian/Maldives","179/128/8":"Indian/Maldives","180/128/8":"Indian/Maldives","168/135/8":"Indian/Mauritius","170/139/8":"Indian/Mauritius","170/140/8":"Indian/Mauritius","168/142/8":"Indian/Mauritius","169/142/8":"Indian/Mauritius","172/142/8":"Indian/Mauritius","173/142/8":"Indian/Mauritius","168/143/8":"Indian/Mauritius","169/143/8":"Indian/Mauritius","160/136/8":"Indian/Mayotte","160/137/8":"Indian/Mayotte","167/143/8":"Indian/Reunion","4/137/8":"Pacific/Apia","5/137/8":"Pacific/Apia","6/137/8":"Pacific/Apia","5/138/8":"Pacific/Apia","6/138/8":"Pacific/Pago_Pago","253/157/8":"Pacific/Auckland","252/158/8":"Pacific/Auckland","253/158/8":"Pacific/Auckland","250/161/8":"Pacific/Auckland","249/162/8":"Pacific/Auckland","248/163/8":"Pacific/Auckland","247/164/8":"Pacific/Auckland","248/164/8":"Pacific/Auckland","1/149/8":"Pacific/Auckland","0/150/8":"Pacific/Auckland","1/150/8":"Pacific/Auckland","0/151/8":"Pacific/Auckland","1/151/8":"Pacific/Auckland","250/153/8":"Pacific/Auckland","251/153/8":"Pacific/Auckland","250/154/8":"Pacific/Auckland","251/154/8":"Pacific/Auckland","252/154/8":"Pacific/Auckland","251/155/8":"Pacific/Auckland","252/155/8":"Pacific/Auckland","253/155/8":"Pacific/Auckland","251/156/8":"Pacific/Auckland","252/156/8":"Pacific/Auckland","253/156/8":"Pacific/Auckland","254/156/8":"Pacific/Auckland","255/156/8":"Pacific/Auckland","251/157/8":"Pacific/Auckland","252/157/8":"Pacific/Auckland","254/157/8":"Pacific/Auckland","255/157/8":"Pacific/Auckland","251/158/8":"Pacific/Auckland","254/158/8":"Pacific/Auckland","250/159/8":"Pacific/Auckland","251/159/8":"Pacific/Auckland","252/159/8":"Pacific/Auckland","253/159/8":"Pacific/Auckland","254/159/8":"Pacific/Auckland","249/160/8":"Pacific/Auckland","250/160/8":"Pacific/Auckland","251/160/8":"Pacific/Auckland","252/160/8":"Pacific/Auckland","253/160/8":"Pacific/Auckland","248/161/8":"Pacific/Auckland","249/161/8":"Pacific/Auckland","251/161/8":"Pacific/Auckland","247/162/8":"Pacific/Auckland","248/162/8":"Pacific/Auckland","250/162/8":"Pacific/Auckland","251/162/8":"Pacific/Auckland","246/163/8":"Pacific/Auckland","247/163/8":"Pacific/Auckland","249/163/8":"Pacific/Auckland","250/163/8":"Pacific/Auckland","251/163/8":"Pacific/Auckland","246/164/8":"Pacific/Auckland","249/164/8":"Pacific/Auckland","246/165/8":"Pacific/Auckland","247/165/8":"Pacific/Auckland","248/165/8":"Pacific/Auckland","249/165/8":"Pacific/Auckland","246/166/8":"Pacific/Auckland","247/166/8":"Pacific/Auckland","255/166/8":"Pacific/Auckland","246/167/8":"Pacific/Auckland","254/168/8":"Pacific/Auckland","255/168/8":"Pacific/Auckland","245/169/8":"Pacific/Auckland","246/169/8":"Pacific/Auckland","254/169/8":"Pacific/Auckland","255/169/8":"Pacific/Auckland","245/170/8":"Pacific/Auckland","246/170/8":"Pacific/Auckland","247/171/8":"Pacific/Auckland","248/171/8":"Pacific/Auckland","247/172/8":"Pacific/Auckland","248/172/8":"Pacific/Auckland","237/130/8":"Pacific/Port_Moresby","238/130/8":"Pacific/Bougainville","236/131/8":"Pacific/Port_Moresby","237/131/8":"Pacific/Bougainville","238/131/8":"Pacific/Bougainville","239/131/8":"Pacific/Bougainville","241/131/8":"Pacific/Guadalcanal","237/132/8":"Pacific/Bougainville","238/132/8":"Pacific/Bougainville","239/132/8":"Pacific/Guadalcanal","238/133/8":"Pacific/Guadalcanal","1/162/8":"Pacific/Chatham","2/162/8":"Pacific/Chatham","3/162/8":"Pacific/Chatham","2/163/8":"Pacific/Chatham","3/163/8":"Pacific/Chatham","234/121/8":"Pacific/Chuuk","235/121/8":"Pacific/Chuuk","236/121/8":"Pacific/Chuuk","233/122/8":"Pacific/Yap","234/122/8":"Pacific/Chuuk","235/122/8":"Pacific/Chuuk","236/122/8":"Pacific/Chuuk","234/123/8":"Pacific/Chuuk","235/123/8":"Pacific/Chuuk","236/123/8":"Pacific/Chuuk","237/123/8":"Pacific/Chuuk","236/124/8":"Pacific/Chuuk","237/124/8":"Pacific/Chuuk","50/147/8":"Pacific/Easter","50/148/8":"Pacific/Easter","246/137/8":"Pacific/Efate","247/137/8":"Pacific/Efate","246/138/8":"Pacific/Efate","247/138/8":"Pacific/Efate","246/139/8":"Pacific/Efate","247/139/8":"Pacific/Efate","246/140/8":"Pacific/Efate","247/140/8":"Pacific/Efate","248/140/8":"Pacific/Efate","247/141/8":"Pacific/Efate","248/141/8":"Pacific/Efate","249/141/8":"Pacific/Efate","248/142/8":"Pacific/Efate","249/142/8":"Pacific/Efate","5/129/8":"Pacific/Enderbury","6/129/8":"Pacific/Enderbury","4/130/8":"Pacific/Enderbury","5/130/8":"Pacific/Enderbury","6/130/8":"Pacific/Enderbury","3/131/8":"Pacific/Enderbury","4/131/8":"Pacific/Enderbury","5/131/8":"Pacific/Enderbury","6/131/8":"Pacific/Enderbury","5/133/8":"Pacific/Fakaofo","5/134/8":"Pacific/Fakaofo","6/134/8":"Pacific/Fakaofo","254/140/8":"Pacific/Fiji","255/140/8":"Pacific/Fiji","255/141/8":"Pacific/Fiji","253/136/8":"Pacific/Fiji","254/136/8":"Pacific/Fiji","253/137/8":"Pacific/Fiji","254/137/8":"Pacific/Fiji","0/139/8":"Pacific/Fiji","253/139/8":"Pacific/Fiji","254/139/8":"Pacific/Fiji","255/139/8":"Pacific/Fiji","256/139/8":"Pacific/Fiji","0/140/8":"Pacific/Fiji","1/140/8":"Pacific/Fiji","253/140/8":"Pacific/Fiji","256/140/8":"Pacific/Fiji","0/141/8":"Pacific/Fiji","1/141/8":"Pacific/Fiji","253/141/8":"Pacific/Fiji","254/141/8":"Pacific/Fiji","256/141/8":"Pacific/Fiji","0/142/8":"Pacific/Fiji","1/142/8":"Pacific/Fiji","254/142/8":"Pacific/Fiji","255/142/8":"Pacific/Fiji","256/142/8":"Pacific/Fiji","0/143/8":"Pacific/Fiji","1/143/8":"Pacific/Fiji","252/143/8":"Pacific/Fiji","252/144/8":"Pacific/Fiji","253/131/8":"Pacific/Funafuti","253/132/8":"Pacific/Funafuti","254/132/8":"Pacific/Funafuti","253/133/8":"Pacific/Funafuti","254/133/8":"Pacific/Funafuti","255/133/8":"Pacific/Funafuti","0/134/8":"Pacific/Funafuti","254/134/8":"Pacific/Funafuti","255/134/8":"Pacific/Funafuti","256/134/8":"Pacific/Funafuti","255/135/8":"Pacific/Funafuti","62/126/8":"Pacific/Galapagos","63/126/8":"Pacific/Galapagos","62/127/8":"Pacific/Galapagos","63/127/8":"Pacific/Galapagos","64/127/8":"Pacific/Galapagos","62/128/8":"Pacific/Galapagos","63/128/8":"Pacific/Galapagos","64/128/8":"Pacific/Galapagos","63/129/8":"Pacific/Galapagos","64/129/8":"Pacific/Galapagos","30/143/8":"Pacific/Gambier","31/143/8":"Pacific/Gambier","30/144/8":"Pacific/Gambier","31/144/8":"Pacific/Gambier","32/144/8":"Pacific/Gambier","31/145/8":"Pacific/Gambier","32/145/8":"Pacific/Gambier","240/132/8":"Pacific/Guadalcanal","241/132/8":"Pacific/Guadalcanal","239/133/8":"Pacific/Guadalcanal","240/133/8":"Pacific/Guadalcanal","241/133/8":"Pacific/Guadalcanal","242/133/8":"Pacific/Guadalcanal","243/133/8":"Pacific/Guadalcanal","244/133/8":"Pacific/Guadalcanal","239/134/8":"Pacific/Guadalcanal","240/134/8":"Pacific/Guadalcanal","241/134/8":"Pacific/Guadalcanal","242/134/8":"Pacific/Guadalcanal","243/134/8":"Pacific/Guadalcanal","244/134/8":"Pacific/Guadalcanal","246/134/8":"Pacific/Guadalcanal","247/134/8":"Pacific/Guadalcanal","241/135/8":"Pacific/Guadalcanal","242/135/8":"Pacific/Guadalcanal","243/135/8":"Pacific/Guadalcanal","245/135/8":"Pacific/Guadalcanal","246/135/8":"Pacific/Guadalcanal","247/135/8":"Pacific/Guadalcanal","241/136/8":"Pacific/Guadalcanal","242/136/8":"Pacific/Guadalcanal","245/136/8":"Pacific/Guadalcanal","246/136/8":"Pacific/Guadalcanal","247/136/8":"Pacific/Guadalcanal","248/136/8":"Pacific/Guadalcanal","249/136/8":"Pacific/Guadalcanal","241/137/8":"Pacific/Guadalcanal","242/137/8":"Pacific/Guadalcanal","230/118/8":"Pacific/Guam","231/118/8":"Pacific/Guam","4/108/8":"Pacific/Honolulu","5/108/8":"Pacific/Honolulu","6/108/8":"Pacific/Honolulu","5/109/8":"Pacific/Honolulu","6/109/8":"Pacific/Honolulu","8/109/8":"Pacific/Honolulu","9/110/8":"Pacific/Honolulu","10/110/8":"Pacific/Honolulu","11/110/8":"Pacific/Honolulu","12/110/8":"Pacific/Honolulu","12/111/8":"Pacific/Honolulu","13/111/8":"Pacific/Honolulu","14/111/8":"Pacific/Honolulu","13/112/8":"Pacific/Honolulu","14/112/8":"Pacific/Honolulu","15/112/8":"Pacific/Honolulu","16/112/8":"Pacific/Honolulu","17/112/8":"Pacific/Honolulu","16/113/8":"Pacific/Honolulu","17/113/8":"Pacific/Honolulu","18/113/8":"Pacific/Honolulu","16/114/8":"Pacific/Honolulu","17/114/8":"Pacific/Honolulu","7/115/8":"Pacific/Johnston","7/116/8":"Pacific/Johnston","13/124/8":"Pacific/Kiritimati","14/124/8":"Pacific/Kiritimati","14/125/8":"Pacific/Kiritimati","15/126/8":"Pacific/Kiritimati","16/126/8":"Pacific/Kiritimati","17/130/8":"Pacific/Kiritimati","16/131/8":"Pacific/Kiritimati","17/131/8":"Pacific/Kiritimati","16/132/8":"Pacific/Kiritimati","17/132/8":"Pacific/Kiritimati","21/134/8":"Pacific/Kiritimati","21/135/8":"Pacific/Kiritimati","19/136/8":"Pacific/Kiritimati","20/136/8":"Pacific/Kiritimati","243/124/8":"Pacific/Kosrae","244/124/8":"Pacific/Kosrae","246/121/8":"Pacific/Kwajalein","247/121/8":"Pacific/Kwajalein","247/117/8":"Pacific/Majuro","248/117/8":"Pacific/Majuro","243/119/8":"Pacific/Majuro","245/119/8":"Pacific/Majuro","246/119/8":"Pacific/Majuro","247/119/8":"Pacific/Majuro","248/119/8":"Pacific/Majuro","249/119/8":"Pacific/Majuro","242/120/8":"Pacific/Majuro","243/120/8":"Pacific/Majuro","245/120/8":"Pacific/Majuro","246/120/8":"Pacific/Majuro","247/120/8":"Pacific/Majuro","248/120/8":"Pacific/Majuro","249/120/8":"Pacific/Majuro","242/121/8":"Pacific/Majuro","245/121/8":"Pacific/Majuro","248/121/8":"Pacific/Majuro","249/121/8":"Pacific/Majuro","246/122/8":"Pacific/Majuro","247/122/8":"Pacific/Majuro","248/122/8":"Pacific/Majuro","249/122/8":"Pacific/Majuro","250/122/8":"Pacific/Majuro","247/123/8":"Pacific/Majuro","248/123/8":"Pacific/Majuro","249/123/8":"Pacific/Majuro","250/123/8":"Pacific/Majuro","247/124/8":"Pacific/Majuro","248/124/8":"Pacific/Majuro","27/133/8":"Pacific/Marquesas","28/133/8":"Pacific/Marquesas","27/134/8":"Pacific/Marquesas","28/134/8":"Pacific/Marquesas","29/134/8":"Pacific/Marquesas","28/135/8":"Pacific/Marquesas","29/135/8":"Pacific/Marquesas","1/106/8":"Pacific/Midway","2/106/8":"Pacific/Midway","1/107/8":"Pacific/Midway","2/107/8":"Pacific/Midway","246/128/8":"Pacific/Nauru","6/141/8":"Pacific/Niue","7/141/8":"Pacific/Niue","7/142/8":"Pacific/Niue","247/149/8":"Pacific/Norfolk","243/140/8":"Pacific/Noumea","244/140/8":"Pacific/Noumea","240/141/8":"Pacific/Noumea","241/141/8":"Pacific/Noumea","243/141/8":"Pacific/Noumea","244/141/8":"Pacific/Noumea","245/141/8":"Pacific/Noumea","240/142/8":"Pacific/Noumea","241/142/8":"Pacific/Noumea","243/142/8":"Pacific/Noumea","244/142/8":"Pacific/Noumea","245/142/8":"Pacific/Noumea","246/142/8":"Pacific/Noumea","247/142/8":"Pacific/Noumea","240/143/8":"Pacific/Noumea","241/143/8":"Pacific/Noumea","244/143/8":"Pacific/Noumea","245/143/8":"Pacific/Noumea","246/143/8":"Pacific/Noumea","247/143/8":"Pacific/Noumea","245/144/8":"Pacific/Noumea","246/144/8":"Pacific/Noumea","247/144/8":"Pacific/Noumea","248/144/8":"Pacific/Noumea","249/144/8":"Pacific/Noumea","250/144/8":"Pacific/Noumea","6/135/8":"Pacific/Pago_Pago","6/136/8":"Pacific/Pago_Pago","7/138/8":"Pacific/Pago_Pago","223/122/8":"Pacific/Palau","223/123/8":"Pacific/Palau","221/124/8":"Pacific/Palau","222/124/8":"Pacific/Palau","221/125/8":"Pacific/Palau","221/126/8":"Pacific/Palau","34/145/8":"Pacific/Pitcairn","35/145/8":"Pacific/Pitcairn","36/145/8":"Pacific/Pitcairn","35/146/8":"Pacific/Pitcairn","39/146/8":"Pacific/Pitcairn","237/122/8":"Pacific/Pohnpei","238/122/8":"Pacific/Pohnpei","240/122/8":"Pacific/Pohnpei","239/123/8":"Pacific/Pohnpei","240/123/8":"Pacific/Pohnpei","241/123/8":"Pacific/Pohnpei","242/123/8":"Pacific/Pohnpei","239/124/8":"Pacific/Pohnpei","238/125/8":"Pacific/Pohnpei","237/127/8":"Pacific/Pohnpei","238/127/8":"Pacific/Pohnpei","230/129/8":"Pacific/Port_Moresby","231/129/8":"Pacific/Port_Moresby","230/130/8":"Pacific/Port_Moresby","231/130/8":"Pacific/Port_Moresby","232/130/8":"Pacific/Port_Moresby","233/130/8":"Pacific/Port_Moresby","234/130/8":"Pacific/Port_Moresby","235/130/8":"Pacific/Port_Moresby","229/131/8":"Pacific/Port_Moresby","230/131/8":"Pacific/Port_Moresby","231/131/8":"Pacific/Port_Moresby","232/131/8":"Pacific/Port_Moresby","233/131/8":"Pacific/Port_Moresby","234/131/8":"Pacific/Port_Moresby","235/131/8":"Pacific/Port_Moresby","229/132/8":"Pacific/Port_Moresby","230/132/8":"Pacific/Port_Moresby","231/132/8":"Pacific/Port_Moresby","232/132/8":"Pacific/Port_Moresby","229/133/8":"Pacific/Port_Moresby","232/133/8":"Pacific/Port_Moresby","229/128/8":"Pacific/Port_Moresby","230/128/8":"Pacific/Port_Moresby","231/128/8":"Pacific/Port_Moresby","232/128/8":"Pacific/Port_Moresby","233/128/8":"Pacific/Port_Moresby","234/128/8":"Pacific/Port_Moresby","229/129/8":"Pacific/Port_Moresby","232/129/8":"Pacific/Port_Moresby","233/129/8":"Pacific/Port_Moresby","234/129/8":"Pacific/Port_Moresby","235/129/8":"Pacific/Port_Moresby","236/129/8":"Pacific/Port_Moresby","229/130/8":"Pacific/Port_Moresby","236/130/8":"Pacific/Port_Moresby","233/132/8":"Pacific/Port_Moresby","234/132/8":"Pacific/Port_Moresby","235/132/8":"Pacific/Port_Moresby","236/132/8":"Pacific/Port_Moresby","230/133/8":"Pacific/Port_Moresby","231/133/8":"Pacific/Port_Moresby","233/133/8":"Pacific/Port_Moresby","234/133/8":"Pacific/Port_Moresby","235/133/8":"Pacific/Port_Moresby","231/134/8":"Pacific/Port_Moresby","232/134/8":"Pacific/Port_Moresby","233/134/8":"Pacific/Port_Moresby","234/134/8":"Pacific/Port_Moresby","235/134/8":"Pacific/Port_Moresby","236/134/8":"Pacific/Port_Moresby","237/134/8":"Pacific/Port_Moresby","232/135/8":"Pacific/Port_Moresby","233/135/8":"Pacific/Port_Moresby","234/135/8":"Pacific/Port_Moresby","235/135/8":"Pacific/Port_Moresby","236/135/8":"Pacific/Port_Moresby","237/135/8":"Pacific/Port_Moresby","235/136/8":"Pacific/Port_Moresby","236/136/8":"Pacific/Port_Moresby","237/136/8":"Pacific/Port_Moresby","15/134/8":"Pacific/Rarotonga","9/135/8":"Pacific/Rarotonga","10/135/8":"Pacific/Rarotonga","13/135/8":"Pacific/Rarotonga","10/136/8":"Pacific/Rarotonga","11/137/8":"Pacific/Rarotonga","12/137/8":"Pacific/Rarotonga","11/140/8":"Pacific/Rarotonga","12/140/8":"Pacific/Rarotonga","11/141/8":"Pacific/Rarotonga","12/141/8":"Pacific/Rarotonga","14/141/8":"Pacific/Rarotonga","15/141/8":"Pacific/Rarotonga","14/142/8":"Pacific/Rarotonga","15/142/8":"Pacific/Rarotonga","16/142/8":"Pacific/Rarotonga","14/143/8":"Pacific/Rarotonga","15/143/8":"Pacific/Rarotonga","15/144/8":"Pacific/Rarotonga","230/112/8":"Pacific/Saipan","231/112/8":"Pacific/Saipan","230/113/8":"Pacific/Saipan","231/113/8":"Pacific/Saipan","231/114/8":"Pacific/Saipan","231/115/8":"Pacific/Saipan","231/116/8":"Pacific/Saipan","232/116/8":"Pacific/Saipan","231/117/8":"Pacific/Saipan","27/137/8":"Pacific/Tahiti","22/138/8":"Pacific/Tahiti","23/138/8":"Pacific/Tahiti","24/138/8":"Pacific/Tahiti","25/138/8":"Pacific/Tahiti","27/138/8":"Pacific/Tahiti","29/138/8":"Pacific/Tahiti","17/139/8":"Pacific/Tahiti","18/139/8":"Pacific/Tahiti","19/139/8":"Pacific/Tahiti","20/139/8":"Pacific/Tahiti","22/139/8":"Pacific/Tahiti","23/139/8":"Pacific/Tahiti","24/139/8":"Pacific/Tahiti","25/139/8":"Pacific/Tahiti","26/139/8":"Pacific/Tahiti","27/139/8":"Pacific/Tahiti","28/139/8":"Pacific/Tahiti","17/140/8":"Pacific/Tahiti","18/140/8":"Pacific/Tahiti","19/140/8":"Pacific/Tahiti","20/140/8":"Pacific/Tahiti","21/140/8":"Pacific/Tahiti","22/140/8":"Pacific/Tahiti","24/140/8":"Pacific/Tahiti","25/140/8":"Pacific/Tahiti","26/140/8":"Pacific/Tahiti","27/140/8":"Pacific/Tahiti","28/140/8":"Pacific/Tahiti","29/140/8":"Pacific/Tahiti","21/141/8":"Pacific/Tahiti","22/141/8":"Pacific/Tahiti","26/141/8":"Pacific/Tahiti","27/141/8":"Pacific/Tahiti","28/141/8":"Pacific/Tahiti","29/141/8":"Pacific/Tahiti","30/141/8":"Pacific/Tahiti","31/141/8":"Pacific/Tahiti","24/142/8":"Pacific/Tahiti","25/142/8":"Pacific/Tahiti","26/142/8":"Pacific/Tahiti","27/142/8":"Pacific/Tahiti","28/142/8":"Pacific/Tahiti","29/142/8":"Pacific/Tahiti","17/143/8":"Pacific/Tahiti","18/143/8":"Pacific/Tahiti","25/143/8":"Pacific/Tahiti","26/143/8":"Pacific/Tahiti","27/143/8":"Pacific/Tahiti","28/143/8":"Pacific/Tahiti","29/143/8":"Pacific/Tahiti","17/144/8":"Pacific/Tahiti","18/144/8":"Pacific/Tahiti","19/144/8":"Pacific/Tahiti","20/144/8":"Pacific/Tahiti","21/144/8":"Pacific/Tahiti","28/144/8":"Pacific/Tahiti","29/144/8":"Pacific/Tahiti","21/145/8":"Pacific/Tahiti","22/145/8":"Pacific/Tahiti","23/145/8":"Pacific/Tahiti","25/148/8":"Pacific/Tahiti","26/148/8":"Pacific/Tahiti","250/125/8":"Pacific/Tarawa","251/125/8":"Pacific/Tarawa","250/126/8":"Pacific/Tarawa","251/126/8":"Pacific/Tarawa","250/127/8":"Pacific/Tarawa","251/127/8":"Pacific/Tarawa","248/128/8":"Pacific/Tarawa","251/128/8":"Pacific/Tarawa","252/128/8":"Pacific/Tarawa","253/128/8":"Pacific/Tarawa","252/129/8":"Pacific/Tarawa","253/129/8":"Pacific/Tarawa","253/130/8":"Pacific/Tarawa","2/139/8":"Pacific/Tongatapu","3/139/8":"Pacific/Tongatapu","4/139/8":"Pacific/Tongatapu","3/140/8":"Pacific/Tongatapu","4/140/8":"Pacific/Tongatapu","3/141/8":"Pacific/Tongatapu","4/141/8":"Pacific/Tongatapu","3/142/8":"Pacific/Tongatapu","4/142/8":"Pacific/Tongatapu","3/143/8":"Pacific/Tongatapu","2/144/8":"Pacific/Tongatapu","0/145/8":"Pacific/Tongatapu","246/113/8":"Pacific/Wake","246/114/8":"Pacific/Wake","2/137/8":"Pacific/Wallis","1/138/8":"Pacific/Wallis","226/120/8":"Pacific/Yap","227/120/8":"Pacific/Yap","228/120/8":"Pacific/Yap","225/121/8":"Pacific/Yap","226/121/8":"Pacific/Yap","227/121/8":"Pacific/Yap","228/121/8":"Pacific/Yap","230/121/8":"Pacific/Yap","231/121/8":"Pacific/Yap","225/122/8":"Pacific/Yap","227/122/8":"Pacific/Yap","230/122/8":"Pacific/Yap","231/122/8":"Pacific/Yap","232/122/8":"Pacific/Yap","229/123/8":"Pacific/Yap"}
},{}],5:[function(require,module,exports){
module.exports={
	"version": "2021a",
	"zones": [
		"Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
		"Africa/Accra|LMT GMT +0020 +0030|.Q 0 -k -u|01212121212121212121212121212121212121212121212131313131313131|-2bRzX.8 9RbX.8 fdE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE Mok 1BXE M0k 1BXE fak 9vbu bjCu MLu 1Bcu MLu 1BAu MLu 1Bcu MLu 1Bcu MLu 1Bcu MLu|41e5",
		"Africa/Nairobi|LMT +0230 EAT +0245|-2r.g -2u -30 -2J|012132|-2ua2r.g N6nV.g 3Fbu h1cu dzbJ|47e5",
		"Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
		"Africa/Lagos|LMT GMT +0030 WAT|-d.z 0 -u -10|01023|-2B40d.z 7iod.z dnXK.p dLzH.z|17e6",
		"Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
		"Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
		"Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
		"Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5",
		"Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3",
		"Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4",
		"Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5",
		"Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|012121212121212121212121212121212131|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 PeX0|",
		"Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
		"Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
		"Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
		"Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|",
		"Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
		"Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
		"Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
		"America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
		"America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
		"America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
		"America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
		"America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
		"America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
		"America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
		"America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|",
		"America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
		"America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|",
		"America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
		"America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|",
		"America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|",
		"America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|",
		"America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|",
		"America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|",
		"America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
		"America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5",
		"America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2",
		"America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3",
		"America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
		"America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
		"America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
		"America/Belize|LMT CST -0530 CWT CPT CDT|5Q.M 60 5u 50 50 50|012121212121212121212121212121212121212121212121213412121212121212121212121212121212121212121215151|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu Rcu 7Bt0 Ni0 4nd0 Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu e9Au qn0 lxB0 mn0|57e3",
		"America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2",
		"America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
		"America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
		"America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
		"America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
		"America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
		"America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
		"America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5",
		"America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
		"America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
		"America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
		"America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
		"America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
		"America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
		"America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
		"America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
		"America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
		"America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|13e2",
		"America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
		"America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
		"America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
		"America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
		"America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
		"America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
		"America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
		"America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
		"America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
		"America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
		"America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
		"America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|0121212121212121212121212121212121212121212121212121212121212121212121212132121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 7jA0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
		"America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
		"America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
		"America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
		"America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
		"America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
		"America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
		"America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
		"America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
		"America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
		"America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
		"America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
		"America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
		"America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
		"America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
		"America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
		"America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
		"America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
		"America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
		"America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
		"America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
		"America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5",
		"America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
		"America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
		"America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
		"America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
		"America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5",
		"America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
		"America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
		"America/Nassau|LMT EST EWT EPT EDT|59.u 50 40 40 40|01212314141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2kNuO.u 1drbO.u 6tX0 cp0 1hS0 pF0 J630 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
		"America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
		"America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
		"America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
		"America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
		"America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
		"America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
		"America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
		"America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
		"America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
		"America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
		"America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
		"America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
		"America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|",
		"America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
		"America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
		"America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
		"America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
		"America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
		"America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
		"America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
		"America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
		"America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
		"America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
		"America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
		"America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
		"America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
		"America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
		"America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
		"America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
		"America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
		"America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|23e3",
		"America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
		"America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
		"America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
		"Antarctica/Casey|-00 +08 +11|0 -80 -b0|0121212121212|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10 1o30 14k0 1kr0 12l0 1o01|10",
		"Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
		"Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
		"Antarctica/Macquarie|AEST AEDT -00|-a0 -b0 0|010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 4SK0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 3Co0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|1",
		"Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
		"Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
		"Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
		"Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
		"Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
		"Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
		"Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
		"Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
		"Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
		"Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
		"Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
		"Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
		"Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
		"Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
		"Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
		"Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
		"Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
		"Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
		"Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
		"Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
		"Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|",
		"Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
		"Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
		"Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
		"Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6",
		"Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
		"Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
		"Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
		"Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
		"Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
		"Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5",
		"Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
		"Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
		"Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
		"Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
		"Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|01010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
		"Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
		"Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
		"Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
		"Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
		"Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
		"Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
		"Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
		"Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|01212121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyOk.E MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 3LA0 Eo0 oo0 1co0 1dA0 16o0 10M0 1jc0 1tA0 14o0 1cM0 1a00 11A0 1Nc0 Ao0 1Nc0 Ao0 1Ko0 LA0 1o00 WM0 EQK0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
		"Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
		"Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
		"Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
		"Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
		"Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
		"Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
		"Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
		"Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
		"Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4",
		"Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
		"Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
		"Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
		"Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6",
		"Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4",
		"Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
		"Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
		"Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
		"Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
		"Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
		"Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
		"Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
		"Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
		"Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
		"Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
		"Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
		"Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
		"Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
		"Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
		"Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
		"Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
		"Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
		"Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
		"Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6",
		"Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
		"Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
		"Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
		"Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
		"Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
		"Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
		"Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
		"Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
		"Atlantic/Bermuda|BMT BST AST ADT|4j.i 3j.i 40 30|010102323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28p7E.G 1bb0 1i10 11X0 ru30 thbE.G 1PX0 11B0 1tz0 Rd0 1zb0 Op0 1zb0 3I10 Lz0 1EN0 FX0 1HB0 FX0 1Kp0 Db0 1Kp0 Db0 1Kp0 FX0 93d0 11z0 GAp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
		"Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
		"Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
		"Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3",
		"Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4",
		"Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
		"Atlantic/South_Georgia|-02|20|0||30",
		"Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
		"Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5",
		"Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5",
		"Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
		"Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3",
		"Australia/Hobart|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 1qM0 Oo0 1zc0 Oo0 TAo0 yM0 1cM0 1cM0 1fA0 1a00 VfA0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
		"Australia/Darwin|ACST ACDT|-9u -au|010101010|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00|12e4",
		"Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293iJ xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
		"Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347",
		"Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
		"Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5",
		"Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293i0 xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
		"CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
		"CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"EST|EST|50|0||",
		"EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"Etc/GMT-0|GMT|0|0||",
		"Etc/GMT-1|+01|-10|0||",
		"Pacific/Port_Moresby|+10|-a0|0||25e4",
		"Etc/GMT-11|+11|-b0|0||",
		"Pacific/Tarawa|+12|-c0|0||29e3",
		"Etc/GMT-13|+13|-d0|0||",
		"Etc/GMT-14|+14|-e0|0||",
		"Etc/GMT-2|+02|-20|0||",
		"Etc/GMT-3|+03|-30|0||",
		"Etc/GMT-4|+04|-40|0||",
		"Etc/GMT-5|+05|-50|0||",
		"Etc/GMT-6|+06|-60|0||",
		"Indian/Christmas|+07|-70|0||21e2",
		"Etc/GMT-8|+08|-80|0||",
		"Pacific/Palau|+09|-90|0||21e3",
		"Etc/GMT+1|-01|10|0||",
		"Etc/GMT+10|-10|a0|0||",
		"Etc/GMT+11|-11|b0|0||",
		"Etc/GMT+12|-12|c0|0||",
		"Etc/GMT+3|-03|30|0||",
		"Etc/GMT+4|-04|40|0||",
		"Etc/GMT+5|-05|50|0||",
		"Etc/GMT+6|-06|60|0||",
		"Etc/GMT+7|-07|70|0||",
		"Etc/GMT+8|-08|80|0||",
		"Etc/GMT+9|-09|90|0||",
		"Etc/UTC|UTC|0|0||",
		"Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
		"Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
		"Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
		"Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
		"Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
		"Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5",
		"Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5",
		"Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
		"Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
		"Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 1oo0 11c0 1lc0 17c0 O1V0 3Nf0 WM0 1fA0 1cM0 1cM0 1oJ0 1dd0 1020 1fX0 1cp0 1cM0 1cM0 1cM0 1fA0 1a00 bhy0 Rb0 1wr0 Rc0 1C00 LA0 1C00 LA0 SNW0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cO0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
		"Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4",
		"Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
		"Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
		"Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
		"Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5",
		"Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
		"Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
		"Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
		"Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
		"Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
		"Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
		"Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2n5c9.l cFX9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
		"Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
		"Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
		"Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
		"Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
		"Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
		"Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|",
		"Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
		"Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5",
		"Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4",
		"Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
		"Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
		"Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
		"Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
		"Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
		"Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|0123232323232323212121212121212121212121212121212121212121212121|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0 5gn0|10e5",
		"Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
		"Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4",
		"HST|HST|a0|0||",
		"Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
		"Indian/Cocos|+0630|-6u|0||596",
		"Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
		"Indian/Mahe|LMT +04|-3F.M -40|01|-2xorF.M|79e3",
		"Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
		"Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
		"Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
		"Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3",
		"MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"MST|MST|70|0||",
		"MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600",
		"Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
		"Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
		"Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
		"Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|012121212121212121212121|-2l9nd.g 2uNXd.g Dc0 n610 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
		"Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
		"Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
		"Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 2hc0 bc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4",
		"Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
		"Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
		"Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
		"Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
		"Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4",
		"Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
		"Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
		"Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3",
		"Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
		"Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
		"Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
		"Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
		"Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4",
		"Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
		"Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
		"Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
		"Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
		"Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
		"Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3",
		"PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"
	],
	"links": [
		"Africa/Abidjan|Africa/Bamako",
		"Africa/Abidjan|Africa/Banjul",
		"Africa/Abidjan|Africa/Conakry",
		"Africa/Abidjan|Africa/Dakar",
		"Africa/Abidjan|Africa/Freetown",
		"Africa/Abidjan|Africa/Lome",
		"Africa/Abidjan|Africa/Nouakchott",
		"Africa/Abidjan|Africa/Ouagadougou",
		"Africa/Abidjan|Africa/Timbuktu",
		"Africa/Abidjan|Atlantic/St_Helena",
		"Africa/Cairo|Egypt",
		"Africa/Johannesburg|Africa/Maseru",
		"Africa/Johannesburg|Africa/Mbabane",
		"Africa/Lagos|Africa/Bangui",
		"Africa/Lagos|Africa/Brazzaville",
		"Africa/Lagos|Africa/Douala",
		"Africa/Lagos|Africa/Kinshasa",
		"Africa/Lagos|Africa/Libreville",
		"Africa/Lagos|Africa/Luanda",
		"Africa/Lagos|Africa/Malabo",
		"Africa/Lagos|Africa/Niamey",
		"Africa/Lagos|Africa/Porto-Novo",
		"Africa/Maputo|Africa/Blantyre",
		"Africa/Maputo|Africa/Bujumbura",
		"Africa/Maputo|Africa/Gaborone",
		"Africa/Maputo|Africa/Harare",
		"Africa/Maputo|Africa/Kigali",
		"Africa/Maputo|Africa/Lubumbashi",
		"Africa/Maputo|Africa/Lusaka",
		"Africa/Nairobi|Africa/Addis_Ababa",
		"Africa/Nairobi|Africa/Asmara",
		"Africa/Nairobi|Africa/Asmera",
		"Africa/Nairobi|Africa/Dar_es_Salaam",
		"Africa/Nairobi|Africa/Djibouti",
		"Africa/Nairobi|Africa/Kampala",
		"Africa/Nairobi|Africa/Mogadishu",
		"Africa/Nairobi|Indian/Antananarivo",
		"Africa/Nairobi|Indian/Comoro",
		"Africa/Nairobi|Indian/Mayotte",
		"Africa/Tripoli|Libya",
		"America/Adak|America/Atka",
		"America/Adak|US/Aleutian",
		"America/Anchorage|US/Alaska",
		"America/Argentina/Buenos_Aires|America/Buenos_Aires",
		"America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
		"America/Argentina/Catamarca|America/Catamarca",
		"America/Argentina/Cordoba|America/Cordoba",
		"America/Argentina/Cordoba|America/Rosario",
		"America/Argentina/Jujuy|America/Jujuy",
		"America/Argentina/Mendoza|America/Mendoza",
		"America/Atikokan|America/Coral_Harbour",
		"America/Chicago|US/Central",
		"America/Curacao|America/Aruba",
		"America/Curacao|America/Kralendijk",
		"America/Curacao|America/Lower_Princes",
		"America/Denver|America/Shiprock",
		"America/Denver|Navajo",
		"America/Denver|US/Mountain",
		"America/Detroit|US/Michigan",
		"America/Edmonton|Canada/Mountain",
		"America/Fort_Wayne|America/Indiana/Indianapolis",
		"America/Fort_Wayne|America/Indianapolis",
		"America/Fort_Wayne|US/East-Indiana",
		"America/Godthab|America/Nuuk",
		"America/Halifax|Canada/Atlantic",
		"America/Havana|Cuba",
		"America/Indiana/Knox|America/Knox_IN",
		"America/Indiana/Knox|US/Indiana-Starke",
		"America/Jamaica|Jamaica",
		"America/Kentucky/Louisville|America/Louisville",
		"America/Los_Angeles|US/Pacific",
		"America/Manaus|Brazil/West",
		"America/Mazatlan|Mexico/BajaSur",
		"America/Mexico_City|Mexico/General",
		"America/New_York|US/Eastern",
		"America/Noronha|Brazil/DeNoronha",
		"America/Panama|America/Cayman",
		"America/Phoenix|US/Arizona",
		"America/Port_of_Spain|America/Anguilla",
		"America/Port_of_Spain|America/Antigua",
		"America/Port_of_Spain|America/Dominica",
		"America/Port_of_Spain|America/Grenada",
		"America/Port_of_Spain|America/Guadeloupe",
		"America/Port_of_Spain|America/Marigot",
		"America/Port_of_Spain|America/Montserrat",
		"America/Port_of_Spain|America/St_Barthelemy",
		"America/Port_of_Spain|America/St_Kitts",
		"America/Port_of_Spain|America/St_Lucia",
		"America/Port_of_Spain|America/St_Thomas",
		"America/Port_of_Spain|America/St_Vincent",
		"America/Port_of_Spain|America/Tortola",
		"America/Port_of_Spain|America/Virgin",
		"America/Regina|Canada/Saskatchewan",
		"America/Rio_Branco|America/Porto_Acre",
		"America/Rio_Branco|Brazil/Acre",
		"America/Santiago|Chile/Continental",
		"America/Sao_Paulo|Brazil/East",
		"America/St_Johns|Canada/Newfoundland",
		"America/Tijuana|America/Ensenada",
		"America/Tijuana|America/Santa_Isabel",
		"America/Tijuana|Mexico/BajaNorte",
		"America/Toronto|America/Montreal",
		"America/Toronto|Canada/Eastern",
		"America/Vancouver|Canada/Pacific",
		"America/Whitehorse|Canada/Yukon",
		"America/Winnipeg|Canada/Central",
		"Asia/Ashgabat|Asia/Ashkhabad",
		"Asia/Bangkok|Asia/Phnom_Penh",
		"Asia/Bangkok|Asia/Vientiane",
		"Asia/Dhaka|Asia/Dacca",
		"Asia/Dubai|Asia/Muscat",
		"Asia/Ho_Chi_Minh|Asia/Saigon",
		"Asia/Hong_Kong|Hongkong",
		"Asia/Jerusalem|Asia/Tel_Aviv",
		"Asia/Jerusalem|Israel",
		"Asia/Kathmandu|Asia/Katmandu",
		"Asia/Kolkata|Asia/Calcutta",
		"Asia/Kuala_Lumpur|Asia/Singapore",
		"Asia/Kuala_Lumpur|Singapore",
		"Asia/Macau|Asia/Macao",
		"Asia/Makassar|Asia/Ujung_Pandang",
		"Asia/Nicosia|Europe/Nicosia",
		"Asia/Qatar|Asia/Bahrain",
		"Asia/Rangoon|Asia/Yangon",
		"Asia/Riyadh|Asia/Aden",
		"Asia/Riyadh|Asia/Kuwait",
		"Asia/Seoul|ROK",
		"Asia/Shanghai|Asia/Chongqing",
		"Asia/Shanghai|Asia/Chungking",
		"Asia/Shanghai|Asia/Harbin",
		"Asia/Shanghai|PRC",
		"Asia/Taipei|ROC",
		"Asia/Tehran|Iran",
		"Asia/Thimphu|Asia/Thimbu",
		"Asia/Tokyo|Japan",
		"Asia/Ulaanbaatar|Asia/Ulan_Bator",
		"Asia/Urumqi|Asia/Kashgar",
		"Atlantic/Faroe|Atlantic/Faeroe",
		"Atlantic/Reykjavik|Iceland",
		"Atlantic/South_Georgia|Etc/GMT+2",
		"Australia/Adelaide|Australia/South",
		"Australia/Brisbane|Australia/Queensland",
		"Australia/Broken_Hill|Australia/Yancowinna",
		"Australia/Darwin|Australia/North",
		"Australia/Hobart|Australia/Currie",
		"Australia/Hobart|Australia/Tasmania",
		"Australia/Lord_Howe|Australia/LHI",
		"Australia/Melbourne|Australia/Victoria",
		"Australia/Perth|Australia/West",
		"Australia/Sydney|Australia/ACT",
		"Australia/Sydney|Australia/Canberra",
		"Australia/Sydney|Australia/NSW",
		"Etc/GMT-0|Etc/GMT",
		"Etc/GMT-0|Etc/GMT+0",
		"Etc/GMT-0|Etc/GMT0",
		"Etc/GMT-0|Etc/Greenwich",
		"Etc/GMT-0|GMT",
		"Etc/GMT-0|GMT+0",
		"Etc/GMT-0|GMT-0",
		"Etc/GMT-0|GMT0",
		"Etc/GMT-0|Greenwich",
		"Etc/UTC|Etc/UCT",
		"Etc/UTC|Etc/Universal",
		"Etc/UTC|Etc/Zulu",
		"Etc/UTC|UCT",
		"Etc/UTC|UTC",
		"Etc/UTC|Universal",
		"Etc/UTC|Zulu",
		"Europe/Belgrade|Europe/Ljubljana",
		"Europe/Belgrade|Europe/Podgorica",
		"Europe/Belgrade|Europe/Sarajevo",
		"Europe/Belgrade|Europe/Skopje",
		"Europe/Belgrade|Europe/Zagreb",
		"Europe/Chisinau|Europe/Tiraspol",
		"Europe/Dublin|Eire",
		"Europe/Helsinki|Europe/Mariehamn",
		"Europe/Istanbul|Asia/Istanbul",
		"Europe/Istanbul|Turkey",
		"Europe/Lisbon|Portugal",
		"Europe/London|Europe/Belfast",
		"Europe/London|Europe/Guernsey",
		"Europe/London|Europe/Isle_of_Man",
		"Europe/London|Europe/Jersey",
		"Europe/London|GB",
		"Europe/London|GB-Eire",
		"Europe/Moscow|W-SU",
		"Europe/Oslo|Arctic/Longyearbyen",
		"Europe/Oslo|Atlantic/Jan_Mayen",
		"Europe/Prague|Europe/Bratislava",
		"Europe/Rome|Europe/San_Marino",
		"Europe/Rome|Europe/Vatican",
		"Europe/Warsaw|Poland",
		"Europe/Zurich|Europe/Busingen",
		"Europe/Zurich|Europe/Vaduz",
		"Indian/Christmas|Etc/GMT-7",
		"Pacific/Auckland|Antarctica/McMurdo",
		"Pacific/Auckland|Antarctica/South_Pole",
		"Pacific/Auckland|NZ",
		"Pacific/Chatham|NZ-CHAT",
		"Pacific/Chuuk|Pacific/Truk",
		"Pacific/Chuuk|Pacific/Yap",
		"Pacific/Easter|Chile/EasterIsland",
		"Pacific/Guam|Pacific/Saipan",
		"Pacific/Honolulu|Pacific/Johnston",
		"Pacific/Honolulu|US/Hawaii",
		"Pacific/Kwajalein|Kwajalein",
		"Pacific/Pago_Pago|Pacific/Midway",
		"Pacific/Pago_Pago|Pacific/Samoa",
		"Pacific/Pago_Pago|US/Samoa",
		"Pacific/Palau|Etc/GMT-9",
		"Pacific/Pohnpei|Pacific/Ponape",
		"Pacific/Port_Moresby|Etc/GMT-10",
		"Pacific/Tarawa|Etc/GMT-12",
		"Pacific/Tarawa|Pacific/Funafuti",
		"Pacific/Tarawa|Pacific/Wake",
		"Pacific/Tarawa|Pacific/Wallis"
	],
	"countries": [
		"AD|Europe/Andorra",
		"AE|Asia/Dubai",
		"AF|Asia/Kabul",
		"AG|America/Port_of_Spain America/Antigua",
		"AI|America/Port_of_Spain America/Anguilla",
		"AL|Europe/Tirane",
		"AM|Asia/Yerevan",
		"AO|Africa/Lagos Africa/Luanda",
		"AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo",
		"AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia",
		"AS|Pacific/Pago_Pago",
		"AT|Europe/Vienna",
		"AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla",
		"AW|America/Curacao America/Aruba",
		"AX|Europe/Helsinki Europe/Mariehamn",
		"AZ|Asia/Baku",
		"BA|Europe/Belgrade Europe/Sarajevo",
		"BB|America/Barbados",
		"BD|Asia/Dhaka",
		"BE|Europe/Brussels",
		"BF|Africa/Abidjan Africa/Ouagadougou",
		"BG|Europe/Sofia",
		"BH|Asia/Qatar Asia/Bahrain",
		"BI|Africa/Maputo Africa/Bujumbura",
		"BJ|Africa/Lagos Africa/Porto-Novo",
		"BL|America/Port_of_Spain America/St_Barthelemy",
		"BM|Atlantic/Bermuda",
		"BN|Asia/Brunei",
		"BO|America/La_Paz",
		"BQ|America/Curacao America/Kralendijk",
		"BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco",
		"BS|America/Nassau",
		"BT|Asia/Thimphu",
		"BW|Africa/Maputo Africa/Gaborone",
		"BY|Europe/Minsk",
		"BZ|America/Belize",
		"CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson",
		"CC|Indian/Cocos",
		"CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
		"CF|Africa/Lagos Africa/Bangui",
		"CG|Africa/Lagos Africa/Brazzaville",
		"CH|Europe/Zurich",
		"CI|Africa/Abidjan",
		"CK|Pacific/Rarotonga",
		"CL|America/Santiago America/Punta_Arenas Pacific/Easter",
		"CM|Africa/Lagos Africa/Douala",
		"CN|Asia/Shanghai Asia/Urumqi",
		"CO|America/Bogota",
		"CR|America/Costa_Rica",
		"CU|America/Havana",
		"CV|Atlantic/Cape_Verde",
		"CW|America/Curacao",
		"CX|Indian/Christmas",
		"CY|Asia/Nicosia Asia/Famagusta",
		"CZ|Europe/Prague",
		"DE|Europe/Zurich Europe/Berlin Europe/Busingen",
		"DJ|Africa/Nairobi Africa/Djibouti",
		"DK|Europe/Copenhagen",
		"DM|America/Port_of_Spain America/Dominica",
		"DO|America/Santo_Domingo",
		"DZ|Africa/Algiers",
		"EC|America/Guayaquil Pacific/Galapagos",
		"EE|Europe/Tallinn",
		"EG|Africa/Cairo",
		"EH|Africa/El_Aaiun",
		"ER|Africa/Nairobi Africa/Asmara",
		"ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
		"ET|Africa/Nairobi Africa/Addis_Ababa",
		"FI|Europe/Helsinki",
		"FJ|Pacific/Fiji",
		"FK|Atlantic/Stanley",
		"FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae",
		"FO|Atlantic/Faroe",
		"FR|Europe/Paris",
		"GA|Africa/Lagos Africa/Libreville",
		"GB|Europe/London",
		"GD|America/Port_of_Spain America/Grenada",
		"GE|Asia/Tbilisi",
		"GF|America/Cayenne",
		"GG|Europe/London Europe/Guernsey",
		"GH|Africa/Accra",
		"GI|Europe/Gibraltar",
		"GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule",
		"GM|Africa/Abidjan Africa/Banjul",
		"GN|Africa/Abidjan Africa/Conakry",
		"GP|America/Port_of_Spain America/Guadeloupe",
		"GQ|Africa/Lagos Africa/Malabo",
		"GR|Europe/Athens",
		"GS|Atlantic/South_Georgia",
		"GT|America/Guatemala",
		"GU|Pacific/Guam",
		"GW|Africa/Bissau",
		"GY|America/Guyana",
		"HK|Asia/Hong_Kong",
		"HN|America/Tegucigalpa",
		"HR|Europe/Belgrade Europe/Zagreb",
		"HT|America/Port-au-Prince",
		"HU|Europe/Budapest",
		"ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
		"IE|Europe/Dublin",
		"IL|Asia/Jerusalem",
		"IM|Europe/London Europe/Isle_of_Man",
		"IN|Asia/Kolkata",
		"IO|Indian/Chagos",
		"IQ|Asia/Baghdad",
		"IR|Asia/Tehran",
		"IS|Atlantic/Reykjavik",
		"IT|Europe/Rome",
		"JE|Europe/London Europe/Jersey",
		"JM|America/Jamaica",
		"JO|Asia/Amman",
		"JP|Asia/Tokyo",
		"KE|Africa/Nairobi",
		"KG|Asia/Bishkek",
		"KH|Asia/Bangkok Asia/Phnom_Penh",
		"KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati",
		"KM|Africa/Nairobi Indian/Comoro",
		"KN|America/Port_of_Spain America/St_Kitts",
		"KP|Asia/Pyongyang",
		"KR|Asia/Seoul",
		"KW|Asia/Riyadh Asia/Kuwait",
		"KY|America/Panama America/Cayman",
		"KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral",
		"LA|Asia/Bangkok Asia/Vientiane",
		"LB|Asia/Beirut",
		"LC|America/Port_of_Spain America/St_Lucia",
		"LI|Europe/Zurich Europe/Vaduz",
		"LK|Asia/Colombo",
		"LR|Africa/Monrovia",
		"LS|Africa/Johannesburg Africa/Maseru",
		"LT|Europe/Vilnius",
		"LU|Europe/Luxembourg",
		"LV|Europe/Riga",
		"LY|Africa/Tripoli",
		"MA|Africa/Casablanca",
		"MC|Europe/Monaco",
		"MD|Europe/Chisinau",
		"ME|Europe/Belgrade Europe/Podgorica",
		"MF|America/Port_of_Spain America/Marigot",
		"MG|Africa/Nairobi Indian/Antananarivo",
		"MH|Pacific/Majuro Pacific/Kwajalein",
		"MK|Europe/Belgrade Europe/Skopje",
		"ML|Africa/Abidjan Africa/Bamako",
		"MM|Asia/Yangon",
		"MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan",
		"MO|Asia/Macau",
		"MP|Pacific/Guam Pacific/Saipan",
		"MQ|America/Martinique",
		"MR|Africa/Abidjan Africa/Nouakchott",
		"MS|America/Port_of_Spain America/Montserrat",
		"MT|Europe/Malta",
		"MU|Indian/Mauritius",
		"MV|Indian/Maldives",
		"MW|Africa/Maputo Africa/Blantyre",
		"MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas",
		"MY|Asia/Kuala_Lumpur Asia/Kuching",
		"MZ|Africa/Maputo",
		"NA|Africa/Windhoek",
		"NC|Pacific/Noumea",
		"NE|Africa/Lagos Africa/Niamey",
		"NF|Pacific/Norfolk",
		"NG|Africa/Lagos",
		"NI|America/Managua",
		"NL|Europe/Amsterdam",
		"NO|Europe/Oslo",
		"NP|Asia/Kathmandu",
		"NR|Pacific/Nauru",
		"NU|Pacific/Niue",
		"NZ|Pacific/Auckland Pacific/Chatham",
		"OM|Asia/Dubai Asia/Muscat",
		"PA|America/Panama",
		"PE|America/Lima",
		"PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
		"PG|Pacific/Port_Moresby Pacific/Bougainville",
		"PH|Asia/Manila",
		"PK|Asia/Karachi",
		"PL|Europe/Warsaw",
		"PM|America/Miquelon",
		"PN|Pacific/Pitcairn",
		"PR|America/Puerto_Rico",
		"PS|Asia/Gaza Asia/Hebron",
		"PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
		"PW|Pacific/Palau",
		"PY|America/Asuncion",
		"QA|Asia/Qatar",
		"RE|Indian/Reunion",
		"RO|Europe/Bucharest",
		"RS|Europe/Belgrade",
		"RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr",
		"RW|Africa/Maputo Africa/Kigali",
		"SA|Asia/Riyadh",
		"SB|Pacific/Guadalcanal",
		"SC|Indian/Mahe",
		"SD|Africa/Khartoum",
		"SE|Europe/Stockholm",
		"SG|Asia/Singapore",
		"SH|Africa/Abidjan Atlantic/St_Helena",
		"SI|Europe/Belgrade Europe/Ljubljana",
		"SJ|Europe/Oslo Arctic/Longyearbyen",
		"SK|Europe/Prague Europe/Bratislava",
		"SL|Africa/Abidjan Africa/Freetown",
		"SM|Europe/Rome Europe/San_Marino",
		"SN|Africa/Abidjan Africa/Dakar",
		"SO|Africa/Nairobi Africa/Mogadishu",
		"SR|America/Paramaribo",
		"SS|Africa/Juba",
		"ST|Africa/Sao_Tome",
		"SV|America/El_Salvador",
		"SX|America/Curacao America/Lower_Princes",
		"SY|Asia/Damascus",
		"SZ|Africa/Johannesburg Africa/Mbabane",
		"TC|America/Grand_Turk",
		"TD|Africa/Ndjamena",
		"TF|Indian/Reunion Indian/Kerguelen",
		"TG|Africa/Abidjan Africa/Lome",
		"TH|Asia/Bangkok",
		"TJ|Asia/Dushanbe",
		"TK|Pacific/Fakaofo",
		"TL|Asia/Dili",
		"TM|Asia/Ashgabat",
		"TN|Africa/Tunis",
		"TO|Pacific/Tongatapu",
		"TR|Europe/Istanbul",
		"TT|America/Port_of_Spain",
		"TV|Pacific/Funafuti",
		"TW|Asia/Taipei",
		"TZ|Africa/Nairobi Africa/Dar_es_Salaam",
		"UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye",
		"UG|Africa/Nairobi Africa/Kampala",
		"UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway",
		"US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu",
		"UY|America/Montevideo",
		"UZ|Asia/Samarkand Asia/Tashkent",
		"VA|Europe/Rome Europe/Vatican",
		"VC|America/Port_of_Spain America/St_Vincent",
		"VE|America/Caracas",
		"VG|America/Port_of_Spain America/Tortola",
		"VI|America/Port_of_Spain America/St_Thomas",
		"VN|Asia/Bangkok Asia/Ho_Chi_Minh",
		"VU|Pacific/Efate",
		"WF|Pacific/Wallis",
		"WS|Pacific/Apia",
		"YE|Asia/Riyadh Asia/Aden",
		"YT|Africa/Nairobi Indian/Mayotte",
		"ZA|Africa/Johannesburg",
		"ZM|Africa/Maputo Africa/Lusaka",
		"ZW|Africa/Maputo Africa/Harare"
	]
}
},{}],6:[function(require,module,exports){
var moment = module.exports = require("./moment-timezone");
moment.tz.load(require('./data/packed/latest.json'));

},{"./data/packed/latest.json":5,"./moment-timezone":7}],7:[function(require,module,exports){
//! moment-timezone.js
//! version : 0.5.33
//! Copyright (c) JS Foundation and other contributors
//! license : MIT
//! github.com/moment/moment-timezone

(function (root, factory) {
	"use strict";

	/*global define*/
	if (typeof module === 'object' && module.exports) {
		module.exports = factory(require('moment')); // Node
	} else if (typeof define === 'function' && define.amd) {
		define(['moment'], factory);                 // AMD
	} else {
		factory(root.moment);                        // Browser
	}
}(this, function (moment) {
	"use strict";

	// Resolves es6 module loading issue
	if (moment.version === undefined && moment.default) {
		moment = moment.default;
	}

	// Do not load moment-timezone a second time.
	// if (moment.tz !== undefined) {
	// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
	// 	return moment;
	// }

	var VERSION = "0.5.33",
		zones = {},
		links = {},
		countries = {},
		names = {},
		guesses = {},
		cachedGuess;

	if (!moment || typeof moment.version !== 'string') {
		logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');
	}

	var momentVersion = moment.version.split('.'),
		major = +momentVersion[0],
		minor = +momentVersion[1];

	// Moment.js version check
	if (major < 2 || (major === 2 && minor < 6)) {
		logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');
	}

	/************************************
		Unpacking
	************************************/

	function charCodeToInt(charCode) {
		if (charCode > 96) {
			return charCode - 87;
		} else if (charCode > 64) {
			return charCode - 29;
		}
		return charCode - 48;
	}

	function unpackBase60(string) {
		var i = 0,
			parts = string.split('.'),
			whole = parts[0],
			fractional = parts[1] || '',
			multiplier = 1,
			num,
			out = 0,
			sign = 1;

		// handle negative numbers
		if (string.charCodeAt(0) === 45) {
			i = 1;
			sign = -1;
		}

		// handle digits before the decimal
		for (i; i < whole.length; i++) {
			num = charCodeToInt(whole.charCodeAt(i));
			out = 60 * out + num;
		}

		// handle digits after the decimal
		for (i = 0; i < fractional.length; i++) {
			multiplier = multiplier / 60;
			num = charCodeToInt(fractional.charCodeAt(i));
			out += num * multiplier;
		}

		return out * sign;
	}

	function arrayToInt (array) {
		for (var i = 0; i < array.length; i++) {
			array[i] = unpackBase60(array[i]);
		}
	}

	function intToUntil (array, length) {
		for (var i = 0; i < length; i++) {
			array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds
		}

		array[length - 1] = Infinity;
	}

	function mapIndices (source, indices) {
		var out = [], i;

		for (i = 0; i < indices.length; i++) {
			out[i] = source[indices[i]];
		}

		return out;
	}

	function unpack (string) {
		var data = string.split('|'),
			offsets = data[2].split(' '),
			indices = data[3].split(''),
			untils  = data[4].split(' ');

		arrayToInt(offsets);
		arrayToInt(indices);
		arrayToInt(untils);

		intToUntil(untils, indices.length);

		return {
			name       : data[0],
			abbrs      : mapIndices(data[1].split(' '), indices),
			offsets    : mapIndices(offsets, indices),
			untils     : untils,
			population : data[5] | 0
		};
	}

	/************************************
		Zone object
	************************************/

	function Zone (packedString) {
		if (packedString) {
			this._set(unpack(packedString));
		}
	}

	Zone.prototype = {
		_set : function (unpacked) {
			this.name       = unpacked.name;
			this.abbrs      = unpacked.abbrs;
			this.untils     = unpacked.untils;
			this.offsets    = unpacked.offsets;
			this.population = unpacked.population;
		},

		_index : function (timestamp) {
			var target = +timestamp,
				untils = this.untils,
				i;

			for (i = 0; i < untils.length; i++) {
				if (target < untils[i]) {
					return i;
				}
			}
		},

		countries : function () {
			var zone_name = this.name;
			return Object.keys(countries).filter(function (country_code) {
				return countries[country_code].zones.indexOf(zone_name) !== -1;
			});
		},

		parse : function (timestamp) {
			var target  = +timestamp,
				offsets = this.offsets,
				untils  = this.untils,
				max     = untils.length - 1,
				offset, offsetNext, offsetPrev, i;

			for (i = 0; i < max; i++) {
				offset     = offsets[i];
				offsetNext = offsets[i + 1];
				offsetPrev = offsets[i ? i - 1 : i];

				if (offset < offsetNext && tz.moveAmbiguousForward) {
					offset = offsetNext;
				} else if (offset > offsetPrev && tz.moveInvalidForward) {
					offset = offsetPrev;
				}

				if (target < untils[i] - (offset * 60000)) {
					return offsets[i];
				}
			}

			return offsets[max];
		},

		abbr : function (mom) {
			return this.abbrs[this._index(mom)];
		},

		offset : function (mom) {
			logError("zone.offset has been deprecated in favor of zone.utcOffset");
			return this.offsets[this._index(mom)];
		},

		utcOffset : function (mom) {
			return this.offsets[this._index(mom)];
		}
	};

	/************************************
		Country object
	************************************/

	function Country (country_name, zone_names) {
		this.name = country_name;
		this.zones = zone_names;
	}

	/************************************
		Current Timezone
	************************************/

	function OffsetAt(at) {
		var timeString = at.toTimeString();
		var abbr = timeString.match(/\([a-z ]+\)/i);
		if (abbr && abbr[0]) {
			// 17:56:31 GMT-0600 (CST)
			// 17:56:31 GMT-0600 (Central Standard Time)
			abbr = abbr[0].match(/[A-Z]/g);
			abbr = abbr ? abbr.join('') : undefined;
		} else {
			// 17:56:31 CST
			// 17:56:31 GMT+0800 (台北標準時間)
			abbr = timeString.match(/[A-Z]{3,5}/g);
			abbr = abbr ? abbr[0] : undefined;
		}

		if (abbr === 'GMT') {
			abbr = undefined;
		}

		this.at = +at;
		this.abbr = abbr;
		this.offset = at.getTimezoneOffset();
	}

	function ZoneScore(zone) {
		this.zone = zone;
		this.offsetScore = 0;
		this.abbrScore = 0;
	}

	ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
		this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
		if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {
			this.abbrScore++;
		}
	};

	function findChange(low, high) {
		var mid, diff;

		while ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {
			mid = new OffsetAt(new Date(low.at + diff));
			if (mid.offset === low.offset) {
				low = mid;
			} else {
				high = mid;
			}
		}

		return low;
	}

	function userOffsets() {
		var startYear = new Date().getFullYear() - 2,
			last = new OffsetAt(new Date(startYear, 0, 1)),
			offsets = [last],
			change, next, i;

		for (i = 1; i < 48; i++) {
			next = new OffsetAt(new Date(startYear, i, 1));
			if (next.offset !== last.offset) {
				change = findChange(last, next);
				offsets.push(change);
				offsets.push(new OffsetAt(new Date(change.at + 6e4)));
			}
			last = next;
		}

		for (i = 0; i < 4; i++) {
			offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
			offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
		}

		return offsets;
	}

	function sortZoneScores (a, b) {
		if (a.offsetScore !== b.offsetScore) {
			return a.offsetScore - b.offsetScore;
		}
		if (a.abbrScore !== b.abbrScore) {
			return a.abbrScore - b.abbrScore;
		}
		if (a.zone.population !== b.zone.population) {
			return b.zone.population - a.zone.population;
		}
		return b.zone.name.localeCompare(a.zone.name);
	}

	function addToGuesses (name, offsets) {
		var i, offset;
		arrayToInt(offsets);
		for (i = 0; i < offsets.length; i++) {
			offset = offsets[i];
			guesses[offset] = guesses[offset] || {};
			guesses[offset][name] = true;
		}
	}

	function guessesForUserOffsets (offsets) {
		var offsetsLength = offsets.length,
			filteredGuesses = {},
			out = [],
			i, j, guessesOffset;

		for (i = 0; i < offsetsLength; i++) {
			guessesOffset = guesses[offsets[i].offset] || {};
			for (j in guessesOffset) {
				if (guessesOffset.hasOwnProperty(j)) {
					filteredGuesses[j] = true;
				}
			}
		}

		for (i in filteredGuesses) {
			if (filteredGuesses.hasOwnProperty(i)) {
				out.push(names[i]);
			}
		}

		return out;
	}

	function rebuildGuess () {

		// use Intl API when available and returning valid time zone
		try {
			var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
			if (intlName && intlName.length > 3) {
				var name = names[normalizeName(intlName)];
				if (name) {
					return name;
				}
				logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
			}
		} catch (e) {
			// Intl unavailable, fall back to manual guessing.
		}

		var offsets = userOffsets(),
			offsetsLength = offsets.length,
			guesses = guessesForUserOffsets(offsets),
			zoneScores = [],
			zoneScore, i, j;

		for (i = 0; i < guesses.length; i++) {
			zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);
			for (j = 0; j < offsetsLength; j++) {
				zoneScore.scoreOffsetAt(offsets[j]);
			}
			zoneScores.push(zoneScore);
		}

		zoneScores.sort(sortZoneScores);

		return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;
	}

	function guess (ignoreCache) {
		if (!cachedGuess || ignoreCache) {
			cachedGuess = rebuildGuess();
		}
		return cachedGuess;
	}

	/************************************
		Global Methods
	************************************/

	function normalizeName (name) {
		return (name || '').toLowerCase().replace(/\//g, '_');
	}

	function addZone (packed) {
		var i, name, split, normalized;

		if (typeof packed === "string") {
			packed = [packed];
		}

		for (i = 0; i < packed.length; i++) {
			split = packed[i].split('|');
			name = split[0];
			normalized = normalizeName(name);
			zones[normalized] = packed[i];
			names[normalized] = name;
			addToGuesses(normalized, split[2].split(' '));
		}
	}

	function getZone (name, caller) {

		name = normalizeName(name);

		var zone = zones[name];
		var link;

		if (zone instanceof Zone) {
			return zone;
		}

		if (typeof zone === 'string') {
			zone = new Zone(zone);
			zones[name] = zone;
			return zone;
		}

		// Pass getZone to prevent recursion more than 1 level deep
		if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
			zone = zones[name] = new Zone();
			zone._set(link);
			zone.name = names[name];
			return zone;
		}

		return null;
	}

	function getNames () {
		var i, out = [];

		for (i in names) {
			if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
				out.push(names[i]);
			}
		}

		return out.sort();
	}

	function getCountryNames () {
		return Object.keys(countries);
	}

	function addLink (aliases) {
		var i, alias, normal0, normal1;

		if (typeof aliases === "string") {
			aliases = [aliases];
		}

		for (i = 0; i < aliases.length; i++) {
			alias = aliases[i].split('|');

			normal0 = normalizeName(alias[0]);
			normal1 = normalizeName(alias[1]);

			links[normal0] = normal1;
			names[normal0] = alias[0];

			links[normal1] = normal0;
			names[normal1] = alias[1];
		}
	}

	function addCountries (data) {
		var i, country_code, country_zones, split;
		if (!data || !data.length) return;
		for (i = 0; i < data.length; i++) {
			split = data[i].split('|');
			country_code = split[0].toUpperCase();
			country_zones = split[1].split(' ');
			countries[country_code] = new Country(
				country_code,
				country_zones
			);
		}
	}

	function getCountry (name) {
		name = name.toUpperCase();
		return countries[name] || null;
	}

	function zonesForCountry(country, with_offset) {
		country = getCountry(country);

		if (!country) return null;

		var zones = country.zones.sort();

		if (with_offset) {
			return zones.map(function (zone_name) {
				var zone = getZone(zone_name);
				return {
					name: zone_name,
					offset: zone.utcOffset(new Date())
				};
			});
		}

		return zones;
	}

	function loadData (data) {
		addZone(data.zones);
		addLink(data.links);
		addCountries(data.countries);
		tz.dataVersion = data.version;
	}

	function zoneExists (name) {
		if (!zoneExists.didShowError) {
			zoneExists.didShowError = true;
				logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
		}
		return !!getZone(name);
	}

	function needsOffset (m) {
		var isUnixTimestamp = (m._f === 'X' || m._f === 'x');
		return !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);
	}

	function logError (message) {
		if (typeof console !== 'undefined' && typeof console.error === 'function') {
			console.error(message);
		}
	}

	/************************************
		moment.tz namespace
	************************************/

	function tz (input) {
		var args = Array.prototype.slice.call(arguments, 0, -1),
			name = arguments[arguments.length - 1],
			zone = getZone(name),
			out  = moment.utc.apply(null, args);

		if (zone && !moment.isMoment(input) && needsOffset(out)) {
			out.add(zone.parse(out), 'minutes');
		}

		out.tz(name);

		return out;
	}

	tz.version      = VERSION;
	tz.dataVersion  = '';
	tz._zones       = zones;
	tz._links       = links;
	tz._names       = names;
	tz._countries	= countries;
	tz.add          = addZone;
	tz.link         = addLink;
	tz.load         = loadData;
	tz.zone         = getZone;
	tz.zoneExists   = zoneExists; // deprecated in 0.1.0
	tz.guess        = guess;
	tz.names        = getNames;
	tz.Zone         = Zone;
	tz.unpack       = unpack;
	tz.unpackBase60 = unpackBase60;
	tz.needsOffset  = needsOffset;
	tz.moveInvalidForward   = true;
	tz.moveAmbiguousForward = false;
	tz.countries    = getCountryNames;
	tz.zonesForCountry = zonesForCountry;

	/************************************
		Interface with Moment.js
	************************************/

	var fn = moment.fn;

	moment.tz = tz;

	moment.defaultZone = null;

	moment.updateOffset = function (mom, keepTime) {
		var zone = moment.defaultZone,
			offset;

		if (mom._z === undefined) {
			if (zone && needsOffset(mom) && !mom._isUTC) {
				mom._d = moment.utc(mom._a)._d;
				mom.utc().add(zone.parse(mom), 'minutes');
			}
			mom._z = zone;
		}
		if (mom._z) {
			offset = mom._z.utcOffset(mom);
			if (Math.abs(offset) < 16) {
				offset = offset / 60;
			}
			if (mom.utcOffset !== undefined) {
				var z = mom._z;
				mom.utcOffset(-offset, keepTime);
				mom._z = z;
			} else {
				mom.zone(offset, keepTime);
			}
		}
	};

	fn.tz = function (name, keepTime) {
		if (name) {
			if (typeof name !== 'string') {
				throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');
			}
			this._z = getZone(name);
			if (this._z) {
				moment.updateOffset(this, keepTime);
			} else {
				logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
			}
			return this;
		}
		if (this._z) { return this._z.name; }
	};

	function abbrWrap (old) {
		return function () {
			if (this._z) { return this._z.abbr(this); }
			return old.call(this);
		};
	}

	function resetZoneWrap (old) {
		return function () {
			this._z = null;
			return old.apply(this, arguments);
		};
	}

	function resetZoneWrap2 (old) {
		return function () {
			if (arguments.length > 0) this._z = null;
			return old.apply(this, arguments);
		};
	}

	fn.zoneName  = abbrWrap(fn.zoneName);
	fn.zoneAbbr  = abbrWrap(fn.zoneAbbr);
	fn.utc       = resetZoneWrap(fn.utc);
	fn.local     = resetZoneWrap(fn.local);
	fn.utcOffset = resetZoneWrap2(fn.utcOffset);

	moment.tz.setDefault = function(name) {
		if (major < 2 || (major === 2 && minor < 9)) {
			logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');
		}
		moment.defaultZone = name ? getZone(name) : null;
		return moment;
	};

	// Cloning a moment should include the _z property.
	var momentProperties = moment.momentProperties;
	if (Object.prototype.toString.call(momentProperties) === '[object Array]') {
		// moment 2.8.1+
		momentProperties.push('_z');
		momentProperties.push('_a');
	} else if (momentProperties) {
		// moment 2.7.0
		momentProperties._z = null;
	}

	// INJECT DATA

	return moment;
}));

},{"moment":8}],8:[function(require,module,exports){
//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            typeof module !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));

},{}],9:[function(require,module,exports){
/* @flow */
'use strict';

// # simple-statistics
//
// A simple, literate statistics system.

var ss = module.exports = {};

// Linear Regression
ss.linearRegression = require('./src/linear_regression');
ss.linearRegressionLine = require('./src/linear_regression_line');
ss.standardDeviation = require('./src/standard_deviation');
ss.rSquared = require('./src/r_squared');
ss.mode = require('./src/mode');
ss.modeFast = require('./src/mode_fast');
ss.modeSorted = require('./src/mode_sorted');
ss.min = require('./src/min');
ss.max = require('./src/max');
ss.minSorted = require('./src/min_sorted');
ss.maxSorted = require('./src/max_sorted');
ss.sum = require('./src/sum');
ss.sumSimple = require('./src/sum_simple');
ss.product = require('./src/product');
ss.quantile = require('./src/quantile');
ss.quantileSorted = require('./src/quantile_sorted');
ss.iqr = ss.interquartileRange = require('./src/interquartile_range');
ss.medianAbsoluteDeviation = ss.mad = require('./src/median_absolute_deviation');
ss.chunk = require('./src/chunk');
ss.sampleWithReplacement = require('./src/sample_with_replacement');
ss.shuffle = require('./src/shuffle');
ss.shuffleInPlace = require('./src/shuffle_in_place');
ss.sample = require('./src/sample');
ss.ckmeans = require('./src/ckmeans');
ss.uniqueCountSorted = require('./src/unique_count_sorted');
ss.sumNthPowerDeviations = require('./src/sum_nth_power_deviations');
ss.equalIntervalBreaks = require('./src/equal_interval_breaks');

// sample statistics
ss.sampleCovariance = require('./src/sample_covariance');
ss.sampleCorrelation = require('./src/sample_correlation');
ss.sampleVariance = require('./src/sample_variance');
ss.sampleStandardDeviation = require('./src/sample_standard_deviation');
ss.sampleSkewness = require('./src/sample_skewness');

// combinatorics
ss.permutationsHeap = require('./src/permutations_heap');
ss.combinations = require('./src/combinations');
ss.combinationsReplacement = require('./src/combinations_replacement');

// measures of centrality
ss.addToMean = require('./src/add_to_mean');
ss.geometricMean = require('./src/geometric_mean');
ss.harmonicMean = require('./src/harmonic_mean');
ss.mean = ss.average = require('./src/mean');
ss.median = require('./src/median');
ss.medianSorted = require('./src/median_sorted');

ss.rootMeanSquare = ss.rms = require('./src/root_mean_square');
ss.variance = require('./src/variance');
ss.tTest = require('./src/t_test');
ss.tTestTwoSample = require('./src/t_test_two_sample');
// ss.jenks = require('./src/jenks');

// Classifiers
ss.bayesian = require('./src/bayesian_classifier');
ss.perceptron = require('./src/perceptron');

// Distribution-related methods
ss.epsilon = require('./src/epsilon'); // We make ε available to the test suite.
ss.factorial = require('./src/factorial');
ss.bernoulliDistribution = require('./src/bernoulli_distribution');
ss.binomialDistribution = require('./src/binomial_distribution');
ss.poissonDistribution = require('./src/poisson_distribution');
ss.chiSquaredGoodnessOfFit = require('./src/chi_squared_goodness_of_fit');

// Normal distribution
ss.zScore = require('./src/z_score');
ss.cumulativeStdNormalProbability = require('./src/cumulative_std_normal_probability');
ss.standardNormalTable = require('./src/standard_normal_table');
ss.errorFunction = ss.erf = require('./src/error_function');
ss.inverseErrorFunction = require('./src/inverse_error_function');
ss.probit = require('./src/probit');
ss.mixin = require('./src/mixin');

// Root-finding methods
ss.bisect = require('./src/bisect');

},{"./src/add_to_mean":10,"./src/bayesian_classifier":11,"./src/bernoulli_distribution":12,"./src/binomial_distribution":13,"./src/bisect":14,"./src/chi_squared_goodness_of_fit":16,"./src/chunk":17,"./src/ckmeans":18,"./src/combinations":19,"./src/combinations_replacement":20,"./src/cumulative_std_normal_probability":21,"./src/epsilon":22,"./src/equal_interval_breaks":23,"./src/error_function":24,"./src/factorial":25,"./src/geometric_mean":26,"./src/harmonic_mean":27,"./src/interquartile_range":28,"./src/inverse_error_function":29,"./src/linear_regression":30,"./src/linear_regression_line":31,"./src/max":32,"./src/max_sorted":33,"./src/mean":34,"./src/median":35,"./src/median_absolute_deviation":36,"./src/median_sorted":37,"./src/min":38,"./src/min_sorted":39,"./src/mixin":40,"./src/mode":41,"./src/mode_fast":42,"./src/mode_sorted":43,"./src/perceptron":45,"./src/permutations_heap":46,"./src/poisson_distribution":47,"./src/probit":48,"./src/product":49,"./src/quantile":50,"./src/quantile_sorted":51,"./src/r_squared":53,"./src/root_mean_square":54,"./src/sample":55,"./src/sample_correlation":56,"./src/sample_covariance":57,"./src/sample_skewness":58,"./src/sample_standard_deviation":59,"./src/sample_variance":60,"./src/sample_with_replacement":61,"./src/shuffle":62,"./src/shuffle_in_place":63,"./src/standard_deviation":65,"./src/standard_normal_table":66,"./src/sum":67,"./src/sum_nth_power_deviations":68,"./src/sum_simple":69,"./src/t_test":70,"./src/t_test_two_sample":71,"./src/unique_count_sorted":72,"./src/variance":73,"./src/z_score":74}],10:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * When adding a new value to a list, one does not have to necessary
 * recompute the mean of the list in linear time. They can instead use
 * this function to compute the new mean by providing the current mean,
 * the number of elements in the list that produced it and the new
 * value to add.
 *
 * @param {number} mean current mean
 * @param {number} n number of items in the list
 * @param {number} newValue the added value
 * @returns {number} the new mean
 *
 * @example
 * addToMean(14, 5, 53); // => 20.5
 */
function addToMean(mean /*: number*/, n/*: number */, newValue/*: number */)/*: number */ {
    return mean + ((newValue - mean) / (n + 1));
}

module.exports = addToMean;

},{}],11:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * [Bayesian Classifier](http://en.wikipedia.org/wiki/Naive_Bayes_classifier)
 *
 * This is a naïve bayesian classifier that takes
 * singly-nested objects.
 *
 * @class
 * @example
 * var bayes = new BayesianClassifier();
 * bayes.train({
 *   species: 'Cat'
 * }, 'animal');
 * var result = bayes.score({
 *   species: 'Cat'
 * })
 * // result
 * // {
 * //   animal: 1
 * // }
 */
function BayesianClassifier() {
    // The number of items that are currently
    // classified in the model
    this.totalCount = 0;
    // Every item classified in the model
    this.data = {};
}

/**
 * Train the classifier with a new item, which has a single
 * dimension of Javascript literal keys and values.
 *
 * @param {Object} item an object with singly-deep properties
 * @param {string} category the category this item belongs to
 * @return {undefined} adds the item to the classifier
 */
BayesianClassifier.prototype.train = function(item, category) {
    // If the data object doesn't have any values
    // for this category, create a new object for it.
    if (!this.data[category]) {
        this.data[category] = {};
    }

    // Iterate through each key in the item.
    for (var k in item) {
        var v = item[k];
        // Initialize the nested object `data[category][k][item[k]]`
        // with an object of keys that equal 0.
        if (this.data[category][k] === undefined) {
            this.data[category][k] = {};
        }
        if (this.data[category][k][v] === undefined) {
            this.data[category][k][v] = 0;
        }

        // And increment the key for this key/value combination.
        this.data[category][k][v]++;
    }

    // Increment the number of items classified
    this.totalCount++;
};

/**
 * Generate a score of how well this item matches all
 * possible categories based on its attributes
 *
 * @param {Object} item an item in the same format as with train
 * @returns {Object} of probabilities that this item belongs to a
 * given category.
 */
BayesianClassifier.prototype.score = function(item) {
    // Initialize an empty array of odds per category.
    var odds = {}, category;
    // Iterate through each key in the item,
    // then iterate through each category that has been used
    // in previous calls to `.train()`
    for (var k in item) {
        var v = item[k];
        for (category in this.data) {
            // Create an empty object for storing key - value combinations
            // for this category.
            odds[category] = {};

            // If this item doesn't even have a property, it counts for nothing,
            // but if it does have the property that we're looking for from
            // the item to categorize, it counts based on how popular it is
            // versus the whole population.
            if (this.data[category][k]) {
                odds[category][k + '_' + v] = (this.data[category][k][v] || 0) / this.totalCount;
            } else {
                odds[category][k + '_' + v] = 0;
            }
        }
    }

    // Set up a new object that will contain sums of these odds by category
    var oddsSums = {};

    for (category in odds) {
        // Tally all of the odds for each category-combination pair -
        // the non-existence of a category does not add anything to the
        // score.
        oddsSums[category] = 0;
        for (var combination in odds[category]) {
            oddsSums[category] += odds[category][combination];
        }
    }

    return oddsSums;
};

module.exports = BayesianClassifier;

},{}],12:[function(require,module,exports){
'use strict';
/* @flow */

var binomialDistribution = require('./binomial_distribution');

/**
 * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution)
 * is the probability discrete
 * distribution of a random variable which takes value 1 with success
 * probability `p` and value 0 with failure
 * probability `q` = 1 - `p`. It can be used, for example, to represent the
 * toss of a coin, where "1" is defined to mean "heads" and "0" is defined
 * to mean "tails" (or vice versa). It is
 * a special case of a Binomial Distribution
 * where `n` = 1.
 *
 * @param {number} p input value, between 0 and 1 inclusive
 * @returns {number} value of bernoulli distribution at this point
 * @example
 * bernoulliDistribution(0.5); // => { '0': 0.5, '1': 0.5 }
 */
function bernoulliDistribution(p/*: number */) {
    // Check that `p` is a valid probability (0 ≤ p ≤ 1)
    if (p < 0 || p > 1 ) { return NaN; }

    return binomialDistribution(1, p);
}

module.exports = bernoulliDistribution;

},{"./binomial_distribution":13}],13:[function(require,module,exports){
'use strict';
/* @flow */

var epsilon = require('./epsilon');
var factorial = require('./factorial');

/**
 * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution) is the discrete probability
 * distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields
 * success with probability `probability`. Such a success/failure experiment is also called a Bernoulli experiment or
 * Bernoulli trial; when trials = 1, the Binomial Distribution is a Bernoulli Distribution.
 *
 * @param {number} trials number of trials to simulate
 * @param {number} probability
 * @returns {Object} output
 */
function binomialDistribution(
    trials/*: number */,
    probability/*: number */)/*: ?Object */ {
    // Check that `p` is a valid probability (0 ≤ p ≤ 1),
    // that `n` is an integer, strictly positive.
    if (probability < 0 || probability > 1 ||
        trials <= 0 || trials % 1 !== 0) {
        return undefined;
    }

    // We initialize `x`, the random variable, and `accumulator`, an accumulator
    // for the cumulative distribution function to 0. `distribution_functions`
    // is the object we'll return with the `probability_of_x` and the
    // `cumulativeProbability_of_x`, as well as the calculated mean &
    // variance. We iterate until the `cumulativeProbability_of_x` is
    // within `epsilon` of 1.0.
    var x = 0,
        cumulativeProbability = 0,
        cells = {};

    // This algorithm iterates through each potential outcome,
    // until the `cumulativeProbability` is very close to 1, at
    // which point we've defined the vast majority of outcomes
    do {
        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)
        cells[x] = factorial(trials) /
            (factorial(x) * factorial(trials - x)) *
            (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));
        cumulativeProbability += cells[x];
        x++;
    // when the cumulativeProbability is nearly 1, we've calculated
    // the useful range of this distribution
    } while (cumulativeProbability < 1 - epsilon);

    return cells;
}

module.exports = binomialDistribution;

},{"./epsilon":22,"./factorial":25}],14:[function(require,module,exports){
'use strict';
/* @flow */

var sign = require('./sign');
/**
 * [Bisection method](https://en.wikipedia.org/wiki/Bisection_method) is a root-finding 
 * method that repeatedly bisects an interval to find the root.
 * 
 * This function returns a numerical approximation to the exact value.
 * 
 * @param {Function} func input function
 * @param {Number} start - start of interval
 * @param {Number} end - end of interval
 * @param {Number} maxIterations - the maximum number of iterations
 * @param {Number} errorTolerance - the error tolerance
 * @returns {Number} estimated root value
 * @throws {TypeError} Argument func must be a function
 * 
 * @example
 * bisect(Math.cos,0,4,100,0.003); // => 1.572265625
 */
function bisect(
    func/*: (x: any) => number */,
    start/*: number */,
    end/*: number */,
    maxIterations/*: number */,
    errorTolerance/*: number */)/*:number*/ {

    if (typeof func !== 'function') throw new TypeError('func must be a function');
    
    for (var i = 0; i < maxIterations; i++) {
        var output = (start + end) / 2;

        if (func(output) === 0 || Math.abs((end - start) / 2) < errorTolerance) {
            return output;
        }

        if (sign(func(output)) === sign(func(start))) {
            start = output;
        } else {
            end = output;
        }
    }
    
    throw new Error('maximum number of iterations exceeded');
}

module.exports = bisect;

},{"./sign":64}],15:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * **Percentage Points of the χ2 (Chi-Squared) Distribution**
 *
 * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution) is used in the common
 * chi-squared tests for goodness of fit of an observed distribution to a theoretical one, the independence of two
 * criteria of classification of qualitative data, and in confidence interval estimation for a population standard
 * deviation of a normal distribution from a sample standard deviation.
 *
 * Values from Appendix 1, Table III of William W. Hines & Douglas C. Montgomery, "Probability and Statistics in
 * Engineering and Management Science", Wiley (1980).
 */
var chiSquaredDistributionTable = {
    '1': {
        '0.995': 0,
        '0.99': 0,
        '0.975': 0,
        '0.95': 0,
        '0.9': 0.02,
        '0.5': 0.45,
        '0.1': 2.71,
        '0.05': 3.84,
        '0.025': 5.02,
        '0.01': 6.63,
        '0.005': 7.88
    },
    '2': {
        '0.995': 0.01,
        '0.99': 0.02,
        '0.975': 0.05,
        '0.95': 0.1,
        '0.9': 0.21,
        '0.5': 1.39,
        '0.1': 4.61,
        '0.05': 5.99,
        '0.025': 7.38,
        '0.01': 9.21,
        '0.005': 10.6
    },
    '3': {
        '0.995': 0.07,
        '0.99': 0.11,
        '0.975': 0.22,
        '0.95': 0.35,
        '0.9': 0.58,
        '0.5': 2.37,
        '0.1': 6.25,
        '0.05': 7.81,
        '0.025': 9.35,
        '0.01': 11.34,
        '0.005': 12.84
    },
    '4': {
        '0.995': 0.21,
        '0.99': 0.3,
        '0.975': 0.48,
        '0.95': 0.71,
        '0.9': 1.06,
        '0.5': 3.36,
        '0.1': 7.78,
        '0.05': 9.49,
        '0.025': 11.14,
        '0.01': 13.28,
        '0.005': 14.86
    },
    '5': {
        '0.995': 0.41,
        '0.99': 0.55,
        '0.975': 0.83,
        '0.95': 1.15,
        '0.9': 1.61,
        '0.5': 4.35,
        '0.1': 9.24,
        '0.05': 11.07,
        '0.025': 12.83,
        '0.01': 15.09,
        '0.005': 16.75
    },
    '6': {
        '0.995': 0.68,
        '0.99': 0.87,
        '0.975': 1.24,
        '0.95': 1.64,
        '0.9': 2.2,
        '0.5': 5.35,
        '0.1': 10.65,
        '0.05': 12.59,
        '0.025': 14.45,
        '0.01': 16.81,
        '0.005': 18.55
    },
    '7': {
        '0.995': 0.99,
        '0.99': 1.25,
        '0.975': 1.69,
        '0.95': 2.17,
        '0.9': 2.83,
        '0.5': 6.35,
        '0.1': 12.02,
        '0.05': 14.07,
        '0.025': 16.01,
        '0.01': 18.48,
        '0.005': 20.28
    },
    '8': {
        '0.995': 1.34,
        '0.99': 1.65,
        '0.975': 2.18,
        '0.95': 2.73,
        '0.9': 3.49,
        '0.5': 7.34,
        '0.1': 13.36,
        '0.05': 15.51,
        '0.025': 17.53,
        '0.01': 20.09,
        '0.005': 21.96
    },
    '9': {
        '0.995': 1.73,
        '0.99': 2.09,
        '0.975': 2.7,
        '0.95': 3.33,
        '0.9': 4.17,
        '0.5': 8.34,
        '0.1': 14.68,
        '0.05': 16.92,
        '0.025': 19.02,
        '0.01': 21.67,
        '0.005': 23.59
    },
    '10': {
        '0.995': 2.16,
        '0.99': 2.56,
        '0.975': 3.25,
        '0.95': 3.94,
        '0.9': 4.87,
        '0.5': 9.34,
        '0.1': 15.99,
        '0.05': 18.31,
        '0.025': 20.48,
        '0.01': 23.21,
        '0.005': 25.19
    },
    '11': {
        '0.995': 2.6,
        '0.99': 3.05,
        '0.975': 3.82,
        '0.95': 4.57,
        '0.9': 5.58,
        '0.5': 10.34,
        '0.1': 17.28,
        '0.05': 19.68,
        '0.025': 21.92,
        '0.01': 24.72,
        '0.005': 26.76
    },
    '12': {
        '0.995': 3.07,
        '0.99': 3.57,
        '0.975': 4.4,
        '0.95': 5.23,
        '0.9': 6.3,
        '0.5': 11.34,
        '0.1': 18.55,
        '0.05': 21.03,
        '0.025': 23.34,
        '0.01': 26.22,
        '0.005': 28.3
    },
    '13': {
        '0.995': 3.57,
        '0.99': 4.11,
        '0.975': 5.01,
        '0.95': 5.89,
        '0.9': 7.04,
        '0.5': 12.34,
        '0.1': 19.81,
        '0.05': 22.36,
        '0.025': 24.74,
        '0.01': 27.69,
        '0.005': 29.82
    },
    '14': {
        '0.995': 4.07,
        '0.99': 4.66,
        '0.975': 5.63,
        '0.95': 6.57,
        '0.9': 7.79,
        '0.5': 13.34,
        '0.1': 21.06,
        '0.05': 23.68,
        '0.025': 26.12,
        '0.01': 29.14,
        '0.005': 31.32
    },
    '15': {
        '0.995': 4.6,
        '0.99': 5.23,
        '0.975': 6.27,
        '0.95': 7.26,
        '0.9': 8.55,
        '0.5': 14.34,
        '0.1': 22.31,
        '0.05': 25,
        '0.025': 27.49,
        '0.01': 30.58,
        '0.005': 32.8
    },
    '16': {
        '0.995': 5.14,
        '0.99': 5.81,
        '0.975': 6.91,
        '0.95': 7.96,
        '0.9': 9.31,
        '0.5': 15.34,
        '0.1': 23.54,
        '0.05': 26.3,
        '0.025': 28.85,
        '0.01': 32,
        '0.005': 34.27
    },
    '17': {
        '0.995': 5.7,
        '0.99': 6.41,
        '0.975': 7.56,
        '0.95': 8.67,
        '0.9': 10.09,
        '0.5': 16.34,
        '0.1': 24.77,
        '0.05': 27.59,
        '0.025': 30.19,
        '0.01': 33.41,
        '0.005': 35.72
    },
    '18': {
        '0.995': 6.26,
        '0.99': 7.01,
        '0.975': 8.23,
        '0.95': 9.39,
        '0.9': 10.87,
        '0.5': 17.34,
        '0.1': 25.99,
        '0.05': 28.87,
        '0.025': 31.53,
        '0.01': 34.81,
        '0.005': 37.16
    },
    '19': {
        '0.995': 6.84,
        '0.99': 7.63,
        '0.975': 8.91,
        '0.95': 10.12,
        '0.9': 11.65,
        '0.5': 18.34,
        '0.1': 27.2,
        '0.05': 30.14,
        '0.025': 32.85,
        '0.01': 36.19,
        '0.005': 38.58
    },
    '20': {
        '0.995': 7.43,
        '0.99': 8.26,
        '0.975': 9.59,
        '0.95': 10.85,
        '0.9': 12.44,
        '0.5': 19.34,
        '0.1': 28.41,
        '0.05': 31.41,
        '0.025': 34.17,
        '0.01': 37.57,
        '0.005': 40
    },
    '21': {
        '0.995': 8.03,
        '0.99': 8.9,
        '0.975': 10.28,
        '0.95': 11.59,
        '0.9': 13.24,
        '0.5': 20.34,
        '0.1': 29.62,
        '0.05': 32.67,
        '0.025': 35.48,
        '0.01': 38.93,
        '0.005': 41.4
    },
    '22': {
        '0.995': 8.64,
        '0.99': 9.54,
        '0.975': 10.98,
        '0.95': 12.34,
        '0.9': 14.04,
        '0.5': 21.34,
        '0.1': 30.81,
        '0.05': 33.92,
        '0.025': 36.78,
        '0.01': 40.29,
        '0.005': 42.8
    },
    '23': {
        '0.995': 9.26,
        '0.99': 10.2,
        '0.975': 11.69,
        '0.95': 13.09,
        '0.9': 14.85,
        '0.5': 22.34,
        '0.1': 32.01,
        '0.05': 35.17,
        '0.025': 38.08,
        '0.01': 41.64,
        '0.005': 44.18
    },
    '24': {
        '0.995': 9.89,
        '0.99': 10.86,
        '0.975': 12.4,
        '0.95': 13.85,
        '0.9': 15.66,
        '0.5': 23.34,
        '0.1': 33.2,
        '0.05': 36.42,
        '0.025': 39.36,
        '0.01': 42.98,
        '0.005': 45.56
    },
    '25': {
        '0.995': 10.52,
        '0.99': 11.52,
        '0.975': 13.12,
        '0.95': 14.61,
        '0.9': 16.47,
        '0.5': 24.34,
        '0.1': 34.28,
        '0.05': 37.65,
        '0.025': 40.65,
        '0.01': 44.31,
        '0.005': 46.93
    },
    '26': {
        '0.995': 11.16,
        '0.99': 12.2,
        '0.975': 13.84,
        '0.95': 15.38,
        '0.9': 17.29,
        '0.5': 25.34,
        '0.1': 35.56,
        '0.05': 38.89,
        '0.025': 41.92,
        '0.01': 45.64,
        '0.005': 48.29
    },
    '27': {
        '0.995': 11.81,
        '0.99': 12.88,
        '0.975': 14.57,
        '0.95': 16.15,
        '0.9': 18.11,
        '0.5': 26.34,
        '0.1': 36.74,
        '0.05': 40.11,
        '0.025': 43.19,
        '0.01': 46.96,
        '0.005': 49.65
    },
    '28': {
        '0.995': 12.46,
        '0.99': 13.57,
        '0.975': 15.31,
        '0.95': 16.93,
        '0.9': 18.94,
        '0.5': 27.34,
        '0.1': 37.92,
        '0.05': 41.34,
        '0.025': 44.46,
        '0.01': 48.28,
        '0.005': 50.99
    },
    '29': {
        '0.995': 13.12,
        '0.99': 14.26,
        '0.975': 16.05,
        '0.95': 17.71,
        '0.9': 19.77,
        '0.5': 28.34,
        '0.1': 39.09,
        '0.05': 42.56,
        '0.025': 45.72,
        '0.01': 49.59,
        '0.005': 52.34
    },
    '30': {
        '0.995': 13.79,
        '0.99': 14.95,
        '0.975': 16.79,
        '0.95': 18.49,
        '0.9': 20.6,
        '0.5': 29.34,
        '0.1': 40.26,
        '0.05': 43.77,
        '0.025': 46.98,
        '0.01': 50.89,
        '0.005': 53.67
    },
    '40': {
        '0.995': 20.71,
        '0.99': 22.16,
        '0.975': 24.43,
        '0.95': 26.51,
        '0.9': 29.05,
        '0.5': 39.34,
        '0.1': 51.81,
        '0.05': 55.76,
        '0.025': 59.34,
        '0.01': 63.69,
        '0.005': 66.77
    },
    '50': {
        '0.995': 27.99,
        '0.99': 29.71,
        '0.975': 32.36,
        '0.95': 34.76,
        '0.9': 37.69,
        '0.5': 49.33,
        '0.1': 63.17,
        '0.05': 67.5,
        '0.025': 71.42,
        '0.01': 76.15,
        '0.005': 79.49
    },
    '60': {
        '0.995': 35.53,
        '0.99': 37.48,
        '0.975': 40.48,
        '0.95': 43.19,
        '0.9': 46.46,
        '0.5': 59.33,
        '0.1': 74.4,
        '0.05': 79.08,
        '0.025': 83.3,
        '0.01': 88.38,
        '0.005': 91.95
    },
    '70': {
        '0.995': 43.28,
        '0.99': 45.44,
        '0.975': 48.76,
        '0.95': 51.74,
        '0.9': 55.33,
        '0.5': 69.33,
        '0.1': 85.53,
        '0.05': 90.53,
        '0.025': 95.02,
        '0.01': 100.42,
        '0.005': 104.22
    },
    '80': {
        '0.995': 51.17,
        '0.99': 53.54,
        '0.975': 57.15,
        '0.95': 60.39,
        '0.9': 64.28,
        '0.5': 79.33,
        '0.1': 96.58,
        '0.05': 101.88,
        '0.025': 106.63,
        '0.01': 112.33,
        '0.005': 116.32
    },
    '90': {
        '0.995': 59.2,
        '0.99': 61.75,
        '0.975': 65.65,
        '0.95': 69.13,
        '0.9': 73.29,
        '0.5': 89.33,
        '0.1': 107.57,
        '0.05': 113.14,
        '0.025': 118.14,
        '0.01': 124.12,
        '0.005': 128.3
    },
    '100': {
        '0.995': 67.33,
        '0.99': 70.06,
        '0.975': 74.22,
        '0.95': 77.93,
        '0.9': 82.36,
        '0.5': 99.33,
        '0.1': 118.5,
        '0.05': 124.34,
        '0.025': 129.56,
        '0.01': 135.81,
        '0.005': 140.17
    }
};

module.exports = chiSquaredDistributionTable;

},{}],16:[function(require,module,exports){
'use strict';
/* @flow */

var mean = require('./mean');
var chiSquaredDistributionTable = require('./chi_squared_distribution_table');

/**
 * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test)
 * uses a measure of goodness of fit which is the sum of differences between observed and expected outcome frequencies
 * (that is, counts of observations), each squared and divided by the number of observations expected given the
 * hypothesized distribution. The resulting χ2 statistic, `chiSquared`, can be compared to the chi-squared distribution
 * to determine the goodness of fit. In order to determine the degrees of freedom of the chi-squared distribution, one
 * takes the total number of observed frequencies and subtracts the number of estimated parameters. The test statistic
 * follows, approximately, a chi-square distribution with (k − c) degrees of freedom where `k` is the number of non-empty
 * cells and `c` is the number of estimated parameters for the distribution.
 *
 * @param {Array<number>} data
 * @param {Function} distributionType a function that returns a point in a distribution:
 * for instance, binomial, bernoulli, or poisson
 * @param {number} significance
 * @returns {number} chi squared goodness of fit
 * @example
 * // Data from Poisson goodness-of-fit example 10-19 in William W. Hines & Douglas C. Montgomery,
 * // "Probability and Statistics in Engineering and Management Science", Wiley (1980).
 * var data1019 = [
 *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 *     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
 *     2, 2, 2, 2, 2, 2, 2, 2, 2,
 *     3, 3, 3, 3
 * ];
 * ss.chiSquaredGoodnessOfFit(data1019, ss.poissonDistribution, 0.05)); //= false
 */
function chiSquaredGoodnessOfFit(
    data/*: Array<number> */,
    distributionType/*: Function */,
    significance/*: number */)/*: boolean */ {
    // Estimate from the sample data, a weighted mean.
    var inputMean = mean(data),
        // Calculated value of the χ2 statistic.
        chiSquared = 0,
        // Degrees of freedom, calculated as (number of class intervals -
        // number of hypothesized distribution parameters estimated - 1)
        degreesOfFreedom,
        // Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test.
        // Lose one degree of freedom for estimating `lambda` from the sample data.
        c = 1,
        // The hypothesized distribution.
        // Generate the hypothesized distribution.
        hypothesizedDistribution = distributionType(inputMean),
        observedFrequencies = [],
        expectedFrequencies = [],
        k;

    // Create an array holding a histogram from the sample data, of
    // the form `{ value: numberOfOcurrences }`
    for (var i = 0; i < data.length; i++) {
        if (observedFrequencies[data[i]] === undefined) {
            observedFrequencies[data[i]] = 0;
        }
        observedFrequencies[data[i]]++;
    }

    // The histogram we created might be sparse - there might be gaps
    // between values. So we iterate through the histogram, making
    // sure that instead of undefined, gaps have 0 values.
    for (i = 0; i < observedFrequencies.length; i++) {
        if (observedFrequencies[i] === undefined) {
            observedFrequencies[i] = 0;
        }
    }

    // Create an array holding a histogram of expected data given the
    // sample size and hypothesized distribution.
    for (k in hypothesizedDistribution) {
        if (k in observedFrequencies) {
            expectedFrequencies[+k] = hypothesizedDistribution[k] * data.length;
        }
    }

    // Working backward through the expected frequencies, collapse classes
    // if less than three observations are expected for a class.
    // This transformation is applied to the observed frequencies as well.
    for (k = expectedFrequencies.length - 1; k >= 0; k--) {
        if (expectedFrequencies[k] < 3) {
            expectedFrequencies[k - 1] += expectedFrequencies[k];
            expectedFrequencies.pop();

            observedFrequencies[k - 1] += observedFrequencies[k];
            observedFrequencies.pop();
        }
    }

    // Iterate through the squared differences between observed & expected
    // frequencies, accumulating the `chiSquared` statistic.
    for (k = 0; k < observedFrequencies.length; k++) {
        chiSquared += Math.pow(
            observedFrequencies[k] - expectedFrequencies[k], 2) /
            expectedFrequencies[k];
    }

    // Calculate degrees of freedom for this test and look it up in the
    // `chiSquaredDistributionTable` in order to
    // accept or reject the goodness-of-fit of the hypothesized distribution.
    degreesOfFreedom = observedFrequencies.length - c - 1;
    return chiSquaredDistributionTable[degreesOfFreedom][significance] < chiSquared;
}

module.exports = chiSquaredGoodnessOfFit;

},{"./chi_squared_distribution_table":15,"./mean":34}],17:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * Split an array into chunks of a specified size. This function
 * has the same behavior as [PHP's array_chunk](http://php.net/manual/en/function.array-chunk.php)
 * function, and thus will insert smaller-sized chunks at the end if
 * the input size is not divisible by the chunk size.
 *
 * `sample` is expected to be an array, and `chunkSize` a number.
 * The `sample` array can contain any kind of data.
 *
 * @param {Array} sample any array of values
 * @param {number} chunkSize size of each output array
 * @returns {Array<Array>} a chunked array
 * @example
 * chunk([1, 2, 3, 4, 5, 6], 2);
 * // => [[1, 2], [3, 4], [5, 6]]
 */
function chunk(sample/*:Array<any>*/, chunkSize/*:number*/)/*:?Array<Array<any>>*/ {

    // a list of result chunks, as arrays in an array
    var output = [];

    // `chunkSize` must be zero or higher - otherwise the loop below,
    // in which we call `start += chunkSize`, will loop infinitely.
    // So, we'll detect and throw in that case to indicate
    // invalid input.
    if (chunkSize <= 0) {
        throw new Error('chunk size must be a positive integer');
    }

    // `start` is the index at which `.slice` will start selecting
    // new array elements
    for (var start = 0; start < sample.length; start += chunkSize) {

        // for each chunk, slice that part of the array and add it
        // to the output. The `.slice` function does not change
        // the original array.
        output.push(sample.slice(start, start + chunkSize));
    }
    return output;
}

module.exports = chunk;

},{}],18:[function(require,module,exports){
'use strict';
/* @flow */

var uniqueCountSorted = require('./unique_count_sorted'),
    numericSort = require('./numeric_sort');

/**
 * Create a new column x row matrix.
 *
 * @private
 * @param {number} columns
 * @param {number} rows
 * @return {Array<Array<number>>} matrix
 * @example
 * makeMatrix(10, 10);
 */
function makeMatrix(columns, rows) {
    var matrix = [];
    for (var i = 0; i < columns; i++) {
        var column = [];
        for (var j = 0; j < rows; j++) {
            column.push(0);
        }
        matrix.push(column);
    }
    return matrix;
}

/**
 * Generates incrementally computed values based on the sums and sums of
 * squares for the data array
 *
 * @private
 * @param {number} j
 * @param {number} i
 * @param {Array<number>} sums
 * @param {Array<number>} sumsOfSquares
 * @return {number}
 * @example
 * ssq(0, 1, [-1, 0, 2], [1, 1, 5]);
 */
function ssq(j, i, sums, sumsOfSquares) {
    var sji; // s(j, i)
    if (j > 0) {
        var muji = (sums[i] - sums[j - 1]) / (i - j + 1); // mu(j, i)
        sji = sumsOfSquares[i] - sumsOfSquares[j - 1] - (i - j + 1) * muji * muji;
    } else {
        sji = sumsOfSquares[i] - sums[i] * sums[i] / (i + 1);
    }
    if (sji < 0) {
        return 0;
    }
    return sji;
}

/**
 * Function that recursively divides and conquers computations
 * for cluster j
 *
 * @private
 * @param {number} iMin Minimum index in cluster to be computed
 * @param {number} iMax Maximum index in cluster to be computed
 * @param {number} cluster Index of the cluster currently being computed
 * @param {Array<Array<number>>} matrix
 * @param {Array<Array<number>>} backtrackMatrix
 * @param {Array<number>} sums
 * @param {Array<number>} sumsOfSquares
 */
function fillMatrixColumn(iMin, iMax, cluster, matrix, backtrackMatrix, sums, sumsOfSquares) {
    if (iMin > iMax) {
        return;
    }

    // Start at midpoint between iMin and iMax
    var i = Math.floor((iMin + iMax) / 2);

    matrix[cluster][i] = matrix[cluster - 1][i - 1];
    backtrackMatrix[cluster][i] = i;

    var jlow = cluster; // the lower end for j

    if (iMin > cluster) {
        jlow = Math.max(jlow, backtrackMatrix[cluster][iMin - 1] || 0);
    }
    jlow = Math.max(jlow, backtrackMatrix[cluster - 1][i] || 0);

    var jhigh = i - 1; // the upper end for j
    if (iMax < matrix.length - 1) {
        jhigh = Math.min(jhigh, backtrackMatrix[cluster][iMax + 1] || 0);
    }

    var sji;
    var sjlowi;
    var ssqjlow;
    var ssqj;
    for (var j = jhigh; j >= jlow; --j) {
        sji = ssq(j, i, sums, sumsOfSquares);

        if (sji + matrix[cluster - 1][jlow - 1] >= matrix[cluster][i]) {
            break;
        }

        // Examine the lower bound of the cluster border
        sjlowi = ssq(jlow, i, sums, sumsOfSquares);

        ssqjlow = sjlowi + matrix[cluster - 1][jlow - 1];

        if (ssqjlow < matrix[cluster][i]) {
            // Shrink the lower bound
            matrix[cluster][i] = ssqjlow;
            backtrackMatrix[cluster][i] = jlow;
        }
        jlow++;

        ssqj = sji + matrix[cluster - 1][j - 1];
        if (ssqj < matrix[cluster][i]) {
            matrix[cluster][i] = ssqj;
            backtrackMatrix[cluster][i] = j;
        }
    }

    fillMatrixColumn(iMin, i - 1, cluster, matrix, backtrackMatrix, sums, sumsOfSquares);
    fillMatrixColumn(i + 1, iMax, cluster, matrix, backtrackMatrix, sums, sumsOfSquares);
}

/**
 * Initializes the main matrices used in Ckmeans and kicks
 * off the divide and conquer cluster computation strategy
 *
 * @private
 * @param {Array<number>} data sorted array of values
 * @param {Array<Array<number>>} matrix
 * @param {Array<Array<number>>} backtrackMatrix
 */
function fillMatrices(data, matrix, backtrackMatrix) {
    var nValues = matrix[0].length;

    // Shift values by the median to improve numeric stability
    var shift = data[Math.floor(nValues / 2)];

    // Cumulative sum and cumulative sum of squares for all values in data array
    var sums = [];
    var sumsOfSquares = [];

    // Initialize first column in matrix & backtrackMatrix
    for (var i = 0, shiftedValue; i < nValues; ++i) {
        shiftedValue = data[i] - shift;
        if (i === 0) {
            sums.push(shiftedValue);
            sumsOfSquares.push(shiftedValue * shiftedValue);
        } else {
            sums.push(sums[i - 1] + shiftedValue);
            sumsOfSquares.push(sumsOfSquares[i - 1] + shiftedValue * shiftedValue);
        }

        // Initialize for cluster = 0
        matrix[0][i] = ssq(0, i, sums, sumsOfSquares);
        backtrackMatrix[0][i] = 0;
    }

    // Initialize the rest of the columns
    var iMin;
    for (var cluster = 1; cluster < matrix.length; ++cluster) {
        if (cluster < matrix.length - 1) {
            iMin = cluster;
        } else {
            // No need to compute matrix[K-1][0] ... matrix[K-1][N-2]
            iMin = nValues - 1;
        }

        fillMatrixColumn(iMin, nValues - 1, cluster, matrix, backtrackMatrix, sums, sumsOfSquares);
    }
}

/**
 * Ckmeans clustering is an improvement on heuristic-based clustering
 * approaches like Jenks. The algorithm was developed in
 * [Haizhou Wang and Mingzhou Song](http://journal.r-project.org/archive/2011-2/RJournal_2011-2_Wang+Song.pdf)
 * as a [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) approach
 * to the problem of clustering numeric data into groups with the least
 * within-group sum-of-squared-deviations.
 *
 * Minimizing the difference within groups - what Wang & Song refer to as
 * `withinss`, or within sum-of-squares, means that groups are optimally
 * homogenous within and the data is split into representative groups.
 * This is very useful for visualization, where you may want to represent
 * a continuous variable in discrete color or style groups. This function
 * can provide groups that emphasize differences between data.
 *
 * Being a dynamic approach, this algorithm is based on two matrices that
 * store incrementally-computed values for squared deviations and backtracking
 * indexes.
 *
 * This implementation is based on Ckmeans 3.4.6, which introduced a new divide
 * and conquer approach that improved runtime from O(kn^2) to O(kn log(n)).
 *
 * Unlike the [original implementation](https://cran.r-project.org/web/packages/Ckmeans.1d.dp/index.html),
 * this implementation does not include any code to automatically determine
 * the optimal number of clusters: this information needs to be explicitly
 * provided.
 *
 * ### References
 * _Ckmeans.1d.dp: Optimal k-means Clustering in One Dimension by Dynamic
 * Programming_ Haizhou Wang and Mingzhou Song ISSN 2073-4859
 *
 * from The R Journal Vol. 3/2, December 2011
 * @param {Array<number>} data input data, as an array of number values
 * @param {number} nClusters number of desired classes. This cannot be
 * greater than the number of values in the data array.
 * @returns {Array<Array<number>>} clustered input
 * @example
 * ckmeans([-1, 2, -1, 2, 4, 5, 6, -1, 2, -1], 3);
 * // The input, clustered into groups of similar numbers.
 * //= [[-1, -1, -1, -1], [2, 2, 2], [4, 5, 6]]);
 */
function ckmeans(data/*: Array<number> */, nClusters/*: number */)/*: Array<Array<number>> */ {

    if (nClusters > data.length) {
        throw new Error('Cannot generate more classes than there are data values');
    }

    var sorted = numericSort(data),
        // we'll use this as the maximum number of clusters
        uniqueCount = uniqueCountSorted(sorted);

    // if all of the input values are identical, there's one cluster
    // with all of the input in it.
    if (uniqueCount === 1) {
        return [sorted];
    }

    // named 'S' originally
    var matrix = makeMatrix(nClusters, sorted.length),
        // named 'J' originally
        backtrackMatrix = makeMatrix(nClusters, sorted.length);

    // This is a dynamic programming way to solve the problem of minimizing
    // within-cluster sum of squares. It's similar to linear regression
    // in this way, and this calculation incrementally computes the
    // sum of squares that are later read.
    fillMatrices(sorted, matrix, backtrackMatrix);

    // The real work of Ckmeans clustering happens in the matrix generation:
    // the generated matrices encode all possible clustering combinations, and
    // once they're generated we can solve for the best clustering groups
    // very quickly.
    var clusters = [],
        clusterRight = backtrackMatrix[0].length - 1;

    // Backtrack the clusters from the dynamic programming matrix. This
    // starts at the bottom-right corner of the matrix (if the top-left is 0, 0),
    // and moves the cluster target with the loop.
    for (var cluster = backtrackMatrix.length - 1; cluster >= 0; cluster--) {

        var clusterLeft = backtrackMatrix[cluster][clusterRight];

        // fill the cluster from the sorted input by taking a slice of the
        // array. the backtrack matrix makes this easy - it stores the
        // indexes where the cluster should start and end.
        clusters[cluster] = sorted.slice(clusterLeft, clusterRight + 1);

        if (cluster > 0) {
            clusterRight = clusterLeft - 1;
        }
    }

    return clusters;
}

module.exports = ckmeans;

},{"./numeric_sort":44,"./unique_count_sorted":72}],19:[function(require,module,exports){
/* @flow */
'use strict';
/**
 * Implementation of Combinations
 * Combinations are unique subsets of a collection - in this case, k elements from a collection at a time.
 * https://en.wikipedia.org/wiki/Combination
 * @param {Array} elements any type of data
 * @param {int} k the number of objects in each group (without replacement)
 * @returns {Array<Array>} array of permutations
 * @example
 * combinations([1, 2, 3], 2); // => [[1,2], [1,3], [2,3]]
 */

function combinations(elements /*: Array<any> */, k/*: number */) {
    var i;
    var subI;
    var combinationList = [];
    var subsetCombinations;
    var next;

    for (i = 0; i < elements.length; i++) {
        if (k === 1) {
            combinationList.push([elements[i]])
        } else {
            subsetCombinations = combinations(elements.slice( i + 1, elements.length ), k - 1);
            for (subI = 0; subI < subsetCombinations.length; subI++) {
                next = subsetCombinations[subI];
                next.unshift(elements[i]);
                combinationList.push(next);
            }
        }
    }
    return combinationList;
}

module.exports = combinations;

},{}],20:[function(require,module,exports){
/* @flow */
'use strict';

/**
 * Implementation of [Combinations](https://en.wikipedia.org/wiki/Combination) with replacement
 * Combinations are unique subsets of a collection - in this case, k elements from a collection at a time.
 * 'With replacement' means that a given element can be chosen multiple times.
 * Unlike permutation, order doesn't matter for combinations.
 * 
 * @param {Array} elements any type of data
 * @param {int} k the number of objects in each group (without replacement)
 * @returns {Array<Array>} array of permutations
 * @example
 * combinationsReplacement([1, 2], 2); // => [[1, 1], [1, 2], [2, 2]]
 */
function combinationsReplacement(
    elements /*: Array<any> */,
    k /*: number */) {

    var combinationList = [];

    for (var i = 0; i < elements.length; i++) {
        if (k === 1) {
            // If we're requested to find only one element, we don't need
            // to recurse: just push `elements[i]` onto the list of combinations.
            combinationList.push([elements[i]])
        } else {
            // Otherwise, recursively find combinations, given `k - 1`. Note that
            // we request `k - 1`, so if you were looking for k=3 combinations, we're
            // requesting k=2. This -1 gets reversed in the for loop right after this
            // code, since we concatenate `elements[i]` onto the selected combinations,
            // bringing `k` back up to your requested level.
            // This recursion may go many levels deep, since it only stops once
            // k=1.
            var subsetCombinations = combinationsReplacement(
                elements.slice(i, elements.length),
                k - 1);

            for (var j = 0; j < subsetCombinations.length; j++) {
                combinationList.push([elements[i]]
                    .concat(subsetCombinations[j]));
            }
        }
    }

    return combinationList;
}

module.exports = combinationsReplacement;

},{}],21:[function(require,module,exports){
'use strict';
/* @flow */

var standardNormalTable = require('./standard_normal_table');

/**
 * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**
 *
 * Since probability tables cannot be
 * printed for every normal distribution, as there are an infinite variety
 * of normal distributions, it is common practice to convert a normal to a
 * standard normal and then use the standard normal table to find probabilities.
 *
 * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability
 * instead of looking it up in a table.
 *
 * @param {number} z
 * @returns {number} cumulative standard normal probability
 */
function cumulativeStdNormalProbability(z /*:number */)/*:number */ {

    // Calculate the position of this value.
    var absZ = Math.abs(z),
        // Each row begins with a different
        // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table
        // corresponds to a range of 0.01 in the input values, so the value is
        // multiplied by 100.
        index = Math.min(Math.round(absZ * 100), standardNormalTable.length - 1);

    // The index we calculate must be in the table as a positive value,
    // but we still pay attention to whether the input is positive
    // or negative, and flip the output value as a last step.
    if (z >= 0) {
        return standardNormalTable[index];
    } else {
        // due to floating-point arithmetic, values in the table with
        // 4 significant figures can nevertheless end up as repeating
        // fractions when they're computed here.
        return +(1 - standardNormalTable[index]).toFixed(4);
    }
}

module.exports = cumulativeStdNormalProbability;

},{"./standard_normal_table":66}],22:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * We use `ε`, epsilon, as a stopping criterion when we want to iterate
 * until we're "close enough". Epsilon is a very small number: for
 * simple statistics, that number is **0.0001**
 *
 * This is used in calculations like the binomialDistribution, in which
 * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):
 * it progresses until it is close enough.
 *
 * Below is an example of using epsilon in [gradient descent](https://en.wikipedia.org/wiki/Gradient_descent),
 * where we're trying to find a local minimum of a function's derivative,
 * given by the `fDerivative` method.
 *
 * @example
 * // From calculation, we expect that the local minimum occurs at x=9/4
 * var x_old = 0;
 * // The algorithm starts at x=6
 * var x_new = 6;
 * var stepSize = 0.01;
 *
 * function fDerivative(x) {
 *   return 4 * Math.pow(x, 3) - 9 * Math.pow(x, 2);
 * }
 *
 * // The loop runs until the difference between the previous
 * // value and the current value is smaller than epsilon - a rough
 * // meaure of 'close enough'
 * while (Math.abs(x_new - x_old) > ss.epsilon) {
 *   x_old = x_new;
 *   x_new = x_old - stepSize * fDerivative(x_old);
 * }
 *
 * console.log('Local minimum occurs at', x_new);
 */
var epsilon = 0.0001;

module.exports = epsilon;

},{}],23:[function(require,module,exports){
'use strict';
/* @flow */

var max = require('./max'),
    min = require('./min');

/**
 * Given an array of data, this will find the extent of the
 * data and return an array of breaks that can be used
 * to categorize the data into a number of classes. The
 * returned array will always be 1 longer than the number of
 * classes because it includes the minimum value.
 *
 * @param {Array<number>} data input data, as an array of number values
 * @param {number} nClasses number of desired classes
 * @returns {Array<number>} array of class break positions
 * @example
 * equalIntervalBreaks([1, 2, 3, 4, 5, 6], 4); //= [1, 2.25, 3.5, 4.75, 6]
 */
function equalIntervalBreaks(data/*: Array<number> */, nClasses/*:number*/)/*: Array<number> */ {

    if (data.length <= 1) {
        return data;
    }

    var theMin = min(data),
        theMax = max(data); 

    // the first break will always be the minimum value
    // in the dataset
    var breaks = [theMin];

    // The size of each break is the full range of the data
    // divided by the number of classes requested
    var breakSize = (theMax - theMin) / nClasses;

    // In the case of nClasses = 1, this loop won't run
    // and the returned breaks will be [min, max]
    for (var i = 1; i < nClasses; i++) {
        breaks.push(breaks[0] + breakSize * i);
    }

    // the last break will always be the
    // maximum.
    breaks.push(theMax);

    return breaks;
}

module.exports = equalIntervalBreaks;

},{"./max":32,"./min":38}],24:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**
 *
 * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a
 * normal distribution with standard deviation sd is within x of the mean.
 *
 * This function returns a numerical approximation to the exact value.
 *
 * @param {number} x input
 * @return {number} error estimation
 * @example
 * errorFunction(1).toFixed(2); // => '0.84'
 */
function errorFunction(x/*: number */)/*: number */ {
    var t = 1 / (1 + 0.5 * Math.abs(x));
    var tau = t * Math.exp(-Math.pow(x, 2) -
        1.26551223 +
        1.00002368 * t +
        0.37409196 * Math.pow(t, 2) +
        0.09678418 * Math.pow(t, 3) -
        0.18628806 * Math.pow(t, 4) +
        0.27886807 * Math.pow(t, 5) -
        1.13520398 * Math.pow(t, 6) +
        1.48851587 * Math.pow(t, 7) -
        0.82215223 * Math.pow(t, 8) +
        0.17087277 * Math.pow(t, 9));
    if (x >= 0) {
        return 1 - tau;
    } else {
        return tau - 1;
    }
}

module.exports = errorFunction;

},{}],25:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * A [Factorial](https://en.wikipedia.org/wiki/Factorial), usually written n!, is the product of all positive
 * integers less than or equal to n. Often factorial is implemented
 * recursively, but this iterative approach is significantly faster
 * and simpler.
 *
 * @param {number} n input
 * @returns {number} factorial: n!
 * @example
 * factorial(5); // => 120
 */
function factorial(n /*: number */)/*: number */ {

    // factorial is mathematically undefined for negative numbers
    if (n < 0) { return NaN; }

    // typically you'll expand the factorial function going down, like
    // 5! = 5 * 4 * 3 * 2 * 1. This is going in the opposite direction,
    // counting from 2 up to the number in question, and since anything
    // multiplied by 1 is itself, the loop only needs to start at 2.
    var accumulator = 1;
    for (var i = 2; i <= n; i++) {
        // for each number up to and including the number `n`, multiply
        // the accumulator my that number.
        accumulator *= i;
    }
    return accumulator;
}

module.exports = factorial;

},{}],26:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is
 * a mean function that is more useful for numbers in different
 * ranges.
 *
 * This is the nth root of the input numbers multiplied by each other.
 *
 * The geometric mean is often useful for
 * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given
 * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple
 * mean will incorrectly estimate an average growth rate, whereas a geometric
 * mean will correctly estimate a growth rate that, over those years,
 * will yield the same end value.
 *
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input array
 * @returns {number} geometric mean
 * @example
 * var growthRates = [1.80, 1.166666, 1.428571];
 * var averageGrowth = geometricMean(growthRates);
 * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];
 * var startingValue = 10;
 * var startingValueMean = 10;
 * growthRates.forEach(function(rate) {
 *   startingValue *= rate;
 * });
 * averageGrowthRates.forEach(function(rate) {
 *   startingValueMean *= rate;
 * });
 * startingValueMean === startingValue;
 */
function geometricMean(x /*: Array<number> */) {
    // The mean of no numbers is null
    if (x.length === 0) { return undefined; }

    // the starting value.
    var value = 1;

    for (var i = 0; i < x.length; i++) {
        // the geometric mean is only valid for positive numbers
        if (x[i] <= 0) { return undefined; }

        // repeatedly multiply the value by each number
        value *= x[i];
    }

    return Math.pow(value, 1 / x.length);
}

module.exports = geometricMean;

},{}],27:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is
 * a mean function typically used to find the average of rates.
 * This mean is calculated by taking the reciprocal of the arithmetic mean
 * of the reciprocals of the input numbers.
 *
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * This runs on `O(n)`, linear time in respect to the array.
 *
 * @param {Array<number>} x input
 * @returns {number} harmonic mean
 * @example
 * harmonicMean([2, 3]).toFixed(2) // => '2.40'
 */
function harmonicMean(x /*: Array<number> */) {
    // The mean of no numbers is null
    if (x.length === 0) { return undefined; }

    var reciprocalSum = 0;

    for (var i = 0; i < x.length; i++) {
        // the harmonic mean is only valid for positive numbers
        if (x[i] <= 0) { return undefined; }

        reciprocalSum += 1 / x[i];
    }

    // divide n by the the reciprocal sum
    return x.length / reciprocalSum;
}

module.exports = harmonicMean;

},{}],28:[function(require,module,exports){
'use strict';
/* @flow */

var quantile = require('./quantile');

/**
 * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range) is
 * a measure of statistical dispersion, or how scattered, spread, or
 * concentrated a distribution is. It's computed as the difference between
 * the third quartile and first quartile.
 *
 * @param {Array<number>} sample
 * @returns {number} interquartile range: the span between lower and upper quartile,
 * 0.25 and 0.75
 * @example
 * interquartileRange([0, 1, 2, 3]); // => 2
 */
function interquartileRange(sample/*: Array<number> */) {
    // Interquartile range is the span between the upper quartile,
    // at `0.75`, and lower quartile, `0.25`
    var q1 = quantile(sample, 0.75),
        q2 = quantile(sample, 0.25);

    if (typeof q1 === 'number' && typeof q2 === 'number') {
        return q1 - q2;
    }
}

module.exports = interquartileRange;

},{"./quantile":50}],29:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)
 * returns a numerical approximation to the value that would have caused
 * `errorFunction()` to return x.
 *
 * @param {number} x value of error function
 * @returns {number} estimated inverted value
 */
function inverseErrorFunction(x/*: number */)/*: number */ {
    var a = (8 * (Math.PI - 3)) / (3 * Math.PI * (4 - Math.PI));

    var inv = Math.sqrt(Math.sqrt(
        Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) -
        Math.log(1 - x * x) / a) -
        (2 / (Math.PI * a) + Math.log(1 - x * x) / 2));

    if (x >= 0) {
        return inv;
    } else {
        return -inv;
    }
}

module.exports = inverseErrorFunction;

},{}],30:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)
 * is a simple way to find a fitted line
 * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line
 * using the least sum of squares.
 *
 * @param {Array<Array<number>>} data an array of two-element of arrays,
 * like `[[0, 1], [2, 3]]`
 * @returns {Object} object containing slope and intersect of regression line
 * @example
 * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }
 */
function linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {

    var m, b;

    // Store data length in a local variable to reduce
    // repeated object property lookups
    var dataLength = data.length;

    //if there's only one point, arbitrarily choose a slope of 0
    //and a y-intercept of whatever the y of the initial point is
    if (dataLength === 1) {
        m = 0;
        b = data[0][1];
    } else {
        // Initialize our sums and scope the `m` and `b`
        // variables that define the line.
        var sumX = 0, sumY = 0,
            sumXX = 0, sumXY = 0;

        // Use local variables to grab point values
        // with minimal object property lookups
        var point, x, y;

        // Gather the sum of all x values, the sum of all
        // y values, and the sum of x^2 and (x*y) for each
        // value.
        //
        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy
        for (var i = 0; i < dataLength; i++) {
            point = data[i];
            x = point[0];
            y = point[1];

            sumX += x;
            sumY += y;

            sumXX += x * x;
            sumXY += x * y;
        }

        // `m` is the slope of the regression line
        m = ((dataLength * sumXY) - (sumX * sumY)) /
            ((dataLength * sumXX) - (sumX * sumX));

        // `b` is the y-intercept of the line.
        b = (sumY / dataLength) - ((m * sumX) / dataLength);
    }

    // Return both values as an object.
    return {
        m: m,
        b: b
    };
}


module.exports = linearRegression;

},{}],31:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * Given the output of `linearRegression`: an object
 * with `m` and `b` values indicating slope and intercept,
 * respectively, generate a line function that translates
 * x values into y values.
 *
 * @param {Object} mb object with `m` and `b` members, representing
 * slope and intersect of desired line
 * @returns {Function} method that computes y-value at any given
 * x-value on the line.
 * @example
 * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));
 * l(0) // = 0
 * l(2) // = 2
 * linearRegressionLine({ b: 0, m: 1 })(1); // => 1
 * linearRegressionLine({ b: 1, m: 1 })(1); // => 2
 */
function linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {
    // Return a function that computes a `y` value for each
    // x value it is given, based on the values of `b` and `a`
    // that we just computed.
    return function(x) {
        return mb.b + (mb.m * x);
    };
}

module.exports = linearRegressionLine;

},{}],32:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * This computes the maximum number in an array.
 *
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input
 * @returns {number} maximum value
 * @example
 * max([1, 2, 3, 4]);
 * // => 4
 */
function max(x /*: Array<number> */) /*:number*/ {
    var value;
    for (var i = 0; i < x.length; i++) {
        // On the first iteration of this loop, max is
        // undefined and is thus made the maximum element in the array
        if (value === undefined || x[i] > value) {
            value = x[i];
        }
    }
    if (value === undefined) {
        return NaN;
    }
    return value;
}

module.exports = max;

},{}],33:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The maximum is the highest number in the array. With a sorted array,
 * the last element in the array is always the largest, so this calculation
 * can be done in one step, or constant time.
 *
 * @param {Array<number>} x input
 * @returns {number} maximum value
 * @example
 * maxSorted([-100, -10, 1, 2, 5]); // => 5
 */
function maxSorted(x /*: Array<number> */)/*:number*/ {
    return x[x.length - 1];
}

module.exports = maxSorted;

},{}],34:[function(require,module,exports){
'use strict';
/* @flow */

var sum = require('./sum');

/**
 * The mean, _also known as average_,
 * is the sum of all values over the number of values.
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input values
 * @returns {number} mean
 * @example
 * mean([0, 10]); // => 5
 */
function mean(x /*: Array<number> */)/*:number*/ {
    // The mean of no numbers is null
    if (x.length === 0) { return NaN; }

    return sum(x) / x.length;
}

module.exports = mean;

},{"./sum":67}],35:[function(require,module,exports){
'use strict';
/* @flow */

var quantile = require('./quantile');

/**
 * The [median](http://en.wikipedia.org/wiki/Median) is
 * the middle number of a list. This is often a good indicator of 'the middle'
 * when there are outliers that skew the `mean()` value.
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * The median isn't necessarily one of the elements in the list: the value
 * can be the average of two elements if the list has an even length
 * and the two central values are different.
 *
 * @param {Array<number>} x input
 * @returns {number} median value
 * @example
 * median([10, 2, 5, 100, 2, 1]); // => 3.5
 */
function median(x /*: Array<number> */)/*:number*/ {
    return +quantile(x, 0.5);
}

module.exports = median;

},{"./quantile":50}],36:[function(require,module,exports){
'use strict';
/* @flow */

var median = require('./median');

/**
 * The [Median Absolute Deviation](http://en.wikipedia.org/wiki/Median_absolute_deviation) is
 * a robust measure of statistical
 * dispersion. It is more resilient to outliers than the standard deviation.
 *
 * @param {Array<number>} x input array
 * @returns {number} median absolute deviation
 * @example
 * medianAbsoluteDeviation([1, 1, 2, 2, 4, 6, 9]); // => 1
 */
function medianAbsoluteDeviation(x /*: Array<number> */) {
    // The mad of nothing is null
    var medianValue = median(x),
        medianAbsoluteDeviations = [];

    // Make a list of absolute deviations from the median
    for (var i = 0; i < x.length; i++) {
        medianAbsoluteDeviations.push(Math.abs(x[i] - medianValue));
    }

    // Find the median value of that list
    return median(medianAbsoluteDeviations);
}

module.exports = medianAbsoluteDeviation;

},{"./median":35}],37:[function(require,module,exports){
'use strict';
/* @flow */

var quantileSorted = require('./quantile_sorted');

/**
 * The [median](http://en.wikipedia.org/wiki/Median) is
 * the middle number of a list. This is often a good indicator of 'the middle'
 * when there are outliers that skew the `mean()` value.
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * The median isn't necessarily one of the elements in the list: the value
 * can be the average of two elements if the list has an even length
 * and the two central values are different.
 *
 * @param {Array<number>} sorted input
 * @returns {number} median value
 * @example
 * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5
 */
function medianSorted(sorted /*: Array<number> */)/*:number*/ {
    return quantileSorted(sorted, 0.5);
}

module.exports = medianSorted;

},{"./quantile_sorted":51}],38:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The min is the lowest number in the array. This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input
 * @returns {number} minimum value
 * @example
 * min([1, 5, -10, 100, 2]); // => -10
 */
function min(x /*: Array<number> */)/*:number*/ {
    var value;
    for (var i = 0; i < x.length; i++) {
        // On the first iteration of this loop, min is
        // undefined and is thus made the minimum element in the array
        if (value === undefined || x[i] < value) {
            value = x[i];
        }
    }
    if (value === undefined) {
        return NaN;
    }
    return value;
}

module.exports = min;

},{}],39:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The minimum is the lowest number in the array. With a sorted array,
 * the first element in the array is always the smallest, so this calculation
 * can be done in one step, or constant time.
 *
 * @param {Array<number>} x input
 * @returns {number} minimum value
 * @example
 * minSorted([-100, -10, 1, 2, 5]); // => -100
 */
function minSorted(x /*: Array<number> */)/*:number*/ {
    return x[0];
}

module.exports = minSorted;

},{}],40:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * **Mixin** simple_statistics to a single Array instance if provided
 * or the Array native object if not. This is an optional
 * feature that lets you treat simple_statistics as a native feature
 * of Javascript.
 *
 * @param {Object} ss simple statistics
 * @param {Array} [array=] a single array instance which will be augmented
 * with the extra methods. If omitted, mixin will apply to all arrays
 * by changing the global `Array.prototype`.
 * @returns {*} the extended Array, or Array.prototype if no object
 * is given.
 *
 * @example
 * var myNumbers = [1, 2, 3];
 * mixin(ss, myNumbers);
 * console.log(myNumbers.sum()); // 6
 */
function mixin(ss /*: Object */, array /*: ?Array<any> */)/*: any */ {
    var support = !!(Object.defineProperty && Object.defineProperties);
    // Coverage testing will never test this error.
    /* istanbul ignore next */
    if (!support) {
        throw new Error('without defineProperty, simple-statistics cannot be mixed in');
    }

    // only methods which work on basic arrays in a single step
    // are supported
    var arrayMethods = ['median', 'standardDeviation', 'sum', 'product',
        'sampleSkewness',
        'mean', 'min', 'max', 'quantile', 'geometricMean',
        'harmonicMean', 'root_mean_square'];

    // create a closure with a method name so that a reference
    // like `arrayMethods[i]` doesn't follow the loop increment
    function wrap(method) {
        return function() {
            // cast any arguments into an array, since they're
            // natively objects
            var args = Array.prototype.slice.apply(arguments);
            // make the first argument the array itself
            args.unshift(this);
            // return the result of the ss method
            return ss[method].apply(ss, args);
        };
    }

    // select object to extend
    var extending;
    if (array) {
        // create a shallow copy of the array so that our internal
        // operations do not change it by reference
        extending = array.slice();
    } else {
        extending = Array.prototype;
    }

    // for each array function, define a function that gets
    // the array as the first argument.
    // We use [defineProperty](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty)
    // because it allows these properties to be non-enumerable:
    // `for (var in x)` loops will not run into problems with this
    // implementation.
    for (var i = 0; i < arrayMethods.length; i++) {
        Object.defineProperty(extending, arrayMethods[i], {
            value: wrap(arrayMethods[i]),
            configurable: true,
            enumerable: false,
            writable: true
        });
    }

    return extending;
}

module.exports = mixin;

},{}],41:[function(require,module,exports){
'use strict';
/* @flow */

var numericSort = require('./numeric_sort'),
    modeSorted = require('./mode_sorted');

/**
 * The [mode](http://bit.ly/W5K4Yt) is the number that appears in a list the highest number of times.
 * There can be multiple modes in a list: in the event of a tie, this
 * algorithm will return the most recently seen mode.
 *
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * This runs on `O(nlog(n))` because it needs to sort the array internally
 * before running an `O(n)` search to find the mode.
 *
 * @param {Array<number>} x input
 * @returns {number} mode
 * @example
 * mode([0, 0, 1]); // => 0
 */
function mode(x /*: Array<number> */)/*:number*/ {
    // Sorting the array lets us iterate through it below and be sure
    // that every time we see a new number it's new and we'll never
    // see the same number twice
    return modeSorted(numericSort(x));
}

module.exports = mode;

},{"./mode_sorted":43,"./numeric_sort":44}],42:[function(require,module,exports){
'use strict';
/* @flow */
/* globals Map: false */

/**
 * The [mode](http://bit.ly/W5K4Yt) is the number that appears in a list the highest number of times.
 * There can be multiple modes in a list: in the event of a tie, this
 * algorithm will return the most recently seen mode.
 *
 * modeFast uses a Map object to keep track of the mode, instead of the approach
 * used with `mode`, a sorted array. As a result, it is faster
 * than `mode` and supports any data type that can be compared with `==`.
 * It also requires a
 * [JavaScript environment with support for Map](https://kangax.github.io/compat-table/es6/#test-Map),
 * and will throw an error if Map is not available.
 *
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * @param {Array<*>} x input
 * @returns {?*} mode
 * @throws {ReferenceError} if the JavaScript environment doesn't support Map
 * @example
 * modeFast(['rabbits', 'rabbits', 'squirrels']); // => 'rabbits'
 */
function modeFast/*::<T>*/(x /*: Array<T> */)/*: ?T */ {

    // This index will reflect the incidence of different values, indexing
    // them like
    // { value: count }
    var index = new Map();

    // A running `mode` and the number of times it has been encountered.
    var mode;
    var modeCount = 0;

    for (var i = 0; i < x.length; i++) {
        var newCount = index.get(x[i]);
        if (newCount === undefined) {
            newCount = 1;
        } else {
            newCount++;
        }
        if (newCount > modeCount) {
            mode = x[i];
            modeCount = newCount;
        }
        index.set(x[i], newCount);
    }

    return mode;
}

module.exports = modeFast;

},{}],43:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The [mode](http://bit.ly/W5K4Yt) is the number that appears in a list the highest number of times.
 * There can be multiple modes in a list: in the event of a tie, this
 * algorithm will return the most recently seen mode.
 *
 * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):
 * a method of finding a typical or central value of a set of numbers.
 *
 * This runs in `O(n)` because the input is sorted.
 *
 * @param {Array<number>} sorted input
 * @returns {number} mode
 * @example
 * modeSorted([0, 0, 1]); // => 0
 */
function modeSorted(sorted /*: Array<number> */)/*:number*/ {

    // Handle edge cases:
    // The mode of an empty list is NaN
    if (sorted.length === 0) { return NaN; }
    else if (sorted.length === 1) { return sorted[0]; }

    // This assumes it is dealing with an array of size > 1, since size
    // 0 and 1 are handled immediately. Hence it starts at index 1 in the
    // array.
    var last = sorted[0],
        // store the mode as we find new modes
        value = NaN,
        // store how many times we've seen the mode
        maxSeen = 0,
        // how many times the current candidate for the mode
        // has been seen
        seenThis = 1;

    // end at sorted.length + 1 to fix the case in which the mode is
    // the highest number that occurs in the sequence. the last iteration
    // compares sorted[i], which is undefined, to the highest number
    // in the series
    for (var i = 1; i < sorted.length + 1; i++) {
        // we're seeing a new number pass by
        if (sorted[i] !== last) {
            // the last number is the new mode since we saw it more
            // often than the old one
            if (seenThis > maxSeen) {
                maxSeen = seenThis;
                value = last;
            }
            seenThis = 1;
            last = sorted[i];
        // if this isn't a new number, it's one more occurrence of
        // the potential mode
        } else { seenThis++; }
    }
    return value;
}

module.exports = modeSorted;

},{}],44:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * Sort an array of numbers by their numeric value, ensuring that the
 * array is not changed in place.
 *
 * This is necessary because the default behavior of .sort
 * in JavaScript is to sort arrays as string values
 *
 *     [1, 10, 12, 102, 20].sort()
 *     // output
 *     [1, 10, 102, 12, 20]
 *
 * @param {Array<number>} array input array
 * @return {Array<number>} sorted array
 * @private
 * @example
 * numericSort([3, 2, 1]) // => [1, 2, 3]
 */
function numericSort(array /*: Array<number> */) /*: Array<number> */ {
    return array
        // ensure the array is not changed in-place
        .slice()
        // comparator function that treats input as numeric
        .sort(function(a, b) {
            return a - b;
        });
}

module.exports = numericSort;

},{}],45:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * This is a single-layer [Perceptron Classifier](http://en.wikipedia.org/wiki/Perceptron) that takes
 * arrays of numbers and predicts whether they should be classified
 * as either 0 or 1 (negative or positive examples).
 * @class
 * @example
 * // Create the model
 * var p = new PerceptronModel();
 * // Train the model with input with a diagonal boundary.
 * for (var i = 0; i < 5; i++) {
 *     p.train([1, 1], 1);
 *     p.train([0, 1], 0);
 *     p.train([1, 0], 0);
 *     p.train([0, 0], 0);
 * }
 * p.predict([0, 0]); // 0
 * p.predict([0, 1]); // 0
 * p.predict([1, 0]); // 0
 * p.predict([1, 1]); // 1
 */
function PerceptronModel() {
    // The weights, or coefficients of the model;
    // weights are only populated when training with data.
    this.weights = [];
    // The bias term, or intercept; it is also a weight but
    // it's stored separately for convenience as it is always
    // multiplied by one.
    this.bias = 0;
}

/**
 * **Predict**: Use an array of features with the weight array and bias
 * to predict whether an example is labeled 0 or 1.
 *
 * @param {Array<number>} features an array of features as numbers
 * @returns {number} 1 if the score is over 0, otherwise 0
 */
PerceptronModel.prototype.predict = function(features) {

    // Only predict if previously trained
    // on the same size feature array(s).
    if (features.length !== this.weights.length) { return null; }

    // Calculate the sum of features times weights,
    // with the bias added (implicitly times one).
    var score = 0;
    for (var i = 0; i < this.weights.length; i++) {
        score += this.weights[i] * features[i];
    }
    score += this.bias;

    // Classify as 1 if the score is over 0, otherwise 0.
    if (score > 0) {
        return 1;
    } else {
        return 0;
    }
};

/**
 * **Train** the classifier with a new example, which is
 * a numeric array of features and a 0 or 1 label.
 *
 * @param {Array<number>} features an array of features as numbers
 * @param {number} label either 0 or 1
 * @returns {PerceptronModel} this
 */
PerceptronModel.prototype.train = function(features, label) {
    // Require that only labels of 0 or 1 are considered.
    if (label !== 0 && label !== 1) { return null; }
    // The length of the feature array determines
    // the length of the weight array.
    // The perceptron will continue learning as long as
    // it keeps seeing feature arrays of the same length.
    // When it sees a new data shape, it initializes.
    if (features.length !== this.weights.length) {
        this.weights = features;
        this.bias = 1;
    }
    // Make a prediction based on current weights.
    var prediction = this.predict(features);
    // Update the weights if the prediction is wrong.
    if (prediction !== label) {
        var gradient = label - prediction;
        for (var i = 0; i < this.weights.length; i++) {
            this.weights[i] += gradient * features[i];
        }
        this.bias += gradient;
    }
    return this;
};

module.exports = PerceptronModel;

},{}],46:[function(require,module,exports){
/* @flow */

'use strict';

/**
 * Implementation of [Heap's Algorithm](https://en.wikipedia.org/wiki/Heap%27s_algorithm)
 * for generating permutations.
 *
 * @param {Array} elements any type of data
 * @returns {Array<Array>} array of permutations
 */
function permutationsHeap/*:: <T> */(elements /*: Array<T> */)/*: Array<Array<T>> */ {
    var indexes = new Array(elements.length);
    var permutations = [elements.slice()];

    for (var i = 0; i < elements.length; i++) {
        indexes[i] = 0;
    }

    for (i = 0; i < elements.length;) {
        if (indexes[i] < i) {

            // At odd indexes, swap from indexes[i] instead
            // of from the beginning of the array
            var swapFrom = 0;
            if (i % 2 !== 0) {
                swapFrom = indexes[i];
            }

            // swap between swapFrom and i, using
            // a temporary variable as storage.
            var temp = elements[swapFrom];
            elements[swapFrom] = elements[i];
            elements[i] = temp;

            permutations.push(elements.slice());
            indexes[i]++;
            i = 0;

        } else {
            indexes[i] = 0;
            i++;
        }
    }

    return permutations;
}

module.exports = permutationsHeap;

},{}],47:[function(require,module,exports){
'use strict';
/* @flow */

var epsilon = require('./epsilon');
var factorial = require('./factorial');

/**
 * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)
 * is a discrete probability distribution that expresses the probability
 * of a given number of events occurring in a fixed interval of time
 * and/or space if these events occur with a known average rate and
 * independently of the time since the last event.
 *
 * The Poisson Distribution is characterized by the strictly positive
 * mean arrival or occurrence rate, `λ`.
 *
 * @param {number} lambda location poisson distribution
 * @returns {number} value of poisson distribution at that point
 */
function poissonDistribution(lambda/*: number */) {
    // Check that lambda is strictly positive
    if (lambda <= 0) { return undefined; }

    // our current place in the distribution
    var x = 0,
        // and we keep track of the current cumulative probability, in
        // order to know when to stop calculating chances.
        cumulativeProbability = 0,
        // the calculated cells to be returned
        cells = {};

    // This algorithm iterates through each potential outcome,
    // until the `cumulativeProbability` is very close to 1, at
    // which point we've defined the vast majority of outcomes
    do {
        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)
        cells[x] = (Math.pow(Math.E, -lambda) * Math.pow(lambda, x)) / factorial(x);
        cumulativeProbability += cells[x];
        x++;
    // when the cumulativeProbability is nearly 1, we've calculated
    // the useful range of this distribution
    } while (cumulativeProbability < 1 - epsilon);

    return cells;
}

module.exports = poissonDistribution;

},{"./epsilon":22,"./factorial":25}],48:[function(require,module,exports){
'use strict';
/* @flow */

var epsilon = require('./epsilon');
var inverseErrorFunction = require('./inverse_error_function');

/**
 * The [Probit](http://en.wikipedia.org/wiki/Probit)
 * is the inverse of cumulativeStdNormalProbability(),
 * and is also known as the normal quantile function.
 *
 * It returns the number of standard deviations from the mean
 * where the p'th quantile of values can be found in a normal distribution.
 * So, for example, probit(0.5 + 0.6827/2) ≈ 1 because 68.27% of values are
 * normally found within 1 standard deviation above or below the mean.
 *
 * @param {number} p
 * @returns {number} probit
 */
function probit(p /*: number */)/*: number */ {
    if (p === 0) {
        p = epsilon;
    } else if (p >= 1) {
        p = 1 - epsilon;
    }
    return Math.sqrt(2) * inverseErrorFunction(2 * p - 1);
}

module.exports = probit;

},{"./epsilon":22,"./inverse_error_function":29}],49:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The [product](https://en.wikipedia.org/wiki/Product_(mathematics)) of an array
 * is the result of multiplying all numbers together, starting using one as the multiplicative identity.
 *
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input
 * @return {number} product of all input numbers
 * @example
 * product([1, 2, 3, 4]); // => 24
 */
function product(x/*: Array<number> */)/*: number */ {
    var value = 1;
    for (var i = 0; i < x.length; i++) {
        value *= x[i];
    }
    return value;
}

module.exports = product;

},{}],50:[function(require,module,exports){
'use strict';
/* @flow */

var quantileSorted = require('./quantile_sorted');
var quickselect = require('./quickselect');

/**
 * The [quantile](https://en.wikipedia.org/wiki/Quantile):
 * this is a population quantile, since we assume to know the entire
 * dataset in this library. This is an implementation of the
 * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)
 * algorithm from wikipedia.
 *
 * Sample is a one-dimensional array of numbers,
 * and p is either a decimal number from 0 to 1 or an array of decimal
 * numbers from 0 to 1.
 * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing
 * with decimal values.
 * When p is an array, the result of the function is also an array containing the appropriate
 * quantiles in input order
 *
 * @param {Array<number>} sample a sample from the population
 * @param {number} p the desired quantile, as a number between 0 and 1
 * @returns {number} quantile
 * @example
 * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9
 */
function quantile(sample /*: Array<number> */, p /*: Array<number> | number */) {
    var copy = sample.slice();

    if (Array.isArray(p)) {
        // rearrange elements so that each element corresponding to a requested
        // quantile is on a place it would be if the array was fully sorted
        multiQuantileSelect(copy, p);
        // Initialize the result array
        var results = [];
        // For each requested quantile
        for (var i = 0; i < p.length; i++) {
            results[i] = quantileSorted(copy, p[i]);
        }
        return results;
    } else {
        var idx = quantileIndex(copy.length, p);
        quantileSelect(copy, idx, 0, copy.length - 1);
        return quantileSorted(copy, p);
    }
}

function quantileSelect(arr, k, left, right) {
    if (k % 1 === 0) {
        quickselect(arr, k, left, right);
    } else {
        k = Math.floor(k);
        quickselect(arr, k, left, right);
        quickselect(arr, k + 1, k + 1, right);
    }
}

function multiQuantileSelect(arr, p) {
    var indices = [0];
    for (var i = 0; i < p.length; i++) {
        indices.push(quantileIndex(arr.length, p[i]));
    }
    indices.push(arr.length - 1);
    indices.sort(compare);

    var stack = [0, indices.length - 1];

    while (stack.length) {
        var r = Math.ceil(stack.pop());
        var l = Math.floor(stack.pop());
        if (r - l <= 1) continue;

        var m = Math.floor((l + r) / 2);
        quantileSelect(arr, indices[m], indices[l], indices[r]);

        stack.push(l, m, m, r);
    }
}

function compare(a, b) {
    return a - b;
}

function quantileIndex(len /*: number */, p /*: number */)/*:number*/ {
    var idx = len * p;
    if (p === 1) {
        // If p is 1, directly return the last index
        return len - 1;
    } else if (p === 0) {
        // If p is 0, directly return the first index
        return 0;
    } else if (idx % 1 !== 0) {
        // If index is not integer, return the next index in array
        return Math.ceil(idx) - 1;
    } else if (len % 2 === 0) {
        // If the list has even-length, we'll return the middle of two indices
        // around quantile to indicate that we need an average value of the two
        return idx - 0.5;
    } else {
        // Finally, in the simple case of an integer index
        // with an odd-length list, return the index
        return idx;
    }
}

module.exports = quantile;

},{"./quantile_sorted":51,"./quickselect":52}],51:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * This is the internal implementation of quantiles: when you know
 * that the order is sorted, you don't need to re-sort it, and the computations
 * are faster.
 *
 * @param {Array<number>} sample input data
 * @param {number} p desired quantile: a number between 0 to 1, inclusive
 * @returns {number} quantile value
 * @example
 * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9
 */
function quantileSorted(sample /*: Array<number> */, p /*: number */)/*:number*/ {
    var idx = sample.length * p;
    if (p < 0 || p > 1) {
        return NaN;
    } else if (p === 1) {
        // If p is 1, directly return the last element
        return sample[sample.length - 1];
    } else if (p === 0) {
        // If p is 0, directly return the first element
        return sample[0];
    } else if (idx % 1 !== 0) {
        // If p is not integer, return the next element in array
        return sample[Math.ceil(idx) - 1];
    } else if (sample.length % 2 === 0) {
        // If the list has even-length, we'll take the average of this number
        // and the next value, if there is one
        return (sample[idx - 1] + sample[idx]) / 2;
    } else {
        // Finally, in the simple case of an integer value
        // with an odd-length list, return the sample value at the index.
        return sample[idx];
    }
}

module.exports = quantileSorted;

},{}],52:[function(require,module,exports){
'use strict';
/* @flow */

module.exports = quickselect;

/**
 * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.
 * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.
 *
 * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm
 *
 * @private
 * @param {Array<number>} arr input array
 * @param {number} k pivot index
 * @param {number} left left index
 * @param {number} right right index
 * @returns {undefined}
 * @example
 * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];
 * quickselect(arr, 8);
 * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]
 */
function quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {
    left = left || 0;
    right = right || (arr.length - 1);

    while (right > left) {
        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time
        if (right - left > 600) {
            var n = right - left + 1;
            var m = k - left + 1;
            var z = Math.log(n);
            var s = 0.5 * Math.exp(2 * z / 3);
            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);
            if (m - n / 2 < 0) sd *= -1;
            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
            quickselect(arr, k, newLeft, newRight);
        }

        var t = arr[k];
        var i = left;
        var j = right;

        swap(arr, left, k);
        if (arr[right] > t) swap(arr, left, right);

        while (i < j) {
            swap(arr, i, j);
            i++;
            j--;
            while (arr[i] < t) i++;
            while (arr[j] > t) j--;
        }

        if (arr[left] === t) swap(arr, left, j);
        else {
            j++;
            swap(arr, j, right);
        }

        if (j <= k) left = j + 1;
        if (k <= j) right = j - 1;
    }
}

function swap(arr, i, j) {
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}

},{}],53:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)
 * value of data compared with a function `f`
 * is the sum of the squared differences between the prediction
 * and the actual value.
 *
 * @param {Array<Array<number>>} data input data: this should be doubly-nested
 * @param {Function} func function called on `[i][0]` values within the dataset
 * @returns {number} r-squared value
 * @example
 * var samples = [[0, 0], [1, 1]];
 * var regressionLine = linearRegressionLine(linearRegression(samples));
 * rSquared(samples, regressionLine); // = 1 this line is a perfect fit
 */
function rSquared(data /*: Array<Array<number>> */, func /*: Function */) /*: number */ {
    if (data.length < 2) { return 1; }

    // Compute the average y value for the actual
    // data set in order to compute the
    // _total sum of squares_
    var sum = 0, average;
    for (var i = 0; i < data.length; i++) {
        sum += data[i][1];
    }
    average = sum / data.length;

    // Compute the total sum of squares - the
    // squared difference between each point
    // and the average of all points.
    var sumOfSquares = 0;
    for (var j = 0; j < data.length; j++) {
        sumOfSquares += Math.pow(average - data[j][1], 2);
    }

    // Finally estimate the error: the squared
    // difference between the estimate and the actual data
    // value at each point.
    var err = 0;
    for (var k = 0; k < data.length; k++) {
        err += Math.pow(data[k][1] - func(data[k][0]), 2);
    }

    // As the error grows larger, its ratio to the
    // sum of squares increases and the r squared
    // value grows lower.
    return 1 - err / sumOfSquares;
}

module.exports = rSquared;

},{}],54:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The Root Mean Square (RMS) is
 * a mean function used as a measure of the magnitude of a set
 * of numbers, regardless of their sign.
 * This is the square root of the mean of the squares of the
 * input numbers.
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input
 * @returns {number} root mean square
 * @example
 * rootMeanSquare([-1, 1, -1, 1]); // => 1
 */
function rootMeanSquare(x /*: Array<number> */)/*:number*/ {
    if (x.length === 0) { return NaN; }

    var sumOfSquares = 0;
    for (var i = 0; i < x.length; i++) {
        sumOfSquares += Math.pow(x[i], 2);
    }

    return Math.sqrt(sumOfSquares / x.length);
}

module.exports = rootMeanSquare;

},{}],55:[function(require,module,exports){
'use strict';
/* @flow */

var shuffle = require('./shuffle');

/**
 * Create a [simple random sample](http://en.wikipedia.org/wiki/Simple_random_sample)
 * from a given array of `n` elements.
 *
 * The sampled values will be in any order, not necessarily the order
 * they appear in the input.
 *
 * @param {Array} array input array. can contain any type
 * @param {number} n count of how many elements to take
 * @param {Function} [randomSource=Math.random] an optional entropy source that
 * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)
 * @return {Array} subset of n elements in original array
 * @example
 * var values = [1, 2, 4, 5, 6, 7, 8, 9];
 * sample(values, 3); // returns 3 random values, like [2, 5, 8];
 */
function sample/*:: <T> */(
    array /*: Array<T> */,
    n /*: number */,
    randomSource /*: Function */) /*: Array<T> */ {
    // shuffle the original array using a fisher-yates shuffle
    var shuffled = shuffle(array, randomSource);

    // and then return a subset of it - the first `n` elements.
    return shuffled.slice(0, n);
}

module.exports = sample;

},{"./shuffle":62}],56:[function(require,module,exports){
'use strict';
/* @flow */

var sampleCovariance = require('./sample_covariance');
var sampleStandardDeviation = require('./sample_standard_deviation');

/**
 * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is
 * a measure of how correlated two datasets are, between -1 and 1
 *
 * @param {Array<number>} x first input
 * @param {Array<number>} y second input
 * @returns {number} sample correlation
 * @example
 * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);
 * // => '0.69'
 */
function sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {
    var cov = sampleCovariance(x, y),
        xstd = sampleStandardDeviation(x),
        ystd = sampleStandardDeviation(y);

    return cov / xstd / ystd;
}

module.exports = sampleCorrelation;

},{"./sample_covariance":57,"./sample_standard_deviation":59}],57:[function(require,module,exports){
'use strict';
/* @flow */

var mean = require('./mean');

/**
 * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:
 * how much do the two datasets move together?
 * x and y are two datasets, represented as arrays of numbers.
 *
 * @param {Array<number>} x first input
 * @param {Array<number>} y second input
 * @returns {number} sample covariance
 * @example
 * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5
 */
function sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {

    // The two datasets must have the same length which must be more than 1
    if (x.length <= 1 || x.length !== y.length) {
        return NaN;
    }

    // determine the mean of each dataset so that we can judge each
    // value of the dataset fairly as the difference from the mean. this
    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance
    // does not suffer because of the difference in absolute values
    var xmean = mean(x),
        ymean = mean(y),
        sum = 0;

    // for each pair of values, the covariance increases when their
    // difference from the mean is associated - if both are well above
    // or if both are well below
    // the mean, the covariance increases significantly.
    for (var i = 0; i < x.length; i++) {
        sum += (x[i] - xmean) * (y[i] - ymean);
    }

    // this is Bessels' Correction: an adjustment made to sample statistics
    // that allows for the reduced degree of freedom entailed in calculating
    // values from samples rather than complete populations.
    var besselsCorrection = x.length - 1;

    // the covariance is weighted by the length of the datasets.
    return sum / besselsCorrection;
}

module.exports = sampleCovariance;

},{"./mean":34}],58:[function(require,module,exports){
'use strict';
/* @flow */

var sumNthPowerDeviations = require('./sum_nth_power_deviations');
var sampleStandardDeviation = require('./sample_standard_deviation');

/**
 * [Skewness](http://en.wikipedia.org/wiki/Skewness) is
 * a measure of the extent to which a probability distribution of a
 * real-valued random variable "leans" to one side of the mean.
 * The skewness value can be positive or negative, or even undefined.
 *
 * Implementation is based on the adjusted Fisher-Pearson standardized
 * moment coefficient, which is the version found in Excel and several
 * statistical packages including Minitab, SAS and SPSS.
 *
 * @param {Array<number>} x input
 * @returns {number} sample skewness
 * @example
 * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365
 */
function sampleSkewness(x /*: Array<number> */)/*:number*/ {
    // The skewness of less than three arguments is null
    var theSampleStandardDeviation = sampleStandardDeviation(x);

    if (isNaN(theSampleStandardDeviation) || x.length < 3) {
        return NaN;
    }

    var n = x.length,
        cubedS = Math.pow(theSampleStandardDeviation, 3),
        sumCubedDeviations = sumNthPowerDeviations(x, 3);

    return n * sumCubedDeviations / ((n - 1) * (n - 2) * cubedS);
}

module.exports = sampleSkewness;

},{"./sample_standard_deviation":59,"./sum_nth_power_deviations":68}],59:[function(require,module,exports){
'use strict';
/* @flow */

var sampleVariance = require('./sample_variance');

/**
 * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)
 * is the square root of the variance.
 *
 * @param {Array<number>} x input array
 * @returns {number} sample standard deviation
 * @example
 * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);
 * // => '2.14'
 */
function sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {
    // The standard deviation of no numbers is null
    var sampleVarianceX = sampleVariance(x);
    if (isNaN(sampleVarianceX)) { return NaN; }
    return Math.sqrt(sampleVarianceX);
}

module.exports = sampleStandardDeviation;

},{"./sample_variance":60}],60:[function(require,module,exports){
'use strict';
/* @flow */

var sumNthPowerDeviations = require('./sum_nth_power_deviations');

/**
 * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)
 * is the sum of squared deviations from the mean. The sample variance
 * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):
 * instead of dividing the sum of squared deviations by the length of the input,
 * it is divided by the length minus one. This corrects the bias in estimating
 * a value from a set that you don't know if full.
 *
 * References:
 * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)
 *
 * @param {Array<number>} x input array
 * @return {number} sample variance
 * @example
 * sampleVariance([1, 2, 3, 4, 5]); // => 2.5
 */
function sampleVariance(x /*: Array<number> */)/*:number*/ {
    // The variance of no numbers is null
    if (x.length <= 1) { return NaN; }

    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);

    // this is Bessels' Correction: an adjustment made to sample statistics
    // that allows for the reduced degree of freedom entailed in calculating
    // values from samples rather than complete populations.
    var besselsCorrection = x.length - 1;

    // Find the mean value of that list
    return sumSquaredDeviationsValue / besselsCorrection;
}

module.exports = sampleVariance;

},{"./sum_nth_power_deviations":68}],61:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * Sampling with replacement is a type of sampling that allows the same
 * item to be picked out of a population more than once.
 *
 * @param {Array} population an array of any kind of element
 * @param {number} n count of how many elements to take
 * @param {Function} [randomSource=Math.random] an optional entropy source that
 * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)
 * @return {Array} n sampled items from the population
 * @example
 * var sample = sampleWithReplacement([1, 2, 3, 4], 2);
 * sampleWithReplacement; // = [2, 4] or any other random sample of 2 items
 */
function sampleWithReplacement/*::<T>*/(population/*:Array<T>*/,
    n /*: number */,
    randomSource/*:Function*/) {

    if (population.length === 0) {
        return [];
    }

    // a custom random number source can be provided if you want to use
    // a fixed seed or another random number generator, like
    // [random-js](https://www.npmjs.org/package/random-js)
    randomSource = randomSource || Math.random;

    var length = population.length;
    var sample = [];

    for (var i = 0; i < n; i++) {
        var index = Math.floor(randomSource() * length);

        sample.push(population[index]);
    }

    return sample;
}

module.exports = sampleWithReplacement;

},{}],62:[function(require,module,exports){
'use strict';
/* @flow */

var shuffleInPlace = require('./shuffle_in_place');

/**
 * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)
 * is a fast way to create a random permutation of a finite set. This is
 * a function around `shuffle_in_place` that adds the guarantee that
 * it will not modify its input.
 *
 * @param {Array} sample an array of any kind of element
 * @param {Function} [randomSource=Math.random] an optional entropy source that
 * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)
 * @return {Array} shuffled version of input
 * @example
 * var shuffled = shuffle([1, 2, 3, 4]);
 * shuffled; // = [2, 3, 1, 4] or any other random permutation
 */
function shuffle/*::<T>*/(sample/*:Array<T>*/, randomSource/*:Function*/) {
    // slice the original array so that it is not modified
    sample = sample.slice();

    // and then shuffle that shallow-copied array, in place
    return shuffleInPlace(sample.slice(), randomSource);
}

module.exports = shuffle;

},{"./shuffle_in_place":63}],63:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)
 * in-place - which means that it **will change the order of the original
 * array by reference**.
 *
 * This is an algorithm that generates a random [permutation](https://en.wikipedia.org/wiki/Permutation)
 * of a set.
 *
 * @param {Array} sample input array
 * @param {Function} [randomSource=Math.random] an optional entropy source that
 * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)
 * @returns {Array} sample
 * @example
 * var sample = [1, 2, 3, 4];
 * shuffleInPlace(sample);
 * // sample is shuffled to a value like [2, 1, 4, 3]
 */
function shuffleInPlace(sample/*:Array<any>*/, randomSource/*:Function*/)/*:Array<any>*/ {


    // a custom random number source can be provided if you want to use
    // a fixed seed or another random number generator, like
    // [random-js](https://www.npmjs.org/package/random-js)
    randomSource = randomSource || Math.random;

    // store the current length of the sample to determine
    // when no elements remain to shuffle.
    var length = sample.length;

    // temporary is used to hold an item when it is being
    // swapped between indices.
    var temporary;

    // The index to swap at each stage.
    var index;

    // While there are still items to shuffle
    while (length > 0) {
        // chose a random index within the subset of the array
        // that is not yet shuffled
        index = Math.floor(randomSource() * length--);

        // store the value that we'll move temporarily
        temporary = sample[length];

        // swap the value at `sample[length]` with `sample[index]`
        sample[length] = sample[index];
        sample[index] = temporary;
    }

    return sample;
}

module.exports = shuffleInPlace;

},{}],64:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * [Sign](https://en.wikipedia.org/wiki/Sign_function) is a function 
 * that extracts the sign of a real number
 * 
 * @param {Number} x input value
 * @returns {Number} sign value either 1, 0 or -1
 * @throws {TypeError} if the input argument x is not a number
 * @private
 * 
 * @example
 * sign(2); // => 1
 */
function sign(x/*: number */)/*: number */ {
    if (typeof x === 'number') {
        if (x < 0) {
            return -1;
        } else if (x === 0) {
            return 0
        } else {
            return 1;
        }
    } else {
        throw new TypeError('not a number');
    }
}

module.exports = sign;

},{}],65:[function(require,module,exports){
'use strict';
/* @flow */

var variance = require('./variance');

/**
 * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)
 * is the square root of the variance. It's useful for measuring the amount
 * of variation or dispersion in a set of values.
 *
 * Standard deviation is only appropriate for full-population knowledge: for
 * samples of a population, {@link sampleStandardDeviation} is
 * more appropriate.
 *
 * @param {Array<number>} x input
 * @returns {number} standard deviation
 * @example
 * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4
 * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2
 */
function standardDeviation(x /*: Array<number> */)/*:number*/ {
    // The standard deviation of no numbers is null
    var v = variance(x);
    if (isNaN(v)) { return 0; }
    return Math.sqrt(v);
}

module.exports = standardDeviation;

},{"./variance":73}],66:[function(require,module,exports){
'use strict';
/* @flow */

var SQRT_2PI = Math.sqrt(2 * Math.PI);

function cumulativeDistribution(z) {
    var sum = z,
        tmp = z;

    // 15 iterations are enough for 4-digit precision
    for (var i = 1; i < 15; i++) {
        tmp *= z * z / (2 * i + 1);
        sum += tmp;
    }
    return Math.round((0.5 + (sum / SQRT_2PI) * Math.exp(-z * z / 2)) * 1e4) / 1e4;
}

/**
 * A standard normal table, also called the unit normal table or Z table,
 * is a mathematical table for the values of Φ (phi), which are the values of
 * the cumulative distribution function of the normal distribution.
 * It is used to find the probability that a statistic is observed below,
 * above, or between values on the standard normal distribution, and by
 * extension, any normal distribution.
 *
 * The probabilities are calculated using the
 * [Cumulative distribution function](https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function).
 * The table used is the cumulative, and not cumulative from 0 to mean
 * (even though the latter has 5 digits precision, instead of 4).
 */
var standardNormalTable/*: Array<number> */ = [];

for (var z = 0; z <= 3.09; z += 0.01) {
    standardNormalTable.push(cumulativeDistribution(z));
}

module.exports = standardNormalTable;

},{}],67:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is
 * a method for computing the sum of a list of numbers while correcting
 * for floating-point errors. Traditionally, sums are calculated as many
 * successive additions, each one with its own floating-point roundoff. These
 * losses in precision add up as the number of numbers increases. This alternative
 * algorithm is more accurate than the simple way of calculating sums by simple
 * addition.
 *
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input
 * @return {number} sum of all input numbers
 * @example
 * sum([1, 2, 3]); // => 6
 */
function sum(x/*: Array<number> */)/*: number */ {

    // like the traditional sum algorithm, we keep a running
    // count of the current sum.
    var sum = 0;

    // but we also keep three extra variables as bookkeeping:
    // most importantly, an error correction value. This will be a very
    // small number that is the opposite of the floating point precision loss.
    var errorCompensation = 0;

    // this will be each number in the list corrected with the compensation value.
    var correctedCurrentValue;

    // and this will be the next sum
    var nextSum;

    for (var i = 0; i < x.length; i++) {
        // first correct the value that we're going to add to the sum
        correctedCurrentValue = x[i] - errorCompensation;

        // compute the next sum. sum is likely a much larger number
        // than correctedCurrentValue, so we'll lose precision here,
        // and measure how much precision is lost in the next step
        nextSum = sum + correctedCurrentValue;

        // we intentionally didn't assign sum immediately, but stored
        // it for now so we can figure out this: is (sum + nextValue) - nextValue
        // not equal to 0? ideally it would be, but in practice it won't:
        // it will be some very small number. that's what we record
        // as errorCompensation.
        errorCompensation = nextSum - sum - correctedCurrentValue;

        // now that we've computed how much we'll correct for in the next
        // loop, start treating the nextSum as the current sum.
        sum = nextSum;
    }

    return sum;
}

module.exports = sum;

},{}],68:[function(require,module,exports){
'use strict';
/* @flow */

var mean = require('./mean');

/**
 * The sum of deviations to the Nth power.
 * When n=2 it's the sum of squared deviations.
 * When n=3 it's the sum of cubed deviations.
 *
 * @param {Array<number>} x
 * @param {number} n power
 * @returns {number} sum of nth power deviations
 * @example
 * var input = [1, 2, 3];
 * // since the variance of a set is the mean squared
 * // deviations, we can calculate that with sumNthPowerDeviations:
 * var variance = sumNthPowerDeviations(input) / input.length;
 */
function sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {
    var meanValue = mean(x),
        sum = 0;

    for (var i = 0; i < x.length; i++) {
        sum += Math.pow(x[i] - meanValue, n);
    }

    return sum;
}

module.exports = sumNthPowerDeviations;

},{"./mean":34}],69:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array
 * is the result of adding all numbers together, starting from zero.
 *
 * This runs on `O(n)`, linear time in respect to the array
 *
 * @param {Array<number>} x input
 * @return {number} sum of all input numbers
 * @example
 * sumSimple([1, 2, 3]); // => 6
 */
function sumSimple(x/*: Array<number> */)/*: number */ {
    var value = 0;
    for (var i = 0; i < x.length; i++) {
        value += x[i];
    }
    return value;
}

module.exports = sumSimple;

},{}],70:[function(require,module,exports){
'use strict';
/* @flow */

var standardDeviation = require('./standard_deviation');
var mean = require('./mean');

/**
 * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean
 * of a sample to a known value, x.
 *
 * in this case, we're trying to determine whether the
 * population mean is equal to the value that we know, which is `x`
 * here. usually the results here are used to look up a
 * [p-value](http://en.wikipedia.org/wiki/P-value), which, for
 * a certain level of significance, will let you determine that the
 * null hypothesis can or cannot be rejected.
 *
 * @param {Array<number>} sample an array of numbers as input
 * @param {number} x expected value of the population mean
 * @returns {number} value
 * @example
 * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'
 */
function tTest(sample/*: Array<number> */, x/*: number */)/*:number*/ {
    // The mean of the sample
    var sampleMean = mean(sample);

    // The standard deviation of the sample
    var sd = standardDeviation(sample);

    // Square root the length of the sample
    var rootN = Math.sqrt(sample.length);

    // returning the t value
    return (sampleMean - x) / (sd / rootN);
}

module.exports = tTest;

},{"./mean":34,"./standard_deviation":65}],71:[function(require,module,exports){
'use strict';
/* @flow */

var mean = require('./mean');
var sampleVariance = require('./sample_variance');

/**
 * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).
 * Tests whether "mean(X)-mean(Y) = difference", (
 * in the most common case, we often have `difference == 0` to test if two samples
 * are likely to be taken from populations with the same mean value) with
 * no prior knowledge on standard deviations of both samples
 * other than the fact that they have the same standard deviation.
 *
 * Usually the results here are used to look up a
 * [p-value](http://en.wikipedia.org/wiki/P-value), which, for
 * a certain level of significance, will let you determine that the
 * null hypothesis can or cannot be rejected.
 *
 * `diff` can be omitted if it equals 0.
 *
 * [This is used to confirm or deny](http://www.monarchlab.org/Lab/Research/Stats/2SampleT.aspx)
 * a null hypothesis that the two populations that have been sampled into
 * `sampleX` and `sampleY` are equal to each other.
 *
 * @param {Array<number>} sampleX a sample as an array of numbers
 * @param {Array<number>} sampleY a sample as an array of numbers
 * @param {number} [difference=0]
 * @returns {number} test result
 * @example
 * ss.tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); //= -2.1908902300206643
 */
function tTestTwoSample(
    sampleX/*: Array<number> */,
    sampleY/*: Array<number> */,
    difference/*: number */) {
    var n = sampleX.length,
        m = sampleY.length;

    // If either sample doesn't actually have any values, we can't
    // compute this at all, so we return `null`.
    if (!n || !m) { return null; }

    // default difference (mu) is zero
    if (!difference) {
        difference = 0;
    }

    var meanX = mean(sampleX),
        meanY = mean(sampleY),
        sampleVarianceX = sampleVariance(sampleX),
        sampleVarianceY = sampleVariance(sampleY);

    if (typeof meanX === 'number' &&
        typeof meanY === 'number' &&
        typeof sampleVarianceX === 'number' &&
        typeof sampleVarianceY === 'number') {
        var weightedVariance = ((n - 1) * sampleVarianceX +
            (m - 1) * sampleVarianceY) / (n + m - 2);

        return (meanX - meanY - difference) /
            Math.sqrt(weightedVariance * (1 / n + 1 / m));
    }
}

module.exports = tTestTwoSample;

},{"./mean":34,"./sample_variance":60}],72:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * For a sorted input, counting the number of unique values
 * is possible in constant time and constant memory. This is
 * a simple implementation of the algorithm.
 *
 * Values are compared with `===`, so objects and non-primitive objects
 * are not handled in any special way.
 *
 * @param {Array} input an array of primitive values.
 * @returns {number} count of unique values
 * @example
 * uniqueCountSorted([1, 2, 3]); // => 3
 * uniqueCountSorted([1, 1, 1]); // => 1
 */
function uniqueCountSorted(input/*: Array<any>*/)/*: number */ {
    var uniqueValueCount = 0,
        lastSeenValue;
    for (var i = 0; i < input.length; i++) {
        if (i === 0 || input[i] !== lastSeenValue) {
            lastSeenValue = input[i];
            uniqueValueCount++;
        }
    }
    return uniqueValueCount;
}

module.exports = uniqueCountSorted;

},{}],73:[function(require,module,exports){
'use strict';
/* @flow */

var sumNthPowerDeviations = require('./sum_nth_power_deviations');

/**
 * The [variance](http://en.wikipedia.org/wiki/Variance)
 * is the sum of squared deviations from the mean.
 *
 * This is an implementation of variance, not sample variance:
 * see the `sampleVariance` method if you want a sample measure.
 *
 * @param {Array<number>} x a population
 * @returns {number} variance: a value greater than or equal to zero.
 * zero indicates that all values are identical.
 * @example
 * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665
 */
function variance(x/*: Array<number> */)/*:number*/ {
    // The variance of no numbers is null
    if (x.length === 0) { return NaN; }

    // Find the mean of squared deviations between the
    // mean value and each value.
    return sumNthPowerDeviations(x, 2) / x.length;
}

module.exports = variance;

},{"./sum_nth_power_deviations":68}],74:[function(require,module,exports){
'use strict';
/* @flow */

/**
 * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).
 *
 * The standard score is the number of standard deviations an observation
 * or datum is above or below the mean. Thus, a positive standard score
 * represents a datum above the mean, while a negative standard score
 * represents a datum below the mean. It is a dimensionless quantity
 * obtained by subtracting the population mean from an individual raw
 * score and then dividing the difference by the population standard
 * deviation.
 *
 * The z-score is only defined if one knows the population parameters;
 * if one only has a sample set, then the analogous computation with
 * sample mean and sample standard deviation yields the
 * Student's t-statistic.
 *
 * @param {number} x
 * @param {number} mean
 * @param {number} standardDeviation
 * @return {number} z score
 * @example
 * zScore(78, 80, 5); // => -0.4
 */
function zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {
    return (x - mean) / standardDeviation;
}

module.exports = zScore;

},{}]},{},[1]);
